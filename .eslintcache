[{"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\index.js":"1","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\App.js":"2","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\context\\ThemeContext.js":"3","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"4","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js":"5","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"7","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"8","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"9","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"10","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js":"11","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"12","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"13","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPEligibiltyScreeningForm.js":"14","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPCommencementForm.js":"15","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js":"16","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPRegistrationForm.js":"17","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPVisit.js":"18","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPDiscontinuationsInterruptions.js":"19","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js":"20","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\ClinicHistory.js":"21","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\api.js":"22","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\apiCalls\\eligibility.js":"23","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\apiCalls\\visit.js":"24","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\reportWebVitals.js":"25","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Alert\\Alert.jsx":"26"},{"size":753,"mtime":1740764368758,"results":"27","hashOfConfig":"28"},{"size":1422,"mtime":1742907114321,"results":"29","hashOfConfig":"28"},{"size":9235,"mtime":1737716984546,"results":"30","hashOfConfig":"28"},{"size":1201,"mtime":1742907115620,"results":"31","hashOfConfig":"28"},{"size":101626,"mtime":1742907115682,"results":"32","hashOfConfig":"28"},{"size":6876,"mtime":1742907115645,"results":"33","hashOfConfig":"28"},{"size":3056,"mtime":1723964180851,"results":"34","hashOfConfig":"28"},{"size":9603,"mtime":1743032630468,"results":"35","hashOfConfig":"28"},{"size":6945,"mtime":1742907115674,"results":"36","hashOfConfig":"28"},{"size":8537,"mtime":1743032630465,"results":"37","hashOfConfig":"28"},{"size":40515,"mtime":1740764369714,"results":"38","hashOfConfig":"28"},{"size":14068,"mtime":1742907115551,"results":"39","hashOfConfig":"28"},{"size":24664,"mtime":1742907115555,"results":"40","hashOfConfig":"28"},{"size":110333,"mtime":1742907115723,"results":"41","hashOfConfig":"28"},{"size":36152,"mtime":1742907115689,"results":"42","hashOfConfig":"28"},{"size":2878,"mtime":1742907115451,"results":"43","hashOfConfig":"28"},{"size":21690,"mtime":1742907115734,"results":"44","hashOfConfig":"28"},{"size":11986,"mtime":1742907115743,"results":"45","hashOfConfig":"28"},{"size":33558,"mtime":1742907115697,"results":"46","hashOfConfig":"28"},{"size":116836,"mtime":1743032630456,"results":"47","hashOfConfig":"28"},{"size":12864,"mtime":1742907115411,"results":"48","hashOfConfig":"28"},{"size":483,"mtime":1743032630443,"results":"49","hashOfConfig":"28"},{"size":2091,"mtime":1742907115336,"results":"50","hashOfConfig":"28"},{"size":6477,"mtime":1737716984543,"results":"51","hashOfConfig":"28"},{"size":375,"mtime":1740764369853,"results":"52","hashOfConfig":"28"},{"size":1215,"mtime":1743032630451,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"1cbax3o",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\index.js",["109"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\App.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],["110","111"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\UpdatePatientEnrollment.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["142"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["143","144","145"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["146","147","148"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["149","150","151","152"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Patient\\Biometric.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["184","185","186"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["187","188","189"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPEligibiltyScreeningForm.js",["190","191","192","193","194","195","196"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPCommencementForm.js",["197","198","199"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Index.js",["200"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPRegistrationForm.js",["201","202","203","204","205","206"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPVisit.js",["207","208","209","210"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\PrepServices\\PrEPDiscontinuationsInterruptions.js",["211","212","213","214","215","216"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Home.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\ClinicHistory.js",["240","241","242"],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\apiCalls\\eligibility.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\apiCalls\\visit.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\gamaliel.dashua\\IdeaProjects\\PrEP-Module\\src\\main\\webapp\\jsx\\components\\Consultation\\Alert\\Alert.jsx",["243","244","245","246"],{"ruleId":"247","severity":1,"message":"248","line":4,"column":41,"nodeType":"249","messageId":"250","endLine":4,"endColumn":47},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"247","severity":1,"message":"255","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":16},{"ruleId":"247","severity":1,"message":"256","line":15,"column":10,"nodeType":"249","messageId":"250","endLine":15,"endColumn":21},{"ruleId":"247","severity":1,"message":"257","line":16,"column":13,"nodeType":"249","messageId":"250","endLine":16,"endColumn":16},{"ruleId":"247","severity":1,"message":"258","line":28,"column":10,"nodeType":"249","messageId":"250","endLine":28,"endColumn":17},{"ruleId":"247","severity":1,"message":"259","line":32,"column":10,"nodeType":"249","messageId":"250","endLine":32,"endColumn":18},{"ruleId":"247","severity":1,"message":"260","line":118,"column":17,"nodeType":"249","messageId":"250","endLine":118,"endColumn":25},{"ruleId":"247","severity":1,"message":"261","line":122,"column":18,"nodeType":"249","messageId":"250","endLine":122,"endColumn":27},{"ruleId":"247","severity":1,"message":"262","line":125,"column":10,"nodeType":"249","messageId":"250","endLine":125,"endColumn":22},{"ruleId":"247","severity":1,"message":"263","line":125,"column":24,"nodeType":"249","messageId":"250","endLine":125,"endColumn":39},{"ruleId":"247","severity":1,"message":"264","line":135,"column":10,"nodeType":"249","messageId":"250","endLine":135,"endColumn":36},{"ruleId":"247","severity":1,"message":"265","line":138,"column":22,"nodeType":"249","messageId":"250","endLine":138,"endColumn":35},{"ruleId":"247","severity":1,"message":"266","line":142,"column":9,"nodeType":"249","messageId":"250","endLine":142,"endColumn":19},{"ruleId":"247","severity":1,"message":"267","line":185,"column":27,"nodeType":"249","messageId":"250","endLine":185,"endColumn":45},{"ruleId":"247","severity":1,"message":"268","line":216,"column":13,"nodeType":"249","messageId":"250","endLine":216,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":219,"column":32,"nodeType":"271","messageId":"272","endLine":219,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":236,"column":25,"nodeType":"275","messageId":"276","endLine":236,"endColumn":27},{"ruleId":"273","severity":1,"message":"274","line":238,"column":68,"nodeType":"275","messageId":"276","endLine":238,"endColumn":70},{"ruleId":"273","severity":1,"message":"274","line":239,"column":68,"nodeType":"275","messageId":"276","endLine":239,"endColumn":70},{"ruleId":"273","severity":1,"message":"274","line":241,"column":25,"nodeType":"275","messageId":"276","endLine":241,"endColumn":27},{"ruleId":"277","severity":1,"message":"278","line":281,"column":6,"nodeType":"279","endLine":281,"endColumn":59,"suggestions":"280"},{"ruleId":"247","severity":1,"message":"281","line":335,"column":9,"nodeType":"249","messageId":"250","endLine":335,"endColumn":40},{"ruleId":"273","severity":1,"message":"274","line":441,"column":24,"nodeType":"275","messageId":"276","endLine":441,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":443,"column":31,"nodeType":"275","messageId":"276","endLine":443,"endColumn":33},{"ruleId":"273","severity":1,"message":"274","line":524,"column":45,"nodeType":"275","messageId":"276","endLine":524,"endColumn":47},{"ruleId":"273","severity":1,"message":"274","line":543,"column":21,"nodeType":"275","messageId":"276","endLine":543,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":598,"column":45,"nodeType":"275","messageId":"276","endLine":598,"endColumn":47},{"ruleId":"247","severity":1,"message":"268","line":608,"column":13,"nodeType":"249","messageId":"250","endLine":608,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":611,"column":24,"nodeType":"271","messageId":"272","endLine":611,"endColumn":26},{"ruleId":"273","severity":1,"message":"274","line":665,"column":35,"nodeType":"275","messageId":"276","endLine":665,"endColumn":37},{"ruleId":"247","severity":1,"message":"282","line":690,"column":15,"nodeType":"249","messageId":"250","endLine":690,"endColumn":23},{"ruleId":"277","severity":1,"message":"283","line":81,"column":6,"nodeType":"279","endLine":81,"endColumn":8,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":24,"fix":"289"},{"ruleId":"247","severity":1,"message":"290","line":72,"column":10,"nodeType":"249","messageId":"250","endLine":72,"endColumn":21},{"ruleId":"247","severity":1,"message":"291","line":73,"column":10,"nodeType":"249","messageId":"250","endLine":73,"endColumn":17},{"ruleId":"247","severity":1,"message":"292","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"293","line":3,"column":16,"nodeType":"249","messageId":"250","endLine":3,"endColumn":21},{"ruleId":"247","severity":1,"message":"294","line":45,"column":9,"nodeType":"249","messageId":"250","endLine":45,"endColumn":16},{"ruleId":"247","severity":1,"message":"295","line":75,"column":9,"nodeType":"249","messageId":"250","endLine":75,"endColumn":26},{"ruleId":"247","severity":1,"message":"296","line":82,"column":9,"nodeType":"249","messageId":"250","endLine":82,"endColumn":23},{"ruleId":"247","severity":1,"message":"297","line":89,"column":9,"nodeType":"249","messageId":"250","endLine":89,"endColumn":19},{"ruleId":"277","severity":1,"message":"298","line":104,"column":65,"nodeType":"279","endLine":104,"endColumn":67,"suggestions":"299"},{"ruleId":"247","severity":1,"message":"300","line":1,"column":38,"nodeType":"249","messageId":"250","endLine":1,"endColumn":44},{"ruleId":"247","severity":1,"message":"301","line":2,"column":9,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"302","line":2,"column":15,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"303","line":2,"column":28,"nodeType":"249","messageId":"250","endLine":2,"endColumn":37},{"ruleId":"247","severity":1,"message":"304","line":2,"column":38,"nodeType":"249","messageId":"250","endLine":2,"endColumn":42},{"ruleId":"247","severity":1,"message":"305","line":3,"column":15,"nodeType":"249","messageId":"250","endLine":3,"endColumn":19},{"ruleId":"247","severity":1,"message":"306","line":3,"column":20,"nodeType":"249","messageId":"250","endLine":3,"endColumn":28},{"ruleId":"247","severity":1,"message":"307","line":3,"column":44,"nodeType":"249","messageId":"250","endLine":3,"endColumn":54},{"ruleId":"247","severity":1,"message":"308","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"247","severity":1,"message":"309","line":13,"column":10,"nodeType":"249","messageId":"250","endLine":13,"endColumn":17},{"ruleId":"247","severity":1,"message":"310","line":15,"column":8,"nodeType":"249","messageId":"250","endLine":15,"endColumn":19},{"ruleId":"247","severity":1,"message":"311","line":19,"column":17,"nodeType":"249","messageId":"250","endLine":19,"endColumn":20},{"ruleId":"247","severity":1,"message":"312","line":20,"column":10,"nodeType":"249","messageId":"250","endLine":20,"endColumn":16},{"ruleId":"247","severity":1,"message":"313","line":20,"column":18,"nodeType":"249","messageId":"250","endLine":20,"endColumn":24},{"ruleId":"247","severity":1,"message":"314","line":20,"column":26,"nodeType":"249","messageId":"250","endLine":20,"endColumn":31},{"ruleId":"247","severity":1,"message":"315","line":20,"column":33,"nodeType":"249","messageId":"250","endLine":20,"endColumn":40},{"ruleId":"247","severity":1,"message":"316","line":22,"column":8,"nodeType":"249","messageId":"250","endLine":22,"endColumn":11},{"ruleId":"247","severity":1,"message":"317","line":23,"column":8,"nodeType":"249","messageId":"250","endLine":23,"endColumn":24},{"ruleId":"247","severity":1,"message":"318","line":24,"column":8,"nodeType":"249","messageId":"250","endLine":24,"endColumn":14},{"ruleId":"247","severity":1,"message":"319","line":25,"column":8,"nodeType":"249","messageId":"250","endLine":25,"endColumn":11},{"ruleId":"247","severity":1,"message":"320","line":26,"column":8,"nodeType":"249","messageId":"250","endLine":26,"endColumn":17},{"ruleId":"247","severity":1,"message":"321","line":29,"column":8,"nodeType":"249","messageId":"250","endLine":29,"endColumn":18},{"ruleId":"247","severity":1,"message":"322","line":38,"column":8,"nodeType":"249","messageId":"250","endLine":38,"endColumn":19},{"ruleId":"247","severity":1,"message":"323","line":115,"column":11,"nodeType":"249","messageId":"250","endLine":115,"endColumn":22},{"ruleId":"247","severity":1,"message":"324","line":119,"column":12,"nodeType":"249","messageId":"250","endLine":119,"endColumn":19},{"ruleId":"247","severity":1,"message":"291","line":120,"column":12,"nodeType":"249","messageId":"250","endLine":120,"endColumn":19},{"ruleId":"247","severity":1,"message":"325","line":123,"column":12,"nodeType":"249","messageId":"250","endLine":123,"endColumn":20},{"ruleId":"247","severity":1,"message":"326","line":129,"column":12,"nodeType":"249","messageId":"250","endLine":129,"endColumn":27},{"ruleId":"247","severity":1,"message":"327","line":131,"column":11,"nodeType":"249","messageId":"250","endLine":131,"endColumn":19},{"ruleId":"277","severity":1,"message":"328","line":191,"column":8,"nodeType":"279","endLine":191,"endColumn":10,"suggestions":"329"},{"ruleId":"247","severity":1,"message":"330","line":222,"column":11,"nodeType":"249","messageId":"250","endLine":222,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":24,"fix":"331"},{"ruleId":"247","severity":1,"message":"332","line":28,"column":10,"nodeType":"249","messageId":"250","endLine":28,"endColumn":20},{"ruleId":"277","severity":1,"message":"333","line":66,"column":10,"nodeType":"279","endLine":66,"endColumn":31,"suggestions":"334"},{"ruleId":"247","severity":1,"message":"332","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":20},{"ruleId":"277","severity":1,"message":"335","line":31,"column":6,"nodeType":"279","endLine":31,"endColumn":35,"suggestions":"336"},{"ruleId":"247","severity":1,"message":"337","line":269,"column":12,"nodeType":"249","messageId":"250","endLine":269,"endColumn":26},{"ruleId":"247","severity":1,"message":"338","line":23,"column":3,"nodeType":"249","messageId":"250","endLine":23,"endColumn":22},{"ruleId":"247","severity":1,"message":"339","line":25,"column":3,"nodeType":"249","messageId":"250","endLine":25,"endColumn":28},{"ruleId":"247","severity":1,"message":"340","line":27,"column":3,"nodeType":"249","messageId":"250","endLine":27,"endColumn":22},{"ruleId":"247","severity":1,"message":"341","line":30,"column":3,"nodeType":"249","messageId":"250","endLine":30,"endColumn":29},{"ruleId":"247","severity":1,"message":"342","line":161,"column":10,"nodeType":"249","messageId":"250","endLine":161,"endColumn":26},{"ruleId":"277","severity":1,"message":"343","line":273,"column":13,"nodeType":"271","endLine":287,"endColumn":4},{"ruleId":"277","severity":1,"message":"344","line":656,"column":6,"nodeType":"279","endLine":656,"endColumn":8,"suggestions":"345"},{"ruleId":"277","severity":1,"message":"346","line":146,"column":6,"nodeType":"279","endLine":146,"endColumn":8,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":279,"column":36,"nodeType":"350","messageId":"351","endLine":279,"endColumn":56,"fix":"352"},{"ruleId":"277","severity":1,"message":"353","line":478,"column":6,"nodeType":"279","endLine":478,"endColumn":8,"suggestions":"354"},{"ruleId":"277","severity":1,"message":"355","line":58,"column":48,"nodeType":"279","endLine":58,"endColumn":50,"suggestions":"356"},{"ruleId":"247","severity":1,"message":"304","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"357","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"358","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":18},{"ruleId":"247","severity":1,"message":"359","line":12,"column":10,"nodeType":"249","messageId":"250","endLine":12,"endColumn":20},{"ruleId":"277","severity":1,"message":"360","line":126,"column":6,"nodeType":"279","endLine":126,"endColumn":8,"suggestions":"361"},{"ruleId":"273","severity":1,"message":"274","line":218,"column":45,"nodeType":"275","messageId":"276","endLine":218,"endColumn":47},{"ruleId":"247","severity":1,"message":"362","line":69,"column":18,"nodeType":"249","messageId":"250","endLine":69,"endColumn":27},{"ruleId":"247","severity":1,"message":"363","line":70,"column":22,"nodeType":"249","messageId":"250","endLine":70,"endColumn":35},{"ruleId":"247","severity":1,"message":"364","line":71,"column":21,"nodeType":"249","messageId":"250","endLine":71,"endColumn":33},{"ruleId":"247","severity":1,"message":"365","line":72,"column":10,"nodeType":"249","messageId":"250","endLine":72,"endColumn":20},{"ruleId":"247","severity":1,"message":"304","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"357","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"366","line":109,"column":10,"nodeType":"249","messageId":"250","endLine":109,"endColumn":41},{"ruleId":"277","severity":1,"message":"367","line":128,"column":6,"nodeType":"279","endLine":128,"endColumn":8,"suggestions":"368"},{"ruleId":"277","severity":1,"message":"369","line":420,"column":6,"nodeType":"279","endLine":420,"endColumn":34,"suggestions":"370"},{"ruleId":"277","severity":1,"message":"371","line":424,"column":6,"nodeType":"279","endLine":424,"endColumn":30,"suggestions":"372"},{"ruleId":"247","severity":1,"message":"373","line":106,"column":10,"nodeType":"249","messageId":"250","endLine":106,"endColumn":20},{"ruleId":"247","severity":1,"message":"374","line":108,"column":10,"nodeType":"249","messageId":"250","endLine":108,"endColumn":19},{"ruleId":"247","severity":1,"message":"375","line":111,"column":10,"nodeType":"249","messageId":"250","endLine":111,"endColumn":24},{"ruleId":"247","severity":1,"message":"376","line":113,"column":10,"nodeType":"249","messageId":"250","endLine":113,"endColumn":30},{"ruleId":"247","severity":1,"message":"377","line":123,"column":10,"nodeType":"249","messageId":"250","endLine":123,"endColumn":32},{"ruleId":"247","severity":1,"message":"342","line":129,"column":10,"nodeType":"249","messageId":"250","endLine":129,"endColumn":26},{"ruleId":"269","severity":1,"message":"270","line":263,"column":31,"nodeType":"271","messageId":"272","endLine":263,"endColumn":33},{"ruleId":"269","severity":1,"message":"270","line":264,"column":31,"nodeType":"271","messageId":"272","endLine":264,"endColumn":33},{"ruleId":"348","severity":1,"message":"378","line":648,"column":42,"nodeType":"350","messageId":"351","endLine":648,"endColumn":56,"fix":"379"},{"ruleId":"277","severity":1,"message":"380","line":1024,"column":6,"nodeType":"279","endLine":1024,"endColumn":38,"suggestions":"381"},{"ruleId":"277","severity":1,"message":"382","line":1036,"column":6,"nodeType":"279","endLine":1036,"endColumn":32,"suggestions":"383"},{"ruleId":"277","severity":1,"message":"384","line":1055,"column":6,"nodeType":"279","endLine":1055,"endColumn":71,"suggestions":"385"},{"ruleId":"277","severity":1,"message":"343","line":1080,"column":13,"nodeType":"271","endLine":1089,"endColumn":4},{"ruleId":"277","severity":1,"message":"386","line":1089,"column":6,"nodeType":"279","endLine":1089,"endColumn":27,"suggestions":"387"},{"ruleId":"277","severity":1,"message":"343","line":1091,"column":13,"nodeType":"271","endLine":1116,"endColumn":4},{"ruleId":"277","severity":1,"message":"388","line":1116,"column":6,"nodeType":"279","endLine":1116,"endColumn":27,"suggestions":"389"},{"ruleId":"277","severity":1,"message":"390","line":1125,"column":6,"nodeType":"279","endLine":1125,"endColumn":8,"suggestions":"391"},{"ruleId":"247","severity":1,"message":"392","line":1252,"column":17,"nodeType":"249","messageId":"250","endLine":1252,"endColumn":31},{"ruleId":"247","severity":1,"message":"393","line":1274,"column":17,"nodeType":"249","messageId":"250","endLine":1274,"endColumn":29},{"ruleId":"394","severity":1,"message":"395","line":1798,"column":15,"nodeType":"396","endLine":1798,"endColumn":45},{"ruleId":"273","severity":1,"message":"274","line":1841,"column":40,"nodeType":"275","messageId":"276","endLine":1841,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":1845,"column":36,"nodeType":"275","messageId":"276","endLine":1845,"endColumn":38},{"ruleId":"394","severity":1,"message":"395","line":3093,"column":17,"nodeType":"396","endLine":3093,"endColumn":47},{"ruleId":"285","severity":1,"message":"286","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":24,"fix":"397"},{"ruleId":"247","severity":1,"message":"398","line":56,"column":7,"nodeType":"249","messageId":"250","endLine":56,"endColumn":16},{"ruleId":"277","severity":1,"message":"399","line":113,"column":8,"nodeType":"279","endLine":113,"endColumn":61,"suggestions":"400"},{"ruleId":"247","severity":1,"message":"401","line":1,"column":10,"nodeType":"249","messageId":"250","endLine":1,"endColumn":21},{"ruleId":"247","severity":1,"message":"305","line":1,"column":23,"nodeType":"249","messageId":"250","endLine":1,"endColumn":27},{"ruleId":"247","severity":1,"message":"307","line":1,"column":29,"nodeType":"249","messageId":"250","endLine":1,"endColumn":39},{"ruleId":"247","severity":1,"message":"402","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":20},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["403"],"no-negated-in-lhs",["404"],"'format' is defined but never used.","'yupResolver' is defined but never used.","'yup' is defined but never used.","'useForm' is defined but never used.","'getValue' is defined but never used.","'setToday' is assigned a value but never used.","'setSaving' is assigned a value but never used.","'editRelative' is assigned a value but never used.","'setEditRelative' is assigned a value but never used.","'topLevelUnitCountryOptions' is assigned a value but never used.","'setPatientDTO' is assigned a value but never used.","'userDetail' is assigned a value but never used.","'setHideTargetGroup' is assigned a value but never used.","'actualcontacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'basicInfo', 'loadEducation', 'loadGenders', 'loadMaritalStatus', 'loadOccupation', 'loadRelationships', and 'loadTopLevelCountry'. Either include them or remove the dependency array.","ArrayExpression",["405"],"'loadOrganisationUnitsByParentId' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientObject'. Either include it or remove the dependency array.",["406"],"no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"407","text":"408"},"'patientList' is assigned a value but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'Popup' is defined but never used.","'history' is assigned a value but never used.","'getHospitalNumber' is assigned a value but never used.","'getPhoneNumber' is assigned a value but never used.","'getAddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'patientObj?.sendCabLaAlert'. Either include it or remove the dependency array.",["409"],"'useRef' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Select' is defined but never used.","'Button2' is defined but never used.","'ThumbUpIcon' is defined but never used.","'red' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'Image' is defined but never used.","'Segment' is defined but never used.","'Box' is defined but never used.","'CircularProgress' is defined but never used.","'Button' is defined but never used.","'Fab' is defined but never used.","'CheckIcon' is defined but never used.","'Typography' is defined but never used.","'UpgradeIcon' is defined but never used.","'permissions' is assigned a value but never used.","'devices' is assigned a value but never used.","'tryAgain' is assigned a value but never used.","'selectedFingers' is assigned a value but never used.","'buttonSx' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clear_storelist' and 'getPersonBiometrics'. Either include them or remove the dependency array.",["410"],"'biometricFingers' is assigned a value but never used.",{"range":"411","text":"408"},"'makeStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'PatientHistory'. Either include it or remove the dependency array.",["412"],"React Hook useEffect has missing dependencies: 'RecentActivities' and 'Summary'. Either include them or remove the dependency array.",["413"],"'joinActivities' is defined but never used.","'savePrepEligibility' is defined but never used.","'getPatientPrepEligibility' is defined but never used.","'getRecentActivities' is defined but never used.","'getLiverFunctionTestResult' is defined but never used.","'recentActivities' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'getRecentActivities'. Either include it or remove the dependency array.",["414"],"React Hook useEffect has missing dependencies: 'getPatientCommencement', 'getPatientDTOObj', 'props.activeContent.actionType', and 'props.activeContent.id'. Either include them or remove the dependency array. If 'setDisabledField' needs the current value of 'props.activeContent.actionType', you can also switch to useReducer instead of useState and read 'props.activeContent.actionType' in the reducer.",["415"],"no-useless-computed-key","Unnecessarily computed property ['datereferred'] found.","Property","unnecessarilyComputedProperty",{"range":"416","text":"417"},"React Hook useEffect has a missing dependency: 'getLatestFromEligibility'. Either include it or remove the dependency array.",["418"],"React Hook useEffect has a missing dependency: 'fetchListOfEncounters'. Either include it or remove the dependency array.",["419"],"'Row' is defined but never used.","'CancelIcon' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'GetPatientDTOObj', 'GetPatientPrepEnrollment', 'props.activeContent.actionType', and 'props.activeContent.id'. Either include them or remove the dependency array. If 'setSisabledField' needs the current value of 'props.activeContent.actionType', you can also switch to useReducer instead of useState and read 'props.activeContent.actionType' in the reducer.",["420"],"'setErrors' is assigned a value but never used.","'setCarePoints' is assigned a value but never used.","'setHivStatus' is assigned a value but never used.","'transferIn' is assigned a value but never used.","'reasonForDiscontinuationOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetPatientDTOObj', 'props.activeContent.actionType', and 'props.activeContent.id'. Either include them or remove the dependency array. If 'setDisabledField' needs the current value of 'props.activeContent.actionType', you can also switch to useReducer instead of useState and read 'props.activeContent.actionType' in the reducer.",["421"],"React Hook useEffect has a missing dependency: 'props.activeContent.actionType'. Either include it or remove the dependency array.",["422"],"React Hook useEffect has a missing dependency: 'GetPatientInterruption'. Either include it or remove the dependency array.",["423"],"'prepStatus' is assigned a value but never used.","'htsResult' is assigned a value but never used.","'labTestOptions' is assigned a value but never used.","'creatinineTestResult' is assigned a value but never used.","'selectedPopulationType' is assigned a value but never used.","Unnecessarily computed property ['others'] found.",{"range":"424","text":"425"},"React Hook useEffect has a missing dependency: 'emptyObjValues'. Either include it or remove the dependency array.",["426"],"React Hook useEffect has a missing dependency: 'populationType'. Either include it or remove the dependency array.",["427"],"React Hook useEffect has a missing dependency: 'visitTypeDurationMapping'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has a missing dependency: 'getPrepEligibilityObj'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has missing dependencies: 'getPatientDtoObj', 'getPatientVisit', 'getPrepEligibilityObj', and 'getTestGroup'. Either include them or remove the dependency array.",["430"],"React Hook useEffect has missing dependencies: 'getHivResult', 'getLatestFromEligibility', and 'getRecentActivities'. Either include them or remove the dependency array.",["431"],"'updateResponse' is assigned a value but never used.","'postResponse' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",{"range":"432","text":"408"},"'useStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["433"],"'CardContent' is defined but never used.","'CardFooter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},[154,168],"token",{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},[184,198],{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},[7479,7495],"'datereferred'",{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},[19676,19686],"'others'",{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},[184,198],{"desc":"474","fix":"475"},"Update the dependencies array to be: [patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",{"range":"476","text":"477"},"Update the dependencies array to be: [PatientObject]",{"range":"478","text":"479"},"Update the dependencies array to be: [patientObj?.sendCabLaAlert]",{"range":"480","text":"481"},"Update the dependencies array to be: [clear_storelist, getPersonBiometrics]",{"range":"482","text":"483"},"Update the dependencies array to be: [PatientHistory, props.patientObj.id]",{"range":"484","text":"485"},"Update the dependencies array to be: [RecentActivities, Summary, props.patientObj.personId]",{"range":"486","text":"487"},"Update the dependencies array to be: [getRecentActivities]",{"range":"488","text":"489"},"Update the dependencies array to be: [getPatientCommencement, getPatientDTOObj, props.activeContent.actionType, props.activeContent.id]",{"range":"490","text":"491"},"Update the dependencies array to be: [getLatestFromEligibility]",{"range":"492","text":"493"},"Update the dependencies array to be: [fetchListOfEncounters]",{"range":"494","text":"495"},"Update the dependencies array to be: [GetPatientDTOObj, GetPatientPrepEnrollment, props.activeContent.actionType, props.activeContent.id]",{"range":"496","text":"497"},"Update the dependencies array to be: [GetPatientDTOObj, props.activeContent.actionType, props.activeContent.id]",{"range":"498","text":"499"},"Update the dependencies array to be: [objValues.interruptionType, props.activeContent.actionType]",{"range":"500","text":"501"},"Update the dependencies array to be: [GetPatientInterruption, props.activeContent.id]",{"range":"502","text":"503"},"Update the dependencies array to be: [emptyObjValues, props.activeContent.actionType]",{"range":"504","text":"505"},"Update the dependencies array to be: [objValues.populationType, populationType]",{"range":"506","text":"507"},"Update the dependencies array to be: [latestFromEligibility, eligibilityVisitDateSync, populationType, visitTypeDurationMapping]",{"range":"508","text":"509"},"Update the dependencies array to be: [getPrepEligibilityObj, props.activeContent]",{"range":"510","text":"511"},"Update the dependencies array to be: [getPatientDtoObj, getPatientVisit, getPrepEligibilityObj, getTestGroup, props.activeContent]",{"range":"512","text":"513"},"Update the dependencies array to be: [getHivResult, getLatestFromEligibility, getRecentActivities]",{"range":"514","text":"515"},"Update the dependencies array to be: [props.patientObj.id, props.activeContent.actionType, props]",{"range":"516","text":"517"},[9809,9862],"[patientObj, patientId, basicInfo.dateOfRegistration, loadGenders, loadMaritalStatus, loadEducation, loadOccupation, loadRelationships, loadTopLevelCountry, basicInfo]",[2504,2506],"[PatientObject]",[3384,3386],"[patientObj?.sendCabLaAlert]",[6965,6967],"[clear_storelist, getPersonBiometrics]",[3326,3347],"[PatientHistory, props.patientObj.id]",[1140,1169],"[RecentActivities, Summary, props.patientObj.personId]",[20694,20696],"[getRecentActivities]",[3922,3924],"[getPatientCommencement, getPatientDTOObj, props.activeContent.actionType, props.activeContent.id]",[14562,14564],"[getLatestFromEligibility]",[1665,1667],"[fetchListOfEncounters]",[3479,3481],"[GetPatientDTOObj, GetPatientPrepEnrollment, props.activeContent.actionType, props.activeContent.id]",[3461,3463],"[GetPatientDTOObj, props.activeContent.actionType, props.activeContent.id]",[12358,12386],"[objValues.interruptionType, props.activeContent.actionType]",[12471,12495],"[GetPatientInterruption, props.activeContent.id]",[31216,31248],"[emptyObjValues, props.activeContent.actionType]",[31588,31614],"[objValues.populationType, populationType]",[32378,32443],"[latestFromEligibility, eligibilityVisitDateSync, populationType, visitTypeDurationMapping]",[33422,33443],"[getPrepEligibilityObj, props.activeContent]",[34642,34663],"[getPatientDtoObj, getPatientVisit, getPrepEligibilityObj, getTestGroup, props.activeContent]",[34878,34880],"[getHivResult, getLatestFromEligibility, getRecentActivities]",[4236,4289],"[props.patientObj.id, props.activeContent.actionType, props]"]