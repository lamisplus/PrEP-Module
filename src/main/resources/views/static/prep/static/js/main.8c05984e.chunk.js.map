{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Consultation/Alert/Alert.jsx","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/apiCalls/eligibility.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","statusLabel","width","display","textAlign","Patients","classes","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","concat","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","_jsxs","Label","className","color","size","style","position","prepStatus","sendCabLaAlert","right","transform","height","padding","actions","Link","to","pathname","state","patientObj","ButtonGroup","variant","backgroundColor","Button","margin","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","Alert","_ref","show","body","nextAppointmentDate","onClose","warningIconColorConfig","useMemo","Modal","centered","Header","Title","Footer","onClick","_Fragment","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","showReminder","setShowReminder","Reminder","toggleModal","Date","Accordion","AccordionSummary","md","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","today","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sexAtBirth","phoneNumber","address","Typography","activeContent","obj","newStatus","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","backdrop","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","item","viewable","Icon","editable","card","flexDirection","form","submit","cardBottom","marginBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForSwitchOptions","setReasonForSwitchOptions","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","setLiverFunctionTestResult","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","reasonForSwitch","lftConducted","dateLiverFunctionTestResults","score","riskAssessment","setRiskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessmentPartner","setRiskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","setStiScreening","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","drugHistory","setDrugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","assessmentForPepIndication","setAssessmentForPepIndication","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","servicesReceivedByClient","setServicesReceivedByClient","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","assessmentForAcuteHivInfection","setAssessmentForAcuteHivInfection","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","assessmentForPrepEligibility","setAssessmentForPrepEligibility","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","getCounselingType","getReasonForDecline","getPopulationType","getPregnancyStatus","getVisitType","getPatientPrepEligibility","console","handleInputChangeRiskAssessment","riskCount","Object","values","filter","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","handleInputChangeDrugHistory","handleInputChangeAssessmentForPepIndication","handleInputChangeAssessmentForAcuteHivInfection","handleInputChangeAssessmentForPrepEligibility","handleInputChangeServicesReceivedByClient","log","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","prevValues","prevHistory","CardBody","FormGroup","onKeyDown","min","patientDetail","dateHivPositive","dateOfRegistration","max","Input","FormLabel","for","event","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","personResponseDto","sex","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","find","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_filterOutLastRegimen","_props$recentActiviti","_prepType$filter","_prepType$filter$filt","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","creatinineTestResult","setCreatinineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","prepRiskReductionPlan","setPrepRiskReductionPlan","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","prepNotedSideEffects","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepGiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","creatinine","urinalysisResult","creatinineResult","why","otherDrugs","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","creatinineTest","setCreatinineTest","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","testsOptions","fullPrepTypeList","setFullPrepTypeList","checkEligibleForCabLa","currentDate","regimenList","isEligibleForCABLA","reg","pTypes","getPrepEligibilityObj","PrepRegimen","getLatestFromEligibility","latestEligibility","sort","a","b","dateA","eligibilityVisitDateSync","setEligibilityVisitDateSync","durationInDays","duration","date1","date2","checkDateMismatch","eligibilityDate","handleInputChangeUrinalysisTest","handleInputChangeCreatinineTest","creatinineTestDate","handleInputChangeOtherTest","localId","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","urinalysisTestDate","_props$patientObj3","uuid","previousPrepStatus","activeTab","handleError","updatePreviousPrepStatusAndSubmit","personUuid","autoPopulate","visitTypeDurationMapping","updateTest","testType","setTestFunction","testData","_await$getPrepRiskRed","_await$getAdherenceLe","_getSyndromicStiScree","_getPrepStatus","_getHts","_await$getPrepSideEff","_getPatientDtoObj","_getWhyPoorFairAdhere","_getTestGroup","_getPrepUrinalysisRes","_getPrepOtherTests","_getHapetitisScreenin","_getSyphilisResult","_getPregnancyStatus","_getPrepEntryPoint","_getVisitType","_getFamilyPlanningMet","getAdherenceLevel","getPrepSideEffects","_response$data","_x$labTests","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","_response$data2","JSON","parse","stringify","getPatientVisit","_response$data3","_response$data4","_response$data5","_response$data5$","_response$data6","_response$data6$","setNotedSideEffects","prev","PREP_VISIT_TYPE_DISCONTINUATION","PREP_VISIT_TYPE_INITIATION","PREP_VISIT_TYPE_METHOD_SWITCH","PREP_VISIT_TYPE_NO_PREP_PROVIDED","PREP_VISIT_TYPE_RESTART","PREP_VISIT_TYPE_SECOND_INITIATION","PREP_VISIT_TYPE_TRANSFER_IN","dateString","daysToAdd","isNaN","getTime","setDate","year","month","String","padStart","day","addDaysToDate","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","effect","plan","pType","codeSet","lastRegimenId","getOptions","_objValues$otherTests","otherTestName","eachTest","handleRemoveTest","test","TiTrash","component","AddIcon","handleCreateNewTest","comment","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setPrepRegimen","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setPregnant","setPrepEntryPoint","urinalysisTestResult","setUrinalysisTestResult","getPatientDTOObj","fetchPrepRegimen","fetchPrepEntryPoint","fetchPrepType","fetchLiverFunctionTestResult","fetchHistoryOfDrugToDrugInteraction","fetchPrepUrinalysisResult","getPatientCommencement","isBefore","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","reasonForDiscontinuationOptions","setReasonForDiscontinuationOptions","PREP_STATUS","PREP_STATUS_STOPPED_REASON","GetPatientDTOObj","CAUSE_DEATH","getReasonForDiscontinuationOptions","linkToArt","prevErrors","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","organisationUnitId","postalCode","assignerId","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.8c05984e.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzM3NTg1MDkyfQ.ej_19XKt52zX0palBlTMtHZkc2f_FcfT7QK0X27KuIQwJfsWIjwaG51O6UFsKWdvj_fo_0AjNrvamixuvp77qg'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { token as token, url as baseUrl } from './../../../api';\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport '@reach/menu-button/styles.css';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n// Create styles using makeStyles\r\nconst useStyles = makeStyles({\r\n  statusLabel: {\r\n    width: '150px', // Set a constant width for the Label component\r\n    display: 'inline-block', // Ensure the width is respected\r\n    textAlign: 'center', // Center the text within the label\r\n  },\r\n});\r\n\r\nconst Patients = props => {\r\n  const classes = useStyles(); // Use the styles\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          { title: 'Patient Name', field: 'name', hidden: showPPI },\r\n          {\r\n            title: 'Hospital Number',\r\n            field: 'hospital_number',\r\n            filtering: false,\r\n          },\r\n          { title: 'PrEP Code', field: 'clientCode', filtering: false },\r\n          { title: 'Sex', field: 'gender', filtering: false },\r\n          { title: 'Age', field: 'age', filtering: false },\r\n          {\r\n            title: 'PrEP Status',\r\n            field: 'status',\r\n            filtering: false,\r\n          },\r\n          { title: 'Actions', field: 'actions', filtering: false },\r\n        ]}\r\n        data={query =>\r\n          new Promise((resolve, reject) => {\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then(response => response)\r\n              .then(result => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.(row => ({\r\n                    name: row.firstName + ' ' + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : '',\r\n                    age: row.age,\r\n                    status: (\r\n                      <Label\r\n                        className={classes.statusLabel}\r\n                        color=\"blue\"\r\n                        size=\"mini\"\r\n                        style={{ position: 'relative' }}\r\n                      >\r\n                        {row.prepStatus}\r\n                        {!!row.sendCabLaAlert && (\r\n                          <span\r\n                            className=\"position-absolute top-50 translate-middle-y bg-info border border-light rounded-circle\"\r\n                            style={{\r\n                              right: '-1%',\r\n                              transform: 'translate(50%, 0)',\r\n                              width: '1em',\r\n                              height: '1em',\r\n                              padding: 0,\r\n                              display: 'block',\r\n                            }}\r\n                          />\r\n                        )}\r\n                      </Label>\r\n                    ),\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: '/patient-dashboard',\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: 'rgb(153, 46, 98)',\r\n                              height: '30px',\r\n                              width: '215px',\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{\r\n                                backgroundColor: 'rgb(153, 46, 98)',\r\n                                margin: 'auto',\r\n                              }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: '12px',\r\n                                  color: '#fff',\r\n                                  fontWeight: 'bolder',\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              });\r\n          })\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n          },\r\n          searchFieldStyle: {\r\n            width: '200%',\r\n            margingLeft: '250px',\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: 'left',\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: '#014d88', fontWeight: 'bold' }}>\r\n                    {' '}\r\n                    SHOW PII{' '}\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Card, Tab, Tabs } from 'react-bootstrap';\r\nimport PatientList from './Patient/PatientList';\r\n\r\nconst divStyle = {\r\n  borderRadius: '2px',\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ marginTop: '3em' }} className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PrEP</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={k => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { CardContent, Card, CardHeader, Button } from '@material-ui/core';\r\nimport React, { useMemo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { CardFooter } from 'reactstrap';\r\n\r\nexport const Alert = ({\r\n  show,\r\n  title,\r\n  body,\r\n  nextAppointmentDate,\r\n  onClose,\r\n  patientObj,\r\n}) => {\r\n  const warningIconColorConfig = useMemo(\r\n    () => ({\r\n      0: 'initial',\r\n      1: '#F57C00',\r\n      2: '#F44336',\r\n    }),\r\n    []\r\n  );\r\n  if (!show) return <></>;\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      className=\"fade text-grey\"\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title\r\n          id=\"contained-modal-title-vcenter\"\r\n          style={{ color: 'rgb(1, 77, 136)' }}\r\n        >\r\n          <h2 className=\"d-flex align-items-center\">\r\n            {' '}\r\n            <span\r\n              className=\"p-2\"\r\n              style={{\r\n                fontSize: '1.2em',\r\n                color: warningIconColorConfig[`${patientObj?.sendCabLaAlert}`],\r\n              }}\r\n            >\r\n              {' '}\r\n              ⚠{' '}\r\n            </span>{' '}\r\n            <span style={{ fontSize: '.7em' }}>{title}</span>\r\n          </h2>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          Hello there! <br />\r\n          <br /> Kindly be reminded that{' '}\r\n          <span className=\"text-primary\">{patientObj?.firstName}'s</span> {body}{' '}\r\n          <span style={{ color: '#FF6347' }}>\r\n            {`[${nextAppointmentDate}]`}.\r\n          </span>{' '}\r\n          You may want to reach out them as soon as possible.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          onClick={onClose}\r\n          style={{\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n            margin: 'auto .2em',\r\n          }}\r\n          size=\"small\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nimport { Alert as Reminder } from '../Consultation/Alert/Alert';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject);\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now + ' year(s)';\r\n  };\r\n  const getHospitalNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(\r\n      obj => obj.type === 'HospitalNumber'\r\n    );\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(\r\n      obj => obj?.type === 'phone'\r\n    );\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = identifier => {\r\n    console.log('identifier: ', identifier);\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress =\r\n      Array.isArray(address?.line) && address?.line[0] != null\r\n        ? address?.line[0]\r\n        : '';\r\n    const landMark =\r\n      address && address?.city && address?.city !== null ? address?.city : '';\r\n    return address ? houseAddress + ' ' + landMark : '';\r\n  };\r\n  const reminderConfig = useMemo(() => {\r\n    return [\r\n      null,\r\n      {\r\n        title: 'Upcoming CabLA Appointment!',\r\n        body: `CabLA appointment is due tommorrow`,\r\n      },\r\n      {\r\n        title: 'Missed CabLA Appointment!',\r\n        body: `CabLA appointment is overdue!`,\r\n      },\r\n    ];\r\n  }, []);\r\n  const getReminderAlert = sendCabLaAlert => reminderConfig[sendCabLaAlert];\r\n\r\n  const [showReminder, setShowReminder] = useState(0);\r\n  const toggleModal = () => setShowReminder(0);\r\n\r\n  useEffect(() => {\r\n    setShowReminder(patientObj?.sendCabLaAlert);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Reminder\r\n        show={showReminder}\r\n        title={showReminder?.title}\r\n        body={showReminder?.body}\r\n        patientObj={patientObj}\r\n        onClose={toggleModal}\r\n        nextAppointmentDate={Date()}\r\n      />\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {patientObj?.firstName + ' ' + patientObj?.surname}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculate_age(\r\n                            moment(patientObj?.dateOfBirth).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth || patientObj?.gender}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input } from 'reactstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  FormLabel,\r\n  makeStyles,\r\n  Button as MatButton,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Message, Dropdown } from 'semantic-ui-react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {\r\n  savePrepEligibility,\r\n  getCounselingType,\r\n  getPatientPrepEligibility,\r\n  getVisitType,\r\n  getRecentActivities,\r\n  getPregnancyStatus,\r\n  getReasonForDecline,\r\n  getLiverFunctionTestResult,\r\n} from '../../../apiCalls/eligibility';\r\n\r\nimport '../../index.css';\r\nimport { getPopulationType } from '../../../apiCalls/eligibility';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult?.map(value => ({\r\n    value: value?.code,\r\n    label: value?.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options || []}\r\n      selected={selectedValues || []}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '',\r\n    lastTest: '',\r\n  });\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCounselingType((await getCounselingType()).data);\r\n    setReasonForDecline((await getReasonForDecline()).data);\r\n    setPopulationType((await getPopulationType()).data);\r\n    setPregnancyStatus((await getPregnancyStatus()).data);\r\n    setVisitType((await getVisitType()).data);\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const getPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const {\r\n          personalHivRiskAssessment,\r\n          sexPartnerRisk,\r\n          stiScreening,\r\n          drugUseHistory,\r\n          assessmentForPepIndication,\r\n          assessmentForAcuteHivInfection,\r\n          servicesReceivedByClient,\r\n          assessmentForPrepEligibility,\r\n        } = response.data;\r\n        setObjValues(response.data);\r\n        setRiskAssessment(personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(sexPartnerRisk);\r\n        setStiScreening(stiScreening);\r\n        setDrugHistory(drugUseHistory);\r\n        setAssessmentForPepIndication(assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(assessmentForAcuteHivInfection);\r\n        setServicesReceivedByClient(servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(assessmentForPrepEligibility);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patient eligibility data:', error);\r\n      });\r\n  };\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeRiskAssessment = e => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.visitDate = objValues.visitDate ? '' : '⚠ This field is required.';\r\n    temp.lftConducted = objValues.lftConducted\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? '⚠ LFT is required'\r\n        : '';\r\n    temp.dateLiverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      !objValues.dateLiverFunctionTestResults\r\n        ? '⚠ This field is required.'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : '⚠ This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : '⚠ This field is required.';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  useEffect(() => console.log('temp: ', temp));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep eligilibility saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep eligilibility saved successfull! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ⚠', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n    getReasonForSwitch();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (objValues.lftConducted === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n    }\r\n  }, [objValues.lftConducted]);\r\n  useEffect(() => {\r\n    if (drugHistory.hivTestedBefore === 'false') {\r\n      setDrugHistory(prevHistory => ({\r\n        ...prevHistory,\r\n        lastTest: '',\r\n      }));\r\n    }\r\n  }, [drugHistory.hivTestedBefore]);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h1 style={{ fontSize: '1.1rem' }}>\r\n            PrEP Eligibility Screening Form\r\n          </h1>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>Reason for switch</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option value={value.code}> {value.display} </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import axios from 'axios';\r\nimport { token, url as baseUrl } from '../api';\r\n\r\nexport const getPatientPrepEligibility = async id => {\r\n  return await axios.get(`${baseUrl}prep/eligibility/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getCounselingType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getVisitType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getReasonForDecline = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPopulationType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getPregnancyStatus = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getRecentActivities = async personId => {\r\n  return await axios.get(\r\n    `${baseUrl}prep/activities/patients/${personId}?full=true`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiverFunctionTestResult = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const savePrepEligibility = async (id, objValues, actionType) => {\r\n  const url =\r\n    actionType === 'update'\r\n      ? `${baseUrl}prep-eligibility/${id}`\r\n      : `${baseUrl}prep/eligibility`;\r\n  const method = actionType === 'update' ? 'put' : 'post';\r\n  return await axios[method](url, objValues, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label } from 'semantic-ui-react';\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { makeStyles, Button as MatButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\nexport const CleanupWrapper = ({ isVisible, cleanup, children }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isVisible) {\r\n        cleanup();\r\n      }\r\n    };\r\n  }, [isVisible, cleanup]);\r\n  return isVisible ? children : null;\r\n};\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [creatinineTestResult, setCreatinineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    prepNotedSideEffects: [],\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepGiven: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    creatinine: {},\r\n    urinalysisResult: '',\r\n    creatinineResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [creatinineTest, setCreatinineTest] = useState({\r\n    creatinineTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let temp = { ...errors };\r\n  let testsOptions = [];\r\n\r\n  const getPregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFullPrepTypeList(response.data);\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getTestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response?.data?.map(x => {\r\n          x?.labTests?.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const [fullPrepTypeList, setFullPrepTypeList] = useState([]);\r\n  const checkEligibleForCabLa = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          let isEligibleForCABLA = response?.data;\r\n          let reg = regimenList?.filter(\r\n            each => each.code !== 'CAB-LA(600mg/3mL)'\r\n          );\r\n          let pTypes = [...prepType]?.filter(\r\n            each => each.code !== 'PREP_TYPE_INJECTIBLES'\r\n          );\r\n          if (\r\n            isEligibleForCABLA ||\r\n            objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' ||\r\n            ['update'].includes(props.activeContent.actionType)\r\n          ) {\r\n            setPrepType(fullPrepTypeList);\r\n            setprepRegimen(regimenList);\r\n          } else {\r\n            setPrepType(pTypes);\r\n            setprepRegimen(reg);\r\n          }\r\n          return response?.data;\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHivResult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            '⚠ No HTS record found. Atleast, 1 test result is required to proceed'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('👍 HTS record found. You may proceed ✔');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPatientDtoObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        checkEligibleForCabLa(currentDate, response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepRiskReductionPlan = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepSideEffects = async () => {\r\n    return await axios.get(\r\n      `${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n  };\r\n\r\n  const getHts = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  function sortByVisitDateDescending(data) {\r\n    return data.sort((a, b) => {\r\n      const dateA = new Date(a.visitDate);\r\n      const dateB = new Date(b.visitDate);\r\n      return dateB - dateA;\r\n    });\r\n  }\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = sortByVisitDateDescending(response?.data)[0];\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPopulationType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getVisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getWhyPoorFairAdherence = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyndromicStiScreening = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getCreatinineTestResultOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CREATININE_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCreatinineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepOtherTests = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyphilisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHapetitisScreeningResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getFamilyPlanningMethod = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  async function getAdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const [eligibilityVisitDateSync, setEligibilityVisitDateSync] =\r\n    useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      setEligibilityVisitDateSync(\r\n        areDatesInSync(e.target.value, latestFromEligibility?.visitDate)\r\n      );\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      checkDateMismatch(e.target.value, latestFromEligibility?.visitDate);\r\n    } else if (e.target.name === 'otherPrepGiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const checkDateMismatch = (visitDate, eligibilityDate) => {\r\n    if (visitDate !== eligibilityDate) {\r\n      toast.error(\r\n        '⚠ Please enter a date that matches the latest eligibility date!'\r\n      );\r\n    } else {\r\n      toast.success(\r\n        'The visit date matches the latest eligibility date. Great job! 👍'\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!eligibilityVisitDateSync) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: '',\r\n        visitType: '',\r\n        pregnant: '',\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n      setSelectedPopulationType('');\r\n    }\r\n  }, [eligibilityVisitDateSync]);\r\n\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCreatinineTest = e => {\r\n    setErrors({\r\n      ...errors,\r\n      creatinineResult: '',\r\n      creatinineTestDate: '',\r\n    });\r\n    setCreatinineTest({ ...creatinineTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n    temp[index][e.target.name] = e.target.value;\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev?.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (urinalysisTest?.urinalysisTest === 'Yes') {\r\n      setUrinalysisTest({ urinalysisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setUrinalysisTest({ ...urinalysisTest, urinalysisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxCreatinineTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (creatinineTest?.creatinineTest === 'Yes') {\r\n      setCreatinineTest({ creatinineTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setCreatinineTest({ ...creatinineTest, creatinineTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (syphilisTest?.syphilisTest === 'Yes') {\r\n      setSyphilisTest({\r\n        syphilisTest: 'No',\r\n        testDate: '',\r\n        result: '',\r\n        others: '',\r\n      });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, syphilisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (hepatitisTest?.hepatitisTest === 'Yes') {\r\n      setHepatitisTest({ hepatitisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setHepatitisTest({ ...hepatitisTest, hepatitisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (otherTest.length > 0) {\r\n      setOtherTest([]);\r\n    } else {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const otherTestInputRef = useRef();\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        '⚠ Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        '⚠ Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = '⚠ Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        '⚠ Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        '⚠ Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      prepNotedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      creatinine: {},\r\n      creatinineResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setCreatinineTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue\r\n      ? ''\r\n      : '⚠ Atleast, 1 HIV test result is required';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.prepType = objValues.prepType ? '' : '⚠ This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : '⚠ This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    temp.height = objValues.height ? '' : '⚠ This field is required';\r\n    if (objValues.prepType === 'PREP_TYPE_INJECTIBLES') {\r\n      temp.otherPrepGiven = objValues.otherPrepGiven\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    }\r\n    temp.weight = objValues.weight ? '' : '⚠ This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : '⚠ This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.visitType = objValues.visitType ? '' : '⚠ This field is required';\r\n\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    if (\r\n      urinalysisTest?.urinalysisTest === 'Yes' &&\r\n      urinalysisTest?.testDate === ''\r\n    ) {\r\n      temp.urinalysisTestDate = '⚠ This field is required';\r\n    } else {\r\n      temp.urinalysisTestDate = '';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updatePreviousPrepStatusAndSubmit(\r\n      props.patientObj?.personUuid,\r\n      props.patientObj?.prepStatus\r\n    );\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCabLa(objValues.encounterDate, response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function areDatesSame(date1, date2) {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet?.filter(regimen => regimen.id !== lastRegimenId);\r\n\r\n  const prepRegimenUpdateView = () =>\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  const getLiverFunctionTestResult = () =>\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility !== null) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === latestFromEligibility?.populationType\r\n      );\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: latestFromEligibility?.populationType || '',\r\n        visitType: latestFromEligibility?.visitType || '',\r\n        monthsOfRefill:\r\n          visitTypeDurationMapping[`${latestFromEligibility?.visitType}`] || '',\r\n        reasonForSwitch: latestFromEligibility?.reasonForSwitch || '',\r\n        pregnant: latestFromEligibility?.pregnancyStatus || '',\r\n      }));\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync, populationType]);\r\n\r\n  useEffect(() => {\r\n    const updateTest = (testType, setTestFunction) => {\r\n      const testData = objValues[testType];\r\n      if (\r\n        testData?.testDate &&\r\n        testData?.result &&\r\n        testData?.[`${testType}Test`]\r\n      ) {\r\n        setTestFunction({\r\n          ...testData,\r\n          testDate: testData.testDate,\r\n          result: testData.result,\r\n          [`${testType}Test`]: testData[`${testType}Test`],\r\n        });\r\n      }\r\n    };\r\n\r\n    updateTest('urinalysis', setUrinalysisTest);\r\n    updateTest('creatinine', setCreatinineTest);\r\n    updateTest('syphilis', setSyphilisTest);\r\n    updateTest('hepatitis', setHepatitisTest);\r\n  }, [objValues]);\r\n\r\n  useEffect(async () => {\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPrepEligibilityObj(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(async () => {\r\n    setPrepRiskReductionPlan((await getPrepRiskReductionPlan())?.data);\r\n    setAdherenceLevel((await getAdherenceLevel())?.data);\r\n    setPrepRiskReductionPlan(getSyndromicStiScreening()?.data);\r\n    setPrepStatus(getPrepStatus()?.data);\r\n    setHtsResult(getHts()?.data);\r\n    setPrepSideEffect((await getPrepSideEffects())?.data);\r\n    setPatientDto(getPatientDtoObj()?.data);\r\n    setWhyAdherenceLevelPoor(getWhyPoorFairAdherence()?.data);\r\n    getPrepEligibilityObj();\r\n    setLabTestOptions(getTestGroup()?.data);\r\n    setUrineTestResult(getPrepUrinalysisResult()?.data);\r\n    setOtherTestResult(getPrepOtherTests()?.data);\r\n    setHepaTestResult(getHapetitisScreeningResult()?.data);\r\n    setSyphilisTest(getSyphilisResult()?.data);\r\n    setpregnant(getPregnancyStatus()?.data);\r\n    setPrepEntryPoints(getPrepEntryPoint()?.data);\r\n    getPrepType();\r\n    setPopulationType(getPopulationType().data);\r\n    setVisitType(getVisitType()?.data);\r\n    setFamilyPlanningMethod(getFamilyPlanningMethod()?.data);\r\n    getPatientVisit(props.activeContent.id);\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHivResult();\r\n    getReasonForSwitch();\r\n    getCreatinineTestResultOptions();\r\n    getLiverFunctionTestResult();\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults,\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync]);\r\n\r\n  function areDatesInSync(date1, date2) {\r\n    return date1 === date2;\r\n  }\r\n  const getOptions = () => {\r\n    switch (objValues.otherPrepType) {\r\n      case 'PREP_TYPE_ORAL':\r\n        return <option value=\"1\">TDF(300mg)+3TC(300mg)</option>;\r\n      case 'PREP_TYPE_INJECTIBLES':\r\n        return <option value=\"2\">IM CAB-LA(600mg/3mL)</option>;\r\n      case 'PREP_TYPE_ED_PREP':\r\n        return (\r\n          <>\r\n            <option value=\"2\">IM CAB-LA(600mg/3mL)</option>\r\n            <option value=\"1\">TDF(300mg)+3TC(300mg)</option>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const [notedSideEffects, setNotedSideEffects] = useState([]);\r\n  const handleNotedSideEffectsChange = selected => {\r\n    setNotedSideEffects(selected);\r\n    setObjValues({ ...objValues, notedSideEffects: selected });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (objValues.otherPrepGiven === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    }\r\n  }, [objValues.otherPrepGiven]);\r\n\r\n  const visitTypeDurationMapping = {\r\n    PREP_VISIT_TYPE_DISCONTINUATION: null,\r\n    'PREP_VISIT_TYPE_DISCONTINUATION_FOLLOW-UP': null,\r\n    PREP_VISIT_TYPE_INITIATION: 30,\r\n    PREP_VISIT_TYPE_METHOD_SWITCH: null,\r\n    PREP_VISIT_TYPE_NO_PREP_PROVIDED: null,\r\n    'PREP_VISIT_TYPE_REFILL_RE-INJECTION': 60,\r\n    PREP_VISIT_TYPE_RESTART: 30,\r\n    PREP_VISIT_TYPE_SECOND_INITIATION: 60,\r\n    PREP_VISIT_TYPE_TRANSFER_IN: null,\r\n  };\r\n  function addDaysToDate(dateString, daysToAdd) {\r\n    const date = new Date(dateString);\r\n    if (\r\n      isNaN(date.getTime()) ||\r\n      typeof daysToAdd !== 'number' ||\r\n      isNaN(daysToAdd)\r\n    ) {\r\n      return '';\r\n    }\r\n    date.setDate(date.getDate() + daysToAdd);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let nextAppointment = addDaysToDate(\r\n      objValues.encounterDate,\r\n      objValues.monthsOfRefill\r\n    );\r\n    setObjValues(prev => ({ ...prev, nextAppointment }));\r\n  }, [objValues.encounterDate, objValues.monthsOfRefill]);\r\n\r\n  async function updatePreviousPrepStatusAndSubmit(personUuid, previousStatus) {\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.duration = objValues.monthsOfRefill;\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.creatinine = creatinineTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      objValues.prepNotedSideEffects = notedSideEffects;\r\n      objValues.notedSideEffects = '';\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        try {\r\n          const updateResponse = await axios.put(\r\n            `${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          toast.success('Clinic visit updated successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      } else {\r\n        try {\r\n          const postResponse = await axios.post(\r\n            `${baseUrl}prep/clinic-visit`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          emptyObjValues();\r\n          toast.success('Clinic Visit saved successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  function handleError(error) {\r\n    setSaving(false);\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again';\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    } else {\r\n      toast.error('Something went wrong ❌ please try again...', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.root} container-fluid`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"p-2\">Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant?.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={true}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects</FormLabelName>\r\n                  <DualListBox\r\n                    options={prepSideEffect?.map(effect => ({\r\n                      value: effect.code,\r\n                      label: effect.display,\r\n                    }))}\r\n                    selected={notedSideEffects}\r\n                    onChange={handleNotedSideEffectsChange}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.notedSideEffects !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.notedSideEffects}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti?.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan?.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Level of Adherence</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        )?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (days)`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepGiven\"\r\n                          id=\"otherPrepGiven\"\r\n                          value={objValues.otherPrepGiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepGiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepGiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepGiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_ED_PREP'\r\n                              )\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== objValues.prepType\r\n                              )\r\n                              ?.map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {getOptions()}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"creatinineTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxCreatinineTest}\r\n                    checked={creatinineTest.creatinineTest === 'Yes'}\r\n                  />{' '}\r\n                  Creatinine Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {creatinineTest.creatinineTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={creatinineTest.testDate}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.creatinineTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        placeholder=\"Enter test result...\"\r\n                        value={creatinineTest.result}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                      {errors.creatinineResult !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineResult}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={urinalysisTest?.urinalysisTest === 'Yes'}\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest?.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.urinalysisTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.urinalysisTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest?.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={hepatitisTest.hepatitisTest === 'Yes'}\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest?.syphilisTest === 'Yes'}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest?.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest?.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest?.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest?.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />{' '}\r\n                  Other Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherTest.length > 0 &&\r\n                otherTest?.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div className=\"p-2\">\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving || disabledField}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE</h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>\r\n                  Next Appointment Date <span style={{ color: 'red' }}> *</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature </FormLabelName>\r\n\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}></h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\" mb-3 col-md-8\">\r\n                <FormLabelName>Comment</FormLabelName>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  placeholder=\"Enter comment...\"\r\n                  value={objValues.comment}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                    height: '10em',\r\n                  }}\r\n                />\r\n                {errors.comment !== '' ? (\r\n                  <span className={classes.error}>{errors.comment}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [prepRegimen, setPrepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setPregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoint] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    pregnancyStatus();\r\n    getPatientDTOObj();\r\n    fetchPrepRegimen();\r\n    fetchPrepEntryPoint();\r\n    fetchPrepType();\r\n    fetchLiverFunctionTestResult();\r\n    fetchHistoryOfDrugToDrugInteraction();\r\n    fetchPrepUrinalysisResult();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientCommencement(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, []);\r\n\r\n  const fetchPrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const fetchPrepType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchHistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientCommencement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const pregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      fetchPrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setPrepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardBody>\r\n        <form>\r\n          <div className=\"row\">\r\n            <h2>PrEP Commencement</h2>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"uniqueId\">\r\n                  Date of Initial Adherence Counseling{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateInitialAdherenceCounseling\"\r\n                  id=\"dateInitialAdherenceCounseling\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateInitialAdherenceCounseling}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.dateInitialAdherenceCounseling && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateInitialAdherenceCounseling}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date PrEP started <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"datePrepStart\"\r\n                  id=\"datePrepStart\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.datePrepStart}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.datePrepStart && (\r\n                  <span className={classes.error}>{errors.datePrepStart}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Body Weight <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    id=\"weight\"\r\n                    onChange={handleInputChange}\r\n                    min=\"3\"\r\n                    max=\"150\"\r\n                    value={objValues.weight}\r\n                    onKeyUp={handleInputValueCheckBodyWeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    kg\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.bodyWeight && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.bodyWeight}\r\n                  </span>\r\n                )}\r\n                {errors.weight && (\r\n                  <span className={classes.error}>{errors.weight}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Height <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopLeftRadius: '0.25rem',\r\n                      borderBottomLeftRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    cm\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.height}\r\n                    min=\"48.26\"\r\n                    max=\"216.408\"\r\n                    disabled={disabledField}\r\n                    onKeyUp={handleInputValueCheckHeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                    }}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#992E62',\r\n                      color: '#fff',\r\n                      border: '1px solid #992E62',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    {objValues.height\r\n                      ? (objValues.height / 100).toFixed(2) + 'm'\r\n                      : 'm'}\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.height && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.height}\r\n                  </span>\r\n                )}\r\n                {errors.height && (\r\n                  <span className={classes.error}>{errors.height}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n              {objValues.weight && objValues.height && (\r\n                <FormGroup>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    >\r\n                      BMI:{' '}\r\n                      {(\r\n                        objValues.weight /\r\n                        (objValues.height / 100) ** 2\r\n                      ).toFixed(2)}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n            {props.patientObj.gender.toLowerCase() === 'female' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Pregnancy Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"pregnant\"\r\n                    id=\"pregnant\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.pregnant}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {pregnant.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Breast Feeding</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"breastFeeding\"\r\n                    id=\"breastFeeding\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.breastFeeding}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of drug Allergies</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"drugAllergies\"\r\n                  id=\"drugAllergies\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.drugAllergies}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Urinalysis Result</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"urinalysisResult\"\r\n                  id=\"urinalysisResult\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.urinalysisResult}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {urinalysisTestResult.map(value => (\r\n                    <option key={value.id} value={value.display}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of PrEP drug interactions</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"select\"\r\n                  name=\"historyOfDrugToDrugInteraction\"\r\n                  id=\"historyOfDrugToDrugInteraction\"\r\n                  value={objValues.historyOfDrugToDrugInteraction}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {historyOfDrugToDrugInteraction.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.historyOfDrugToDrugInteraction && (\r\n                  <span className={classes.error}>\r\n                    {errors.historyOfDrugToDrugInteraction}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Liver Function Tests Result </Label>\r\n                <LiverFunctionTest\r\n                  objValues={objValues}\r\n                  handleInputChange={handleLftInputChange}\r\n                  liverFunctionTestResult={liverFunctionTestResult}\r\n                  disabledField={disabledField}\r\n                  isAutoPop={true}\r\n                />\r\n                {errors.liverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.liverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n                <Label>Date of Liver Function Tests Result </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateLiverFunctionTestResults\"\r\n                  id=\"dateLiverFunctionTestResults\"\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateLiverFunctionTestResults}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled\r\n                />\r\n                {errors.dateLiverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateLiverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Referred <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"referred\"\r\n                  id=\"referred\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.referred}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n                {errors.referred && (\r\n                  <span className={classes.error}>{errors.referred}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {objValues.referred === 'true' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date referred</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datereferred\"\r\n                    id=\"datereferred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.datereferred}\r\n                    min={patientDto?.dateEnrolled || ''}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datereferred && (\r\n                    <span className={classes.error}>{errors.datereferred}</span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName for=\"prepType\">\r\n                  Prep Type At Start <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepType\"\r\n                  id=\"prepType\"\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  onChange={handlePrepTypeChange}\r\n                  value={objValues.prepType}\r\n                >\r\n                  <option value=\"\">Select Prep Type</option>\r\n                  {prepType.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepType && (\r\n                  <span className={classes.error}>{errors.prepType}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  PrEP Regimen <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {prepRegimen.map(value => (\r\n                    <option key={value.id} value={value.id}>\r\n                      {value.regimen}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.regimenId && (\r\n                  <span className={classes.error}>{errors.regimenId}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName>\r\n                  Prep Distribution Setting{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepDistributionSetting\"\r\n                  id=\"prepDistributionSetting\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.prepDistributionSetting}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {prepEntryPoint.map(value => (\r\n                    <option key={value.code} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepDistributionSetting && (\r\n                  <span className={classes.error}>\r\n                    {errors.prepDistributionSetting}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Duration of Refill (Day[s])</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"monthsOfRefill\"\r\n                  id=\"monthsOfRefill\"\r\n                  value={objValues.monthsOfRefill}\r\n                  min={0}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          {saving && <Spinner />}\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{ backgroundColor: '#014d88' }}\r\n            onClick={handleSubmit}\r\n            disabled={saving}\r\n          >\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              {saving\r\n                ? 'Saving...'\r\n                : props.activeContent?.actionType\r\n                ? 'Update'\r\n                : 'Save'}\r\n            </span>\r\n          </MatButton>\r\n        </form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [reasonForDiscontinuationOptions, setReasonForDiscontinuationOptions] =\r\n    useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    getReasonForDiscontinuationOptions();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getReasonForDiscontinuationOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_FOR_DISCONTINUATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDiscontinuationOptions(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'interruptionType') {\r\n      switch (e.target.value) {\r\n        case 'PREP_STATUS_STOPPED':\r\n          setObjValues({\r\n            ...objValues,\r\n            reasonStopped: '',\r\n            reasonStoppedOthers: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_DEAD':\r\n          setObjValues({\r\n            ...objValues,\r\n            causeOfDeath: '',\r\n            sourceOfDeathInfo: '',\r\n            dateClientDied: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_RESTART':\r\n          setObjValues({ ...objValues, dateRestartPlacedBackMedication: '' });\r\n          break;\r\n        case 'PREP_STATUS_TRANSFER_OUT':\r\n          setObjValues({\r\n            ...objValues,\r\n            dateClientReferredOut: '',\r\n            facilityReferredTo: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_SEROCONVERTED':\r\n          setObjValues({ ...objValues, linkToArt: '', dateSeroconverted: '' });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    // if (\r\n    //   containsDiscontinued(objValues.interruptionType) &&\r\n    //   !objValues.reasonForPrepDiscontinuation\r\n    // ) {\r\n    //   temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    // }\r\n    if (\r\n      (objValues.interruptionType === 'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n        objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n        objValues.interruptionType === 'PREP_STATUS_LOSS_TO_FOLLOW_UP') &&\r\n      !objValues.interruptionDate\r\n    ) {\r\n      temp.interruptionDate = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' &&\r\n      !objValues.dateClientReferredOut\r\n    ) {\r\n      temp.dateClientReferredOut = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_DEAD' &&\r\n      !objValues.dateClientDied\r\n    ) {\r\n      temp.dateClientDied = 'This field is required';\r\n    }\r\n    if (!objValues.interruptionType) {\r\n      temp.interruptionType = 'This field is required';\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    }\r\n    if (validate()) {\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = error => {\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again...';\r\n      toast.error(errorMessage);\r\n    } else {\r\n      toast.error('❌ Something went wrong. Please try again...');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReasonForDiscontinuationOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!['view', 'update'].includes(props.activeContent.actionType)) {\r\n        setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          dateInterruption: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          causeOfDeath: '',\r\n          dateClientDied: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          interruptionDate: '',\r\n          sourceOfDeathInfo: '',\r\n          dateSeroconverted: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n\r\n        setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          interruptionDate: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          dateClientDied: '',\r\n          causeOfDeath: '',\r\n          sourceOfDeathInfo: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          dateSeroconverted: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n      }\r\n    };\r\n  }, [objValues.interruptionType]);\r\n\r\n  useEffect(() => {\r\n    GetPatientInterruption(props.activeContent.id);\r\n  }, [props.activeContent.id]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    {/* <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option> */}\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_CABLA' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                          disabled={disabledField}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientReferredOut ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of Client's Death </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientDied || objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateSeroconverted ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          disabled={disabledField}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {/* {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      placeholder=\"Enter reason for PrEP discontinuation...\"\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : null} */}\r\n            </div>\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent.actionType !== 'view' && (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                  onClick={props.toggle}\r\n                  style={{ backgroundColor: '#992E62' }}\r\n                >\r\n                  <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                    {' '}\r\n                    Cancel{' '}\r\n                  </span>\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [transferIn, setTransferIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record saved successfully! ✔');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong ❌');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required⚠';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required⚠';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required⚠';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required⚠';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required❌', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n        //patientObj=response.data\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n          {/* start of patient card detail */}\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          {/* End of patient card detail */}\r\n          {/* This is the submenu components */}\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n          {/* This is the submenu routes */}\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormGroup, Label, Spinner, Input, Form } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport * as moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { useForm } from 'react-hook-form';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getValue } from '@syncfusion/ej2-base';\r\nimport './patient.css';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst UserRegistration = props => {\r\n  console.log(props);\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: '',\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: '',\r\n    genderId: '',\r\n    identifier: '',\r\n    otherName: '',\r\n    maritalStatusId: '',\r\n    educationId: '',\r\n    employmentStatusId: '',\r\n    dateOfRegistration: '',\r\n    isDateOfBirthEstimated: null,\r\n    age: '',\r\n    phoneNumber: '',\r\n    altPhonenumber: '',\r\n    dob: '',\r\n    countryId: '',\r\n    stateId: '',\r\n    district: '',\r\n    landmark: '',\r\n    sexId: '',\r\n    ninNumber: '',\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: '',\r\n    phone: '',\r\n    firstName: '',\r\n    email: '',\r\n    relationshipId: '',\r\n    lastName: '',\r\n    middleName: '',\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace('T', ' ')\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: '',\r\n    hivEnrollment: '',\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrerId: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n    householdNumber: '',\r\n    referredToOVCPartner: '',\r\n    dateReferredToOVCPartner: '',\r\n    referredFromOVCPartner: '',\r\n    dateReferredFromOVCPartner: '',\r\n    careEntryPointOther: '',\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState('false');\r\n\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts = patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(contacts.contact);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map(x => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: '',\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        obj => obj.type == 'HospitalNumber'\r\n      );\r\n      const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n      const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n      const altphone = contactPoint.contactPoint.find(\r\n        obj => obj.type == 'altphone'\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber = hospitalNumber ? hospitalNumber.value : '';\r\n      basicInfo.maritalStatusId = patientObj.maritalStatus.id;\r\n      basicInfo.employmentStatusId = patientObj.employmentStatus.id;\r\n      basicInfo.genderId = patientObj.gender ? patientObj.gender.id : null;\r\n      basicInfo.sexId = patientObj.sex;\r\n      basicInfo.educationId = patientObj.education.id;\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : '';\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : '';\r\n      basicInfo.email = email && email.value ? email.value : '';\r\n      basicInfo.address = country && country.city ? country.city : '';\r\n      basicInfo.landmark = country.line[0];\r\n      basicInfo.countryId = country.countryId;\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country.stateId);\r\n      basicInfo.stateId = country.stateId;\r\n      basicInfo.district = country.district;\r\n      setObjValues(patientObj.enrollment);\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format('DD-MM-YYYY')\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === 'Female' ? true : false);\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert('Date of registration can not be earlier than date of birth');\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async parentId => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now;\r\n  };\r\n  //Get States from selected country\r\n  const getStates = e => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setStates(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //fetch province\r\n  const getProvinces = e => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = e => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: '' });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = e => {\r\n    if (e.target.value == 'Actual') {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == 'Estimated') {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = e => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, 'years');\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format('YYYY-MM-DD');\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = e => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === 'sexId' && e.target.value === 'Female') {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === 'firstName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'lastName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'middleName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'hospitalNumber' && e.target.value !== '') {\r\n      async function getCharacters() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'text/plain',\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          setHospitalNumStatus(false);\r\n          setHospitalNumStatus2(true);\r\n        }\r\n      }\r\n      getCharacters();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: '/' });\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? '' : 'First Name is required';\r\n    temp.lastName = relatives.lastName ? '' : 'Last Name  is required.';\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? ''\r\n      : 'Relationship Type is required.';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = e => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = index => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = relationshipId => {\r\n    const relationship = relationshipOptions.find(\r\n      obj => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : '';\r\n  };\r\n  const handleInputChangeRelatives = e => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? '' : 'First Name is required';\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? ''\r\n      : 'Hospital Number  is required.';\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? '' : 'Last Name  is required.';\r\n    temp.sexId = basicInfo.sexId ? '' : 'Sex is required.';\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.educationId = basicInfo.educationId ? '' : 'Education is required.';\r\n    temp.address = basicInfo.address ? '' : 'Address is required.';\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? ''\r\n      : 'Phone Number  is required.';\r\n    temp.countryId = basicInfo.countryId ? '' : 'Country is required.';\r\n    temp.stateId = basicInfo.stateId ? '' : 'State is required.';\r\n    temp.district = basicInfo.district ? '' : 'Province/LGA is required.';\r\n    //HIV FORM VALIDATION\r\n    temp.targetGroupId = objValues.targetGroupId\r\n      ? ''\r\n      : 'Target group is required.';\r\n    temp.dateConfirmedHiv = objValues.dateConfirmedHiv\r\n      ? ''\r\n      : 'date confirm HIV is required.';\r\n    temp.sourceOfReferrerId = objValues.sourceOfReferrerId\r\n      ? ''\r\n      : 'Source of referrer is required.';\r\n    temp.enrollmentSettingId = objValues.enrollmentSettingId\r\n      ? ''\r\n      : 'Enrollment Setting Number  is required.';\r\n    temp.tbStatusId = objValues.tbStatusId ? '' : 'TB status is required.';\r\n    temp.statusAtRegistrationId = objValues.statusAtRegistrationId\r\n      ? ''\r\n      : 'Status at Registration is required.';\r\n    temp.entryPointId = objValues.entryPointId\r\n      ? ''\r\n      : 'Care Entry Point is required.';\r\n    temp.dateOfRegistration = objValues.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'Unique ID is required.';\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find(x => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId.id;\r\n    if (validate()) {\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map(x => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: 'phone',\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + ' ' + x.middleName + ' ' + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: '',\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.genderId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: 'HospitalNumber',\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == 'Actual' ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: 'phone',\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: 'email',\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: 'altphone',\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.hivEnrollment = objValues;\r\n        const response = await axios.put(\r\n          `${baseUrl}hiv/patient/${patientObj.id}`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success('Patient Updated successfully! ✔');\r\n        history.push('/');\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data && error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = value => {\r\n    const result = value.replace(/[^a-z]/gi, '');\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n    if (e.target.name === 'pregnancyStatusId') {\r\n      console.log(e.target.value);\r\n      if (e.target.value === '72') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: '/patient-history',\r\n              state: { patientObj: patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Back{' '}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Edit User Information\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{' '}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.dateOfRegistration1 !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            disabled={\r\n                              locationState.actionType === 'update'\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {'Hospital number already exist'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus2 === true ? (\r\n                            <span className={classes.success}>\r\n                              {'Hospital number is OK.'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={Math.floor(Math.random() * 1094328)}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.firstName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.lastName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            max={today}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={'row'}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            National Identity Number (NIN){' '}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nin\"\r\n                            id=\"nin\"\r\n                            value={basicInfo.ninNumber}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'phoneNumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.phoneNumber !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'altPhonenumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={getProvinces}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.address !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: '100%' }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      ' ' +\r\n                                      item.middleName +\r\n                                      ' ' +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={e => handleDeleteRelative(index)}\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  >\r\n                                    <option value={''}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.firstName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.lastName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: '100%',\r\n                                      border: '1px solid #014D88',\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: '100%',\r\n                                      borderRadius: '0px',\r\n                                    }}\r\n                                    country={'ng'}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    onChange={e => {\r\n                                      checkPhoneNumber(e.slice(0, 10), 'phone');\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    HIV Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique ID No * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueId\"\r\n                          id=\"uniqueId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.uniqueId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of Enrollment *{' '}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          min={basicInfo.dateOfRegistration}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateOfRegistration}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfRegistration !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"entryPointId\"\r\n                          id=\"entryPointId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.entryPointId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.entryPointId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.entryPointId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      {transferIn === true ? (\r\n                        <FormGroup>\r\n                          <Label>Facility Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityName\"\r\n                            id=\"facilityName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityName}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Status at Registration *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"statusAtRegistrationId\"\r\n                          id=\"statusAtRegistrationId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.statusAtRegistrationId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {hivStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.statusAtRegistrationId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.statusAtRegistrationId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of Confirmed HIV Test *</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateConfirmedHiv\"\r\n                          id=\"dateConfirmedHiv\"\r\n                          min={basicInfo.dob}\r\n                          max={objValues.dateOfRegistration}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateConfirmedHiv}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateConfirmedHiv !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateConfirmedHiv}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Source of Referral *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"sourceOfReferrerId\"\r\n                          id=\"sourceOfReferrerId\"\r\n                          value={objValues.sourceOfReferrerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          {sourceReferral.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.sourceOfReferrerId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.sourceOfReferrerId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Enrollment Setting *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"enrollmentSettingId\"\r\n                          id=\"enrollmentSettingId\"\r\n                          value={objValues.enrollmentSettingId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChange}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n\r\n                          {enrollSetting.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.enrollmentSettingId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.enrollmentSettingId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {femaleStatus && basicInfo.age > 9 && (\r\n                      <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label> Pregnancy </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"pregnancyStatusId\"\r\n                              id=\"pregnancyStatusId\"\r\n                              value={objValues.pregnancyStatusId}\r\n                              style={{\r\n                                border: '1px solid #014D88',\r\n                                borderRadius: '0.2rem',\r\n                              }}\r\n                              onChange={handleInputChange}\r\n                              //disabled={locationState.actionType==='update'? false : true}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {pregnancyStatus.map(value => (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.pregnancyStatusId !== '72' && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                              <FormGroup>\r\n                                <Label>Date of LMP </Label>\r\n                                <Input\r\n                                  type=\"date\"\r\n                                  onKeyDown={e => e.preventDefault()}\r\n                                  name=\"dateOfLpm\"\r\n                                  id=\"dateOfLpm\"\r\n                                  max={today}\r\n                                  onChange={handleInputChange}\r\n                                  value={objValues.dateOfLpm}\r\n                                  style={{\r\n                                    border: '1px solid #014D88',\r\n                                    borderRadius: '0.2rem',\r\n                                  }}\r\n                                  //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>TB Status * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbStatusId\"\r\n                          id=\"tbStatusId\"\r\n                          value={objValues.tbStatusId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {tbStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.tbStatusId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.tbStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {hideTargetGroup === 'false' ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>Target Group *</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"targetGroupId\"\r\n                            id=\"targetGroupId\"\r\n                            value={objValues.targetGroupId}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {kP.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.targetGroupId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.targetGroupId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <div className=\"form-check custom-checkbox ml-1 \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"ovc_enrolled\"\r\n                          id=\"ovc_enrolled\"\r\n                          onChange={handleCheckBox}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                          Enrolled into OVC?\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    {basicInfo.age <= 14 && (\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name=\"ovc_enrolled\"\r\n                            id=\"ovc_enrolled\"\r\n                            onChange={handleCheckBox}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                          >\r\n                            Enrolled into OVC?\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n\r\n                    {ovcEnrolled === true && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Household Unique Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"householdNumber\"\r\n                                id=\"householdNumber\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.householdNumber}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\"></div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredToOVCPartner\"\r\n                                id=\"referredToOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredToOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredToOVCPartner\"\r\n                                id=\"dateReferredToOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredToOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredFromOVCPartner\"\r\n                                id=\"referredFromOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredFromOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredFromOVCPartner\"\r\n                                id=\"dateReferredFromOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredFromOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : ''}\r\n\r\n              <br />\r\n\r\n              {locationState.actionType === 'update' ? (\r\n                <>\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Update\r\n                      </span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Updating...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n\r\n                  <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancel}\r\n                    style={{ backgroundColor: '#992E62' }}\r\n                  >\r\n                    <span\r\n                      style={{ textTransform: 'capitalize', color: '#fff' }}\r\n                    >\r\n                      Cancel\r\n                    </span>\r\n                  </MatButton>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from 'react';\r\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport './../src/main/webapp/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ marginTop: '3em' }}>\r\n      <Router>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/patient-dashboard\">\r\n              {/* This is the component to access patient dashboard */}\r\n              <PatientDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              {/* This is the entry point to the application */}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}