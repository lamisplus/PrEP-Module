{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/apiCalls/eligibility.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","classes","Accordion","AccordionSummary","md","_Fragment","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sexAtBirth","phoneNumber","address","Typography","activeContent","obj","newStatus","display","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","marginBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForSwitchOptions","setReasonForSwitchOptions","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","setLiverFunctionTestResult","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","reasonForSwitch","lftConducted","dateLiverFunctionTestResults","score","riskAssessment","setRiskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessmentPartner","setRiskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","setStiScreening","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","drugHistory","setDrugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","assessmentForPepIndication","setAssessmentForPepIndication","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","servicesReceivedByClient","setServicesReceivedByClient","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","assessmentForAcuteHivInfection","setAssessmentForAcuteHivInfection","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","assessmentForPrepEligibility","setAssessmentForPrepEligibility","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","getCounselingType","getReasonForDecline","getPopulationType","getPregnancyStatus","getVisitType","getPatientPrepEligibility","console","handleInputChangeRiskAssessment","riskCount","Object","values","filter","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","handleInputChangeDrugHistory","handleInputChangeAssessmentForPepIndication","handleInputChangeAssessmentForAcuteHivInfection","handleInputChangeAssessmentForPrepEligibility","handleInputChangeServicesReceivedByClient","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","prevValues","prevHistory","CardBody","FormGroup","onKeyDown","min","patientDetail","dateHivPositive","dateOfRegistration","max","Input","find","pType","FormLabel","for","event","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","personResponseDto","sex","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_filterOutLastRegimen","_props$recentActiviti","_prepType$filter","_prepType$filter$filt","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","creatinineTestResult","setCreatinineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","prepRiskReductionPlan","setPrepRiskReductionPlan","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","prepNotedSideEffects","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepGiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","creatinine","urinalysisResult","creatinineResult","why","otherDrugs","duration","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","creatinineTest","setCreatinineTest","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","testsOptions","checkEligibleForCabLa","currentDate","regimenList","reg","pTypes","getPrepEligibilityObj","PrepRegimen","eligibilityVisitDateSync","setEligibilityVisitDateSync","durationInDays","date1","date2","handleInputChangeUrinalysisTest","handleInputChangeCreatinineTest","creatinineTestDate","handleInputChangeOtherTest","localId","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","uuid","activeTab","autoPopulate","updateTest","testType","setTestFunction","testData","_await$getPrepRiskRed","_await$getAdherenceLe","_getSyndromicStiScree","_getPrepStatus","_getHts","_await$getPrepSideEff","_getPatientDtoObj","_getWhyPoorFairAdhere","_getTestGroup","_getPrepUrinalysisRes","_getPrepOtherTests","_getHapetitisScreenin","_getSyphilisResult","_getPregnancyStatus","_getPrepEntryPoint","_getPrepType","_getVisitType","_getFamilyPlanningMet","getAdherenceLevel","getPrepSideEffects","_response$data","_x$labTests","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","_response$data2","JSON","parse","stringify","getPatientVisit","_response$data3","_response$data4","_response$data5","_response$data5$","_response$data6","_response$data6$","_response$data7","latestEligibility","sort","a","b","isBefore","getLatestFromEligibility","setNotedSideEffects","prev","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","effect","plan","codeSet","lastRegimenId","getOptions","_objValues$otherTests","otherTestName","eachTest","handleRemoveTest","test","TiTrash","component","AddIcon","handleCreateNewTest","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setPrepRegimen","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setPregnant","setPrepEntryPoint","urinalysisTestResult","setUrinalysisTestResult","getPatientDTOObj","fetchPrepRegimen","fetchPrepEntryPoint","fetchPrepType","fetchLiverFunctionTestResult","fetchHistoryOfDrugToDrugInteraction","fetchPrepUrinalysisResult","getPatientCommencement","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","reasonForDiscontinuationOptions","setReasonForDiscontinuationOptions","PREP_STATUS","PREP_STATUS_STOPPED_REASON","GetPatientDTOObj","CAUSE_DEATH","getReasonForDiscontinuationOptions","GetPatientInterruption","linkToArt","handleError","containsDiscontinued","inputString","prevErrors","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","log","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","organisationUnitId","postalCode","assignerId","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.a735b250.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzMxNjAwMDYyfQ.6kmnAz-Zk6QtO7JpPcpG6ej_DytUpVLjv8eg7O9OiSOguDVvzlKl0DCfZRoPm4ET4SZxegsqp6shi6gP8t8lPQ'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { token as token, url as baseUrl } from './../../../api';\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport '@reach/menu-button/styles.css';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = props => {\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: 'Patient Name',\r\n            field: 'name',\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: 'Hospital Number',\r\n            field: 'hospital_number',\r\n            filtering: false,\r\n          },\r\n          { title: 'PrEP Code', field: 'clientCode', filtering: false },\r\n          { title: 'Sex', field: 'gender', filtering: false },\r\n          { title: 'Age', field: 'age', filtering: false },\r\n\r\n          { title: 'PrEP Status', field: 'status', filtering: false },\r\n          { title: 'Actions', field: 'actions', filtering: false },\r\n        ]}\r\n        data={query =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then(response => response)\r\n              .then(result => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.(row => ({\r\n                    name: row.firstName + ' ' + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : '',\r\n                    age: row.age,\r\n\r\n                    status: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: '/patient-dashboard',\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: 'rgb(153, 46, 98)',\r\n                              height: '30px',\r\n                              width: '215px',\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: '12px',\r\n                                  color: '#fff',\r\n                                  fontWeight: 'bolder',\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n          },\r\n          searchFieldStyle: {\r\n            width: '200%',\r\n            margingLeft: '250px',\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: 'left',\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: '#014d88', fontWeight: 'bold' }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Card, Tab, Tabs } from 'react-bootstrap';\r\nimport PatientList from './Patient/PatientList';\r\n\r\nconst divStyle = {\r\n  borderRadius: '2px',\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ marginTop: '3em' }} className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PrEP</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={k => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject);\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now + ' year(s)';\r\n  };\r\n  const getHospitalNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(\r\n      obj => obj.type === 'HospitalNumber'\r\n    );\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(\r\n      obj => obj?.type === 'phone'\r\n    );\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = identifier => {\r\n    console.log('identifier: ', identifier);\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress =\r\n      Array.isArray(address?.line) && address?.line[0] != null\r\n        ? address?.line[0]\r\n        : '';\r\n    const landMark =\r\n      address && address?.city && address?.city !== null ? address?.city : '';\r\n    return address ? houseAddress + ' ' + landMark : '';\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {patientObj?.firstName + ' ' + patientObj?.surname}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculate_age(\r\n                            moment(patientObj?.dateOfBirth).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth || patientObj?.gender}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input } from 'reactstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  FormLabel,\r\n  makeStyles,\r\n  Button as MatButton,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Message, Dropdown } from 'semantic-ui-react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {\r\n  savePrepEligibility,\r\n  getCounselingType,\r\n  getPatientPrepEligibility,\r\n  getVisitType,\r\n  getRecentActivities,\r\n  getPregnancyStatus,\r\n  getReasonForDecline,\r\n  getLiverFunctionTestResult,\r\n} from '../../../apiCalls/eligibility';\r\n\r\nimport '../../index.css';\r\nimport { getPopulationType } from '../../../apiCalls/eligibility';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult?.map(value => ({\r\n    value: value?.code,\r\n    label: value?.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options || []}\r\n      selected={selectedValues || []}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '',\r\n    lastTest: '',\r\n  });\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCounselingType((await getCounselingType()).data);\r\n    setReasonForDecline((await getReasonForDecline()).data);\r\n    setPopulationType((await getPopulationType()).data);\r\n    setPregnancyStatus((await getPregnancyStatus()).data);\r\n    setVisitType((await getVisitType()).data);\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const getPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const {\r\n          personalHivRiskAssessment,\r\n          sexPartnerRisk,\r\n          stiScreening,\r\n          drugUseHistory,\r\n          assessmentForPepIndication,\r\n          assessmentForAcuteHivInfection,\r\n          servicesReceivedByClient,\r\n          assessmentForPrepEligibility,\r\n        } = response.data;\r\n        setObjValues(response.data);\r\n        setRiskAssessment(personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(sexPartnerRisk);\r\n        setStiScreening(stiScreening);\r\n        setDrugHistory(drugUseHistory);\r\n        setAssessmentForPepIndication(assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(assessmentForAcuteHivInfection);\r\n        setServicesReceivedByClient(servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(assessmentForPrepEligibility);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patient eligibility data:', error);\r\n      });\r\n  };\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeRiskAssessment = e => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.visitDate = objValues.visitDate ? '' : 'This field is required.';\r\n    temp.lftConducted = objValues.lftConducted ? '' : 'This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? 'LFT is required'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : 'This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : 'This field is required.';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : 'This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep eligilibility saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep eligilibility saved successfull! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ⚠', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n    getReasonForSwitch();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (objValues.lftConducted === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n    }\r\n  }, [objValues.lftConducted]);\r\n  useEffect(() => {\r\n    if (drugHistory.hivTestedBefore === 'false') {\r\n      setDrugHistory(prevHistory => ({\r\n        ...prevHistory,\r\n        lastTest: '',\r\n      }));\r\n    }\r\n  }, [drugHistory.hivTestedBefore]);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h1 style={{ fontSize: '1.1rem' }}>\r\n            PrEP Eligibility Screening Form\r\n          </h1>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>Reason for switch</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option value={value.code}> {value.display} </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option value={value.id}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import axios from 'axios';\r\nimport { token, url as baseUrl } from '../api';\r\n\r\nexport const getPatientPrepEligibility = async id => {\r\n  return await axios.get(`${baseUrl}prep/eligibility/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getCounselingType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getVisitType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getReasonForDecline = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPopulationType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getPregnancyStatus = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getRecentActivities = async personId => {\r\n  return await axios.get(\r\n    `${baseUrl}prep/activities/patients/${personId}?full=true`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiverFunctionTestResult = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const savePrepEligibility = async (id, objValues, actionType) => {\r\n  const url =\r\n    actionType === 'update'\r\n      ? `${baseUrl}prep-eligibility/${id}`\r\n      : `${baseUrl}prep/eligibility`;\r\n  const method = actionType === 'update' ? 'put' : 'post';\r\n  return await axios[method](url, objValues, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label } from 'semantic-ui-react';\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { makeStyles, Button as MatButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\nexport const CleanupWrapper = ({ isVisible, cleanup, children }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isVisible) {\r\n        cleanup();\r\n      }\r\n    };\r\n  }, [isVisible, cleanup]);\r\n  return isVisible ? children : null;\r\n};\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [creatinineTestResult, setCreatinineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n  //faciliId\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    prepNotedSideEffects: [],\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepGiven: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    creatinine: {},\r\n    urinalysisResult: '',\r\n    creatinineResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    duration: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [creatinineTest, setCreatinineTest] = useState({\r\n    creatinineTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let temp = { ...errors };\r\n  let testsOptions = [];\r\n\r\n  const getPregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getTestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response?.data?.map(x => {\r\n          x?.labTests?.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const checkEligibleForCabLa = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          if (response?.data || !response?.data) {\r\n            let isEligibleForCABLA = response?.data;\r\n            if (\r\n              isEligibleForCABLA ||\r\n              objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n            ) {\r\n              setPrepType(prepType);\r\n              setprepRegimen(regimenList);\r\n            } else {\r\n              let reg = regimenList?.filter((each, index) => {\r\n                return each.code !== 'CAB-LA(600mg/3mL)';\r\n              });\r\n              let pTypes = prepType?.filter((each, index) => {\r\n                return each.code !== 'PREP_TYPE_INJECTIBLES';\r\n              });\r\n              setPrepType(pTypes);\r\n              setprepRegimen(reg);\r\n            }\r\n            return response?.data;\r\n          }\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHivResult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            '⚠ No HTS record found. Atleast, 1 test result is required to proceed'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('👍 HTS record found. You may proceed ✔');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPatientDtoObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        checkEligibleForCabLa(currentDate, response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepRiskReductionPlan = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepSideEffects = async () => {\r\n    return await axios.get(\r\n      `${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n  };\r\n\r\n  const getHts = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = response?.data?.sort((a, b) =>\r\n          moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n        )[response.data.length - 1];\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPopulationType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getVisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getWhyPoorFairAdherence = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyndromicStiScreening = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getCreatinineTestResultOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CREATININE_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCreatinineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepOtherTests = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyphilisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHapetitisScreeningResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getFamilyPlanningMethod = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  async function getAdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n  const [eligibilityVisitDateSync, setEligibilityVisitDateSync] =\r\n    useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      setEligibilityVisitDateSync(\r\n        areDatesInSync(e.target.value, latestFromEligibility?.visitDate)\r\n      );\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else if (e.target.name === 'otherPrepGiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!eligibilityVisitDateSync) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: '',\r\n        visitType: '',\r\n        pregnant: '',\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n      setSelectedPopulationType('');\r\n    }\r\n  }, [eligibilityVisitDateSync]);\r\n\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCreatinineTest = e => {\r\n    setErrors({\r\n      ...errors,\r\n      creatinineResult: '',\r\n      creatinineTestDate: '',\r\n    });\r\n    setCreatinineTest({ ...creatinineTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n    temp[index][e.target.name] = e.target.value;\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev?.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'Yes' });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (!e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, ['hepatitisTest']: 'Yes' });\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n\r\n  const otherTestInputRef = useRef();\r\n\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (!e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, ['urinalysisTest']: 'Yes' });\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, ['urinalysisTest']: 'No' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxCreatinineTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setCreatinineTest({ ...creatinineTest, ['creatinineTest']: 'Yes' });\r\n    } else {\r\n      setCreatinineTest({ ...otherTest, ['creatinineTest']: 'No' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        '⚠ Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        '⚠ Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = '⚠ Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        '⚠ Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        '⚠ Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      prepNotedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      creatinine: {},\r\n      creatinineResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setCreatinineTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue\r\n      ? ''\r\n      : '⚠ Atleast, 1 HIV test result is required';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : '⚠ This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    temp.height = objValues.height ? '' : '⚠ This field is required';\r\n    if (objValues.prepType === 'PREP_TYPE_INJECTIBLES') {\r\n      temp.otherPrepGiven = objValues.otherPrepGiven\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    }\r\n    temp.weight = objValues.weight ? '' : '⚠ This field is required';\r\n    temp.creatinineTestDate = creatinineTest.testDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.creatinineResult = creatinineTest.result\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : '⚠ This field is required';\r\n    temp.duration = objValues.duration ? '' : '⚠ This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.visitType = objValues.visitType ? '' : '⚠ This field is required';\r\n\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.creatinine = creatinineTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      objValues.prepNotedSideEffects = notedSideEffects;\r\n      objValues.notedSideEffects = '';\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('Clinic visit updated successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : '❌ Something went wrong. Please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/clinic-visit`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            emptyObjValues();\r\n            toast.success('Clinic Visit saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCabLa(objValues.encounterDate, response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function areDatesSame(date1, date2) {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet?.filter(regimen => {\r\n      return regimen.id !== lastRegimenId;\r\n    });\r\n\r\n  const prepRegimenUpdateView = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility !== null) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === latestFromEligibility?.populationType\r\n      );\r\n\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: autoPopulate ? autoPopulate.code : '',\r\n        visitType: latestFromEligibility?.visitType || '',\r\n        reasonForSwitch: latestFromEligibility?.reasonForSwitch || '',\r\n        pregnant: latestFromEligibility?.pregnancyStatus || '',\r\n      }));\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync, populationType]);\r\n\r\n  useEffect(() => {\r\n    const updateTest = (testType, setTestFunction) => {\r\n      const testData = objValues[testType];\r\n      if (\r\n        testData?.testDate &&\r\n        testData?.result &&\r\n        testData?.[`${testType}Test`]\r\n      ) {\r\n        setTestFunction({\r\n          ...testData,\r\n          testDate: testData.testDate,\r\n          result: testData.result,\r\n          [`${testType}Test`]: testData[`${testType}Test`],\r\n        });\r\n      }\r\n    };\r\n\r\n    updateTest('urinalysis', setUrinalysisTest);\r\n    updateTest('creatinine', setCreatinineTest);\r\n    updateTest('syphilis', setSyphilisTest);\r\n    updateTest('hepatitis', setHepatitisTest);\r\n  }, [objValues]);\r\n\r\n  useEffect(async () => {\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPrepEligibilityObj(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(async () => {\r\n    setPrepRiskReductionPlan((await getPrepRiskReductionPlan())?.data);\r\n    setAdherenceLevel((await getAdherenceLevel())?.data);\r\n    setPrepRiskReductionPlan(getSyndromicStiScreening()?.data);\r\n    setPrepStatus(getPrepStatus()?.data);\r\n    setHtsResult(getHts()?.data);\r\n    setPrepSideEffect((await getPrepSideEffects())?.data);\r\n    setPatientDto(getPatientDtoObj()?.data);\r\n    setWhyAdherenceLevelPoor(getWhyPoorFairAdherence()?.data);\r\n    getPrepEligibilityObj();\r\n    setLabTestOptions(getTestGroup()?.data);\r\n    setUrineTestResult(getPrepUrinalysisResult()?.data);\r\n    setOtherTestResult(getPrepOtherTests()?.data);\r\n    setHepaTestResult(getHapetitisScreeningResult()?.data);\r\n    setSyphilisTest(getSyphilisResult()?.data);\r\n    setpregnant(getPregnancyStatus()?.data);\r\n    setPrepEntryPoints(getPrepEntryPoint()?.data);\r\n    setPrepType(getPrepType()?.data);\r\n    setPopulationType(getPopulationType().data);\r\n    setVisitType(getVisitType()?.data);\r\n    setFamilyPlanningMethod(getFamilyPlanningMethod()?.data);\r\n    getPatientVisit(props.activeContent.id);\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHivResult();\r\n    getReasonForSwitch();\r\n    getCreatinineTestResultOptions();\r\n    getLiverFunctionTestResult();\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults,\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync]);\r\n\r\n  function areDatesInSync(date1, date2) {\r\n    return date1 === date2;\r\n  }\r\n  const getOptions = () => {\r\n    switch (objValues.otherPrepType) {\r\n      case 'PREP_TYPE_ORAL':\r\n        return <option value=\"1\">TDF(300mg)+3TC(300mg)</option>;\r\n      case 'PREP_TYPE_INJECTIBLES':\r\n        return <option value=\"2\">IM CAB-LA(600mg/3mL)</option>;\r\n      case 'PREP_TYPE_ED_PREP':\r\n        return (\r\n          <>\r\n            <option value=\"2\">IM CAB-LA(600mg/3mL)</option>\r\n            <option value=\"1\">TDF(300mg)+3TC(300mg)</option>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const [notedSideEffects, setNotedSideEffects] = useState([]);\r\n  const handleNotedSideEffectsChange = selected => {\r\n    setNotedSideEffects(selected);\r\n    setObjValues({ ...objValues, notedSideEffects: selected });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (objValues.otherPrepGiven === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    }\r\n  }, [objValues.otherPrepGiven]);\r\n\r\n  return (\r\n    <div className={`${classes.root} container-fluid`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"p-2\">Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant?.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={true}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects</FormLabelName>\r\n                  <DualListBox\r\n                    options={prepSideEffect?.map(effect => ({\r\n                      value: effect.code,\r\n                      label: effect.display,\r\n                    }))}\r\n                    selected={notedSideEffects}\r\n                    onChange={handleNotedSideEffectsChange}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.notedSideEffects !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.notedSideEffects}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti?.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan?.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Level of Adherence</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    // disabled\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        )?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (Day[s])`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepGiven\"\r\n                          id=\"otherPrepGiven\"\r\n                          value={objValues.otherPrepGiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepGiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepGiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepGiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_ED_PREP'\r\n                              )\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== objValues.prepType\r\n                              )\r\n                              ?.map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {getOptions()}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"creatinineTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxCreatinineTest}\r\n                    checked={\r\n                      creatinineTest.creatinineTest == 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Creatinine Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {creatinineTest.creatinineTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Creatinine Test Date{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={creatinineTest.testDate}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.creatinineTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Creatinine Test Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        placeholder=\"Enter test result...\"\r\n                        value={creatinineTest.result}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                      {errors.creatinineResult !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineResult}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={\r\n                      urinalysisTest?.urinalysisTest !== 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest?.urinalysisTest !== 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.testDate !== '' ? (\r\n                        <span className={classes.error}>{errors.testDate}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest?.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={\r\n                      hepatitisTest.hepatitisTest !== 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest !== 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={\r\n                      syphilisTest?.syphilisTest === 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest?.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest?.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest?.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest?.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />\r\n                  Other Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherTest.length > 0 &&\r\n                otherTest?.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div className=\"p-2\">\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE</h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>\r\n                  Next Appointment Date <span style={{ color: 'red' }}> *</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature </FormLabelName>\r\n\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [prepRegimen, setPrepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setPregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoint] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    pregnancyStatus();\r\n    getPatientDTOObj();\r\n    fetchPrepRegimen();\r\n    fetchPrepEntryPoint();\r\n    fetchPrepType();\r\n    fetchLiverFunctionTestResult();\r\n    fetchHistoryOfDrugToDrugInteraction();\r\n    fetchPrepUrinalysisResult();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientCommencement(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, []);\r\n\r\n  const fetchPrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const fetchPrepType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchHistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientCommencement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const pregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      fetchPrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setPrepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardBody>\r\n        <form>\r\n          <div className=\"row\">\r\n            <h2>PrEP Commencement</h2>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"uniqueId\">\r\n                  Date of Initial Adherence Counseling{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateInitialAdherenceCounseling\"\r\n                  id=\"dateInitialAdherenceCounseling\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateInitialAdherenceCounseling}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.dateInitialAdherenceCounseling && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateInitialAdherenceCounseling}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date PrEP started <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"datePrepStart\"\r\n                  id=\"datePrepStart\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.datePrepStart}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.datePrepStart && (\r\n                  <span className={classes.error}>{errors.datePrepStart}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Body Weight <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    id=\"weight\"\r\n                    onChange={handleInputChange}\r\n                    min=\"3\"\r\n                    max=\"150\"\r\n                    value={objValues.weight}\r\n                    onKeyUp={handleInputValueCheckBodyWeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    kg\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.bodyWeight && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.bodyWeight}\r\n                  </span>\r\n                )}\r\n                {errors.weight && (\r\n                  <span className={classes.error}>{errors.weight}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Height <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopLeftRadius: '0.25rem',\r\n                      borderBottomLeftRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    cm\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.height}\r\n                    min=\"48.26\"\r\n                    max=\"216.408\"\r\n                    disabled={disabledField}\r\n                    onKeyUp={handleInputValueCheckHeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                    }}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#992E62',\r\n                      color: '#fff',\r\n                      border: '1px solid #992E62',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    {objValues.height\r\n                      ? (objValues.height / 100).toFixed(2) + 'm'\r\n                      : 'm'}\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.height && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.height}\r\n                  </span>\r\n                )}\r\n                {errors.height && (\r\n                  <span className={classes.error}>{errors.height}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n              {objValues.weight && objValues.height && (\r\n                <FormGroup>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    >\r\n                      BMI:{' '}\r\n                      {(\r\n                        objValues.weight /\r\n                        (objValues.height / 100) ** 2\r\n                      ).toFixed(2)}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n            {props.patientObj.gender.toLowerCase() === 'female' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Pregnancy Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"pregnant\"\r\n                    id=\"pregnant\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.pregnant}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {pregnant.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Breast Feeding</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"breastFeeding\"\r\n                    id=\"breastFeeding\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.breastFeeding}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of drug Allergies</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"drugAllergies\"\r\n                  id=\"drugAllergies\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.drugAllergies}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Urinalysis Result</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"urinalysisResult\"\r\n                  id=\"urinalysisResult\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.urinalysisResult}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {urinalysisTestResult.map(value => (\r\n                    <option key={value.id} value={value.display}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of PrEP drug interactions</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"select\"\r\n                  name=\"historyOfDrugToDrugInteraction\"\r\n                  id=\"historyOfDrugToDrugInteraction\"\r\n                  value={objValues.historyOfDrugToDrugInteraction}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {historyOfDrugToDrugInteraction.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.historyOfDrugToDrugInteraction && (\r\n                  <span className={classes.error}>\r\n                    {errors.historyOfDrugToDrugInteraction}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Liver Function Tests Result{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <LiverFunctionTest\r\n                  objValues={objValues}\r\n                  handleInputChange={handleLftInputChange}\r\n                  liverFunctionTestResult={liverFunctionTestResult}\r\n                  disabledField={disabledField}\r\n                  isAutoPop={true}\r\n                />\r\n                {errors.liverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.liverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date of Liver Function Tests Result{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateLiverFunctionTestResults\"\r\n                  id=\"dateLiverFunctionTestResults\"\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateLiverFunctionTestResults}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled\r\n                />\r\n                {errors.dateLiverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateLiverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Referred <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"referred\"\r\n                  id=\"referred\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.referred}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n                {errors.referred && (\r\n                  <span className={classes.error}>{errors.referred}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {objValues.referred === 'true' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date referred</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datereferred\"\r\n                    id=\"datereferred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.datereferred}\r\n                    min={patientDto?.dateEnrolled || ''}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datereferred && (\r\n                    <span className={classes.error}>{errors.datereferred}</span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName for=\"prepType\">\r\n                  Prep Type At Start <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepType\"\r\n                  id=\"prepType\"\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  onChange={handlePrepTypeChange}\r\n                  value={objValues.prepType}\r\n                >\r\n                  <option value=\"\">Select Prep Type</option>\r\n                  {prepType.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepType && (\r\n                  <span className={classes.error}>{errors.prepType}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  PrEP Regimen <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {prepRegimen.map(value => (\r\n                    <option key={value.id} value={value.id}>\r\n                      {value.regimen}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.regimenId && (\r\n                  <span className={classes.error}>{errors.regimenId}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName>\r\n                  Prep Distribution Setting{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepDistributionSetting\"\r\n                  id=\"prepDistributionSetting\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.prepDistributionSetting}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {prepEntryPoint.map(value => (\r\n                    <option key={value.code} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepDistributionSetting && (\r\n                  <span className={classes.error}>\r\n                    {errors.prepDistributionSetting}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Duration of Refill (Day[s])</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"monthsOfRefill\"\r\n                  id=\"monthsOfRefill\"\r\n                  value={objValues.monthsOfRefill}\r\n                  min={0}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          {saving && <Spinner />}\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{ backgroundColor: '#014d88' }}\r\n            onClick={handleSubmit}\r\n            disabled={saving}\r\n          >\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              {saving\r\n                ? 'Saving...'\r\n                : props.activeContent?.actionType\r\n                ? 'Update'\r\n                : 'Save'}\r\n            </span>\r\n          </MatButton>\r\n        </form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [reasonForDiscontinuationOptions, setReasonForDiscontinuationOptions] =\r\n    useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    getReasonForDiscontinuationOptions();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientInterruption(props.activeContent.id);\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cleanup function to reset fields when interruptionType changes or component unmounts\r\n    return () => {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        dateInterruption: '',\r\n        dateRestartPlacedBackMedication: '',\r\n        causeOfDeath: '',\r\n        dateClientDied: '',\r\n        dateClientReferredOut: '',\r\n        facilityReferredTo: '',\r\n        interruptionDate: '',\r\n        sourceOfDeathInfo: '',\r\n        dateSeroconverted: '',\r\n        reasonStopped: '',\r\n        reasonStoppedOthers: '',\r\n        reasonForPrepDiscontinuation: '',\r\n      }));\r\n    };\r\n  }, [objValues.interruptionType]);\r\n\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getReasonForDiscontinuationOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_FOR_DISCONTINUATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDiscontinuationOptions(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'interruptionType') {\r\n      switch (e.target.value) {\r\n        case 'PREP_STATUS_STOPPED':\r\n          setObjValues({\r\n            ...objValues,\r\n            reasonStopped: '',\r\n            reasonStoppedOthers: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_DEAD':\r\n          setObjValues({\r\n            ...objValues,\r\n            causeOfDeath: '',\r\n            sourceOfDeathInfo: '',\r\n            dateClientDied: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_RESTART':\r\n          setObjValues({ ...objValues, dateRestartPlacedBackMedication: '' });\r\n          break;\r\n        case 'PREP_STATUS_TRANSFER_OUT':\r\n          setObjValues({\r\n            ...objValues,\r\n            dateClientReferredOut: '',\r\n            facilityReferredTo: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_SEROCONVERTED':\r\n          setObjValues({ ...objValues, linkToArt: '', dateSeroconverted: '' });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    if (\r\n      containsDiscontinued(objValues.interruptionType) &&\r\n      !objValues.reasonForPrepDiscontinuation\r\n    ) {\r\n      temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    }\r\n    if (\r\n      (objValues.interruptionType === 'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n        objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n        objValues.interruptionType === 'PREP_STATUS_LOSS_TO_FOLLOW_UP') &&\r\n      !objValues.interruptionDate\r\n    ) {\r\n      temp.interruptionDate = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' &&\r\n      !objValues.dateClientReferredOut\r\n    ) {\r\n      temp.dateClientReferredOut = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_DEAD' &&\r\n      !objValues.dateClientDied\r\n    ) {\r\n      temp.dateClientDied = 'This field is required';\r\n    }\r\n    if (!objValues.interruptionType) {\r\n      temp.interruptionType = 'This field is required';\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = error => {\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again...';\r\n      toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n    } else {\r\n      toast.error('❌ Something went wrong. Please try again...', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReasonForDiscontinuationOptions();\r\n  }, []);\r\n\r\n  function containsDiscontinued(inputString) {\r\n    const lowerCaseString = inputString.toLowerCase();\r\n    return lowerCaseString.includes('discontinued');\r\n  }\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        dateInterruption: '',\r\n        dateRestartPlacedBackMedication: '',\r\n        causeOfDeath: '',\r\n        dateClientDied: '',\r\n        dateClientReferredOut: '',\r\n        facilityReferredTo: '',\r\n        interruptionDate: '',\r\n        sourceOfDeathInfo: '',\r\n        dateSeroconverted: '',\r\n        reasonStopped: '',\r\n        reasonStoppedOthers: '',\r\n        reasonForPrepDiscontinuation: '',\r\n      }));\r\n\r\n      setErrors(prevErrors => ({\r\n        ...prevErrors,\r\n        interruptionDate: '',\r\n        reasonStopped: '',\r\n        reasonStoppedOthers: '',\r\n        dateClientReferredOut: '',\r\n        facilityReferredTo: '',\r\n        dateClientDied: '',\r\n        causeOfDeath: '',\r\n        sourceOfDeathInfo: '',\r\n        dateRestartPlacedBackMedication: '',\r\n        dateSeroconverted: '',\r\n        reasonForPrepDiscontinuation: '',\r\n      }));\r\n    };\r\n  }, [objValues.interruptionType]);\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option>\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientReferredOut}\r\n                        required\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of Client's Death </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientDied}\r\n                        required\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateSeroconverted}\r\n                        required\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      placeholder=\"Enter reason for PrEP discontinuation...\"\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n              style={{ backgroundColor: '#992E62' }}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                {' '}\r\n                Cancel{' '}\r\n              </span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [transferIn, setTransferIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record saved successfully! ✔');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong ❌');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required⚠';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required⚠';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required⚠';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required⚠';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required❌', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n        //patientObj=response.data\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n          {/* start of patient card detail */}\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          {/* End of patient card detail */}\r\n          {/* This is the submenu components */}\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n          {/* This is the submenu routes */}\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormGroup, Label, Spinner, Input, Form } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport * as moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { useForm } from 'react-hook-form';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getValue } from '@syncfusion/ej2-base';\r\nimport './patient.css';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst UserRegistration = props => {\r\n  console.log(props);\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: '',\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: '',\r\n    genderId: '',\r\n    identifier: '',\r\n    otherName: '',\r\n    maritalStatusId: '',\r\n    educationId: '',\r\n    employmentStatusId: '',\r\n    dateOfRegistration: '',\r\n    isDateOfBirthEstimated: null,\r\n    age: '',\r\n    phoneNumber: '',\r\n    altPhonenumber: '',\r\n    dob: '',\r\n    countryId: '',\r\n    stateId: '',\r\n    district: '',\r\n    landmark: '',\r\n    sexId: '',\r\n    ninNumber: '',\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: '',\r\n    phone: '',\r\n    firstName: '',\r\n    email: '',\r\n    relationshipId: '',\r\n    lastName: '',\r\n    middleName: '',\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace('T', ' ')\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: '',\r\n    hivEnrollment: '',\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrerId: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n    householdNumber: '',\r\n    referredToOVCPartner: '',\r\n    dateReferredToOVCPartner: '',\r\n    referredFromOVCPartner: '',\r\n    dateReferredFromOVCPartner: '',\r\n    careEntryPointOther: '',\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState('false');\r\n\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts = patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(contacts.contact);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map(x => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: '',\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        obj => obj.type == 'HospitalNumber'\r\n      );\r\n      const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n      const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n      const altphone = contactPoint.contactPoint.find(\r\n        obj => obj.type == 'altphone'\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber = hospitalNumber ? hospitalNumber.value : '';\r\n      basicInfo.maritalStatusId = patientObj.maritalStatus.id;\r\n      basicInfo.employmentStatusId = patientObj.employmentStatus.id;\r\n      basicInfo.genderId = patientObj.gender ? patientObj.gender.id : null;\r\n      basicInfo.sexId = patientObj.sex;\r\n      basicInfo.educationId = patientObj.education.id;\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : '';\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : '';\r\n      basicInfo.email = email && email.value ? email.value : '';\r\n      basicInfo.address = country && country.city ? country.city : '';\r\n      basicInfo.landmark = country.line[0];\r\n      basicInfo.countryId = country.countryId;\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country.stateId);\r\n      basicInfo.stateId = country.stateId;\r\n      basicInfo.district = country.district;\r\n      setObjValues(patientObj.enrollment);\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format('DD-MM-YYYY')\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === 'Female' ? true : false);\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert('Date of registration can not be earlier than date of birth');\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async parentId => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now;\r\n  };\r\n  //Get States from selected country\r\n  const getStates = e => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setStates(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //fetch province\r\n  const getProvinces = e => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = e => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: '' });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = e => {\r\n    if (e.target.value == 'Actual') {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == 'Estimated') {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = e => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, 'years');\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format('YYYY-MM-DD');\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = e => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === 'sexId' && e.target.value === 'Female') {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === 'firstName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'lastName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'middleName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'hospitalNumber' && e.target.value !== '') {\r\n      async function getCharacters() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'text/plain',\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          setHospitalNumStatus(false);\r\n          setHospitalNumStatus2(true);\r\n        }\r\n      }\r\n      getCharacters();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: '/' });\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? '' : 'First Name is required';\r\n    temp.lastName = relatives.lastName ? '' : 'Last Name  is required.';\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? ''\r\n      : 'Relationship Type is required.';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = e => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = index => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = relationshipId => {\r\n    const relationship = relationshipOptions.find(\r\n      obj => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : '';\r\n  };\r\n  const handleInputChangeRelatives = e => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? '' : 'First Name is required';\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? ''\r\n      : 'Hospital Number  is required.';\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? '' : 'Last Name  is required.';\r\n    temp.sexId = basicInfo.sexId ? '' : 'Sex is required.';\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.educationId = basicInfo.educationId ? '' : 'Education is required.';\r\n    temp.address = basicInfo.address ? '' : 'Address is required.';\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? ''\r\n      : 'Phone Number  is required.';\r\n    temp.countryId = basicInfo.countryId ? '' : 'Country is required.';\r\n    temp.stateId = basicInfo.stateId ? '' : 'State is required.';\r\n    temp.district = basicInfo.district ? '' : 'Province/LGA is required.';\r\n    //HIV FORM VALIDATION\r\n    temp.targetGroupId = objValues.targetGroupId\r\n      ? ''\r\n      : 'Target group is required.';\r\n    temp.dateConfirmedHiv = objValues.dateConfirmedHiv\r\n      ? ''\r\n      : 'date confirm HIV is required.';\r\n    temp.sourceOfReferrerId = objValues.sourceOfReferrerId\r\n      ? ''\r\n      : 'Source of referrer is required.';\r\n    temp.enrollmentSettingId = objValues.enrollmentSettingId\r\n      ? ''\r\n      : 'Enrollment Setting Number  is required.';\r\n    temp.tbStatusId = objValues.tbStatusId ? '' : 'TB status is required.';\r\n    temp.statusAtRegistrationId = objValues.statusAtRegistrationId\r\n      ? ''\r\n      : 'Status at Registration is required.';\r\n    temp.entryPointId = objValues.entryPointId\r\n      ? ''\r\n      : 'Care Entry Point is required.';\r\n    temp.dateOfRegistration = objValues.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'Unique ID is required.';\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find(x => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId.id;\r\n    if (validate()) {\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map(x => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: 'phone',\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + ' ' + x.middleName + ' ' + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: '',\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.genderId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: 'HospitalNumber',\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == 'Actual' ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: 'phone',\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: 'email',\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: 'altphone',\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.hivEnrollment = objValues;\r\n        const response = await axios.put(\r\n          `${baseUrl}hiv/patient/${patientObj.id}`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success('Patient Updated successfully! ✔');\r\n        history.push('/');\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data && error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = value => {\r\n    const result = value.replace(/[^a-z]/gi, '');\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n    if (e.target.name === 'pregnancyStatusId') {\r\n      console.log(e.target.value);\r\n      if (e.target.value === '72') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: '/patient-history',\r\n              state: { patientObj: patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Back{' '}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Edit User Information\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{' '}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.dateOfRegistration1 !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            disabled={\r\n                              locationState.actionType === 'update'\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {'Hospital number already exist'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus2 === true ? (\r\n                            <span className={classes.success}>\r\n                              {'Hospital number is OK.'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={Math.floor(Math.random() * 1094328)}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.firstName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.lastName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            max={today}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={'row'}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            National Identity Number (NIN){' '}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nin\"\r\n                            id=\"nin\"\r\n                            value={basicInfo.ninNumber}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'phoneNumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.phoneNumber !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'altPhonenumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={getProvinces}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.address !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: '100%' }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      ' ' +\r\n                                      item.middleName +\r\n                                      ' ' +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={e => handleDeleteRelative(index)}\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  >\r\n                                    <option value={''}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.firstName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.lastName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: '100%',\r\n                                      border: '1px solid #014D88',\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: '100%',\r\n                                      borderRadius: '0px',\r\n                                    }}\r\n                                    country={'ng'}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    onChange={e => {\r\n                                      checkPhoneNumber(e.slice(0, 10), 'phone');\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    HIV Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique ID No * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueId\"\r\n                          id=\"uniqueId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.uniqueId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of Enrollment *{' '}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          min={basicInfo.dateOfRegistration}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateOfRegistration}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfRegistration !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"entryPointId\"\r\n                          id=\"entryPointId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.entryPointId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.entryPointId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.entryPointId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      {transferIn === true ? (\r\n                        <FormGroup>\r\n                          <Label>Facility Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityName\"\r\n                            id=\"facilityName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityName}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Status at Registration *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"statusAtRegistrationId\"\r\n                          id=\"statusAtRegistrationId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.statusAtRegistrationId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {hivStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.statusAtRegistrationId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.statusAtRegistrationId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of Confirmed HIV Test *</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateConfirmedHiv\"\r\n                          id=\"dateConfirmedHiv\"\r\n                          min={basicInfo.dob}\r\n                          max={objValues.dateOfRegistration}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateConfirmedHiv}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateConfirmedHiv !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateConfirmedHiv}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Source of Referral *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"sourceOfReferrerId\"\r\n                          id=\"sourceOfReferrerId\"\r\n                          value={objValues.sourceOfReferrerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          {sourceReferral.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.sourceOfReferrerId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.sourceOfReferrerId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Enrollment Setting *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"enrollmentSettingId\"\r\n                          id=\"enrollmentSettingId\"\r\n                          value={objValues.enrollmentSettingId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChange}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n\r\n                          {enrollSetting.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.enrollmentSettingId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.enrollmentSettingId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {femaleStatus && basicInfo.age > 9 && (\r\n                      <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label> Pregnancy </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"pregnancyStatusId\"\r\n                              id=\"pregnancyStatusId\"\r\n                              value={objValues.pregnancyStatusId}\r\n                              style={{\r\n                                border: '1px solid #014D88',\r\n                                borderRadius: '0.2rem',\r\n                              }}\r\n                              onChange={handleInputChange}\r\n                              //disabled={locationState.actionType==='update'? false : true}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {pregnancyStatus.map(value => (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.pregnancyStatusId !== '72' && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                              <FormGroup>\r\n                                <Label>Date of LMP </Label>\r\n                                <Input\r\n                                  type=\"date\"\r\n                                  onKeyDown={e => e.preventDefault()}\r\n                                  name=\"dateOfLpm\"\r\n                                  id=\"dateOfLpm\"\r\n                                  max={today}\r\n                                  onChange={handleInputChange}\r\n                                  value={objValues.dateOfLpm}\r\n                                  style={{\r\n                                    border: '1px solid #014D88',\r\n                                    borderRadius: '0.2rem',\r\n                                  }}\r\n                                  //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>TB Status * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbStatusId\"\r\n                          id=\"tbStatusId\"\r\n                          value={objValues.tbStatusId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {tbStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.tbStatusId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.tbStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {hideTargetGroup === 'false' ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>Target Group *</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"targetGroupId\"\r\n                            id=\"targetGroupId\"\r\n                            value={objValues.targetGroupId}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {kP.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.targetGroupId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.targetGroupId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <div className=\"form-check custom-checkbox ml-1 \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"ovc_enrolled\"\r\n                          id=\"ovc_enrolled\"\r\n                          onChange={handleCheckBox}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                          Enrolled into OVC?\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    {basicInfo.age <= 14 && (\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name=\"ovc_enrolled\"\r\n                            id=\"ovc_enrolled\"\r\n                            onChange={handleCheckBox}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                          >\r\n                            Enrolled into OVC?\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n\r\n                    {ovcEnrolled === true && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Household Unique Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"householdNumber\"\r\n                                id=\"householdNumber\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.householdNumber}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\"></div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredToOVCPartner\"\r\n                                id=\"referredToOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredToOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredToOVCPartner\"\r\n                                id=\"dateReferredToOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredToOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredFromOVCPartner\"\r\n                                id=\"referredFromOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredFromOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredFromOVCPartner\"\r\n                                id=\"dateReferredFromOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredFromOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : ''}\r\n\r\n              <br />\r\n\r\n              {locationState.actionType === 'update' ? (\r\n                <>\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Update\r\n                      </span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Updating...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n\r\n                  <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancel}\r\n                    style={{ backgroundColor: '#992E62' }}\r\n                  >\r\n                    <span\r\n                      style={{ textTransform: 'capitalize', color: '#fff' }}\r\n                    >\r\n                      Cancel\r\n                    </span>\r\n                  </MatButton>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from 'react';\r\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport './../src/main/webapp/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ marginTop: '3em' }}>\r\n      <Router>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/patient-dashboard\">\r\n              {/* This is the component to access patient dashboard */}\r\n              <PatientDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              {/* This is the entry point to the application */}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}