{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","_useState","useState","_useState2","_slicedToArray","setPatientList","_useState3","_useState4","setLoading","_useState5","_useState6","showPPI","setShowPPI","_patients","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","baseUrl","headers","Authorization","then","response","data","catch","error","stop","apply","arguments","useEffect","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","search","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","patientDetail","setpatientObj","ExpansionPanel","ExpansionPanelSummary","md","_Fragment","root2","personResponseDto","ButtonMui","startIcon","TiArrowBack","textTransform","identifier","find","obj","getHospitalNumber","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sex","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Typography","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","activeContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","_React$useState","React","_React$useState2","open","setOpen","_useState7","_useState8","record","setRecord","toggle","_useState9","_useState10","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","visitCount","encounterDate","nextAppointment","class","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","loading","PatientHistory","isLoading","position","item","viewable","Icon","editable","LoadModal","useStyles","makeStyles","card","margin","display","flexDirection","form","submit","cardBottom","Select","button","flexGrow","input","ClinicVisit","errors","setErrors","disabledField","setSisabledField","patientDto","setPatientDto","temp","adherenceLevel","setAdherenceLevel","_useState11","_useState12","sti","setSti","_useState13","_useState14","setPrepStatus","_useState15","_useState16","prepSideEffect","setPrepSideEffect","_useState17","_useState18","setHtsResult","_useState19","_useState20","prepRegimen","setprepRegimen","_useState21","_useState22","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","_useState23","_useState24","setLabTestOptions","_useState25","_useState26","urineTestResult","setUrineTestResult","_useState27","_useState28","otherTestResult","setOtherTestResult","_useState29","_useState30","sphylisTestResult","setSphylisTestResult","_useState31","_useState32","hepaTestResult","setHepaTestResult","_useState33","_useState34","familyPlanningMethod","setFamilyPlanningMethod","_useState35","_useState36","pregnant","setpregnant","_useState37","_useState38","prepEntryPoint","setPrepEntryPoints","_useState39","_useState40","prepType","setPrepType","_useState41","_useState42","populationType","setPopulationType","_useState43","_useState44","visitType","setVisitType","_useState45","_useState46","setSelectedPopulationType","_useState47","_useState48","latestFromEligibility","setLatestFromEligibility","testsOptions","_useState49","_useState50","hivTestValue","setHivTestValue","_useState51","_useState52","hivTestResultDate","setHivTestResultDate","handleInputChange","_useState53","diastolic","systolic","pulse","temperature","respiratoryRate","_useState54","vitalClinicalSupport","setVitalClinicalSupport","_useState55","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","extra","hepatitis","notedSideEffects","otherTestsDone","prepEnrollmentUuid","referred","regimenId","riskReductionServices","healthCareWorkerSignature","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","hivTestResult","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","_useState56","objValues","setObjValues","_useState57","urinalysisTest","testDate","_useState58","setUrinalysisTest","_useState59","syphilisTest","others","_useState60","setSyphilisTest","_useState61","hepatitisTest","_useState62","setHepatitisTest","_useState63","_useState64","otherTest","setOtherTest","_AdherenceLevel","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_RISK_REDUCTION_PLAN","PREP_STATUS","HTS_RESULT","LAST_HIV_TEST_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","PrepRegimen","TestGroup","PREP_URINALYSIS_RESULT","PREP_OTHER_TEST","HEPATITIS_SCREENING_RESULT","SYPHILIS_RESULT","PREGANACY_STATUS","PREP_ENTRY_POINT","PREP_TYPE","POPULATION_TYPE","VISIT_TYPE","FAMILY_PLANNING_METHOD","GetPatientVisit","GetLatestFromEligibility","labTests","x2","push","label","labTestName","testGroupId","testGroupName","groupName","sampleType","_ref2","_callee2","_context2","console","log","_toConsumableArray","localId","otherTestName","_x","_useState65","_useState66","prepRiskReductionPlan","setPrepRiskReductionPlan","lastHivTest","undefined","test1","_populationType$find","_visitType$find","_pregnant$find","pregnancyStatus","autoPopulatePopulationType","code","_ref3","_callee4","_context4","_ref4","_callee3","latestEligibility","_context3","sort","a","b","visitDate","isBefore","length","_x2","autoPopulate","_ref5","_callee5","_context5","_callee6","_context6","_defineProperty","durationInDays","Number","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","emptyObjValues","handleSubmit","preventDefault","isFemale","Object","values","every","uuid","put","POSITION","BOTTOM_CENTER","activeTab","post","toLowerCase","Grid","Column","Segment","ribbon","FormGroup","FormLabelName","Input","min","dateEnrolled","max","InputGroup","onKeyUp","InputGroupText","addonType","plan","for","_objValues$otherTests","defaultChecked","eachTest","component","MatButton","AddIcon","placeholder","SaveIcon","ClinicVisitPage","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","liverFunctionTestResults","dateLiverFunctionTestResults","urinalysisTestResult","setUrinalysisTestResult","liverFunctionTestResult","setLiverFunctionTestResult","LiverFunctionTestResult","HistoryOfDrugToDrugInteraction","GetPatientCommercement","_ref","validate","PatientObject","CardBody","bodyWeight","breastFeeding","Spinner","demo","background","default","inline","PrEPEligibiltyScreeningForm","setDisabledField","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonStooped","setReasonStooped","setCauseOfDeath","PREP_STATUS_STOPPED_REASON","CAUSE_DEATH","GetPatientInterruption","linkToArt","required","reasonStoppedOther","dateLinkToArt","CancelIcon","BasicInfo","_servicesReceivedByCl","patientID","counselingType","setCounselingType","reasonForDecline","setReasonForDecline","setPregnancyStatus","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","score","CounselingType","VisitType","ReasonForDecline","PopulationType","PregnancyStatus","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","setAssessmentForPepIndication","assessmentForPepIndication","setAssessmentForAcuteHivInfection","assessmentForAcuteHivInfection","setServicesReceivedByClient","servicesReceivedByClient","setAssessmentForPrepEligibility","assessmentForPrepEligibility","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","handleInputChangeRiskAssessment","riskCount","filter","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","drugHistory","handleInputChangeDrugHistory","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","handleInputChangeAssessmentForPepIndication","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","handleInputChangeAssessmentForAcuteHivInfection","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","handleInputChangeAssessmentForPrepEligibility","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","handleInputChangeServicesReceivedByClient","getPrepEligibilityScore","is30AndAbove","getIndicationForPepResult","each","getAcuteHivResult","dateHivPositive","dateOfRegistration","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","fluid","multiple","selection","one","PrEPVisit","useHistory","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","inputName","slice","checkPhoneNumberBasic","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","location","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","sent","personCapturedFingers","biometricItems","_biometricItems","_","uniq","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","_PatientObject","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","patientDTO","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","setCarePoints","sourceReferral","setSourceReferral","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","transferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","GetCountry","newConatctsInfo","contactInfo","identifiers","altphone","maritalStatus","employmentStatus","education","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","t0","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","_ref8","_callee8","hosiptalNumber","_context8","getRelationship","relationship","handleInputChangeRelatives","dateOfRegistration1","_ref9","_callee9","getSexId","patientForm","_context9","fullName","person","hivEnrollment","autoClose","hideProgressBar","Form","Math","floor","random","currentDate","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.d17d37e4.chunk.js","sourcesContent":["// export const token = new URLSearchParams(window.location.search).get(\"jwt\");\n// export const url = \"/api/v1/\";\nexport const url = \"http://localhost:8383/api/v1/\";\nexport const token =\n  \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzIzNDkzODMyfQ.brPLxFsJiXIDLvdqTdby2TXfTx5UVHUJxdwWU2wD_JWW6u0jEqYLpKJmOlgPSDyL_r607P29t8do8zwDNQPAqg\";\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Link } from \"react-router-dom\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from \"semantic-ui-react\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst Patients = (props) => {\n  const [patientList, setPatientList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showPPI, setShowPPI] = useState(true);\n  useEffect(() => {\n    patients();\n  }, []);\n  ///GET LIST OF Patients\n  async function patients() {\n    setLoading(true);\n    axios\n      .get(`${baseUrl}prep/persons`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setLoading(false);\n        setPatientList(response.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n      });\n  }\n\n  const handleCheckBox = (e) => {\n    if (e.target.checked) {\n      setShowPPI(false);\n    } else {\n      setShowPPI(true);\n    }\n  };\n\n  return (\n    <div>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Find Patient \"\n        columns={[\n          // { title: \" ID\", field: \"Id\" },\n          {\n            title: \"Patient Name\",\n            field: \"name\",\n            hidden: showPPI,\n          },\n          {\n            title: \"Hospital Number\",\n            field: \"hospital_number\",\n            filtering: false,\n          },\n          { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\n          { title: \"Sex\", field: \"gender\", filtering: false },\n          { title: \"Age\", field: \"age\", filtering: false },\n\n          //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n          { title: \"PrEP Status\", field: \"status\", filtering: false },\n          { title: \"Actions\", field: \"actions\", filtering: false },\n        ]}\n        //isLoading={loading}\n        data={(query) =>\n          new Promise((resolve, reject) =>\n            axios\n              .get(\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\n                { headers: { Authorization: `Bearer ${token}` } }\n              )\n              .then((response) => response)\n              .then((result) => {\n                resolve({\n                  data: result?.data?.records?.map?.((row) => ({\n                    name: row.firstName + \" \" + row.surname,\n                    hospital_number: row.hospitalNumber,\n                    clientCode: row.uniqueId,\n                    //phone_number:  row.phone,\n                    gender: row && row.gender ? row.gender : \"\",\n                    age: row.age,\n\n                    status: (\n                      <Label color=\"blue\" size=\"mini\">\n                        {row.prepStatus}\n                      </Label>\n                    ),\n\n                    actions: (\n                      <div>\n                        <Link\n                          to={{\n                            pathname: \"/patient-dashboard\",\n                            state: { patientObj: row },\n                          }}\n                        >\n                          <ButtonGroup\n                            variant=\"contained\"\n                            aria-label=\"split button\"\n                            style={{\n                              backgroundColor: \"rgb(153, 46, 98)\",\n                              height: \"30px\",\n                              width: \"215px\",\n                            }}\n                            size=\"large\"\n                          >\n                            <Button\n                              color=\"primary\"\n                              size=\"small\"\n                              aria-label=\"select merge strategy\"\n                              aria-haspopup=\"menu\"\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\n                            >\n                              <MdDashboard />\n                            </Button>\n                            <Button\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\n                            >\n                              <span\n                                style={{\n                                  fontSize: \"12px\",\n                                  color: \"#fff\",\n                                  fontWeight: \"bolder\",\n                                }}\n                              >\n                                Patient Dashboard\n                              </span>\n                            </Button>\n                          </ButtonGroup>\n                        </Link>\n                      </div>\n                    ),\n                  })),\n                  page: query.page,\n                  totalCount: result.data.totalRecords,\n                });\n              })\n          )\n        }\n        options={{\n          headerStyle: {\n            backgroundColor: \"#014d88\",\n            color: \"#fff\",\n          },\n          searchFieldStyle: {\n            width: \"200%\",\n            margingLeft: \"250px\",\n          },\n          filtering: false,\n          exportButton: true,\n          searchFieldAlignment: \"left\",\n          pageSizeOptions: [10, 20, 100],\n          pageSize: 10,\n          debounceInterval: 400,\n        }}\n        components={{\n          Toolbar: (props) => (\n            <div>\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  name=\"showPP!\"\n                  id=\"showPP\"\n                  value=\"showPP\"\n                  checked={showPPI === true ? false : true}\n                  onChange={handleCheckBox}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\n                    SHOW PII\n                  </b>\n                </label>\n              </div>\n              <MTableToolbar {...props} />\n            </div>\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Patients;\n","import React, {useState, Fragment } from \"react\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport PatientList from './Patient/PatientList'\n\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n    const [key, setKey] = useState('home');\n\n\n  return (\n    <Fragment>  \n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\n\t\t\t</ol>\n\t\t  </div>\n      {/* <Link to={\"register-patient\"}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end mb-10\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n                style={{backgroundColor:'#014d88'}}\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n        </Link> */}\n        <br/><br/>\n\n      <Row>       \n        <Col xl={12}>\n          <Card style={divStyle}>            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                >\n                  \n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \n                    <PatientList />\n                  </Tab>\n                  {/* <Tab eventKey=\"prep-patient\" title=\"PrEP Patients\">                   \n                    <PrepPatients />\n                  </Tab>                     */}\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Link } from 'react-router-dom'\nimport ButtonMui from \"@material-ui/core/Button\";\nimport { TiArrowBack } from 'react-icons/ti'\n//import Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n//import { Button } from 'semantic-ui-react';\nimport {Label,} from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n//import axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport Typography from '@material-ui/core/Typography';\n// import CaptureBiometric from './CaptureBiometric';\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  //const patientObj = props.patientObj ? props.patientObj : {}\n  const [patientObj, setpatientObj] = useState(props.patientDetail)\n\n  useEffect(() => {\n    setpatientObj(props.patientDetail);\n  }, [props.patientDetail]);\n    const calculate_age = dob => {\n      var today = new Date();\n      var dateParts = dob.split(\"-\");\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n      var age_now = today.getFullYear() - birthDate.getFullYear();\n      var m = today.getMonth() - birthDate.getMonth();\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                  age_now--;\n              }\n          if (age_now === 0) {\n                  return m + \" month(s)\";\n              }\n              return age_now + \" year(s)\";\n    };\n    //console.log(patientObj)\n    const getHospitalNumber = (identifier) => {     \n      const identifiers = identifier;\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');       \n      return hospitalNumber ? hospitalNumber.value : '';\n    };\n    const getPhoneNumber = (identifier) => {     \n      const identifiers = identifier;\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type === 'phone');       \n      return phoneNumber ? phoneNumber.value : '';\n    };\n    const getAddress = (identifier) => {     \n      const identifiers = identifier;\n      const address = identifiers.address.find(obj => obj.city); \n      const houseAddress=address && address.line[0]!==null ? address.line[0] :\"\"      \n      const landMark=address && address.city && address.city!==null ? address.city :\"\"    \n      return address ? houseAddress + \" \" + landMark : '';\n    };\n\n  \n  return (\n    <div className={classes.root}>\n       <ExpansionPanel >\n                <ExpansionPanelSummary >                \n                <Row>                \n                    <Col md={12}>\n                    {patientObj && patientObj!==null ? (<>\n                    <Row className={\"mt-1\"}>\n                    <Col md={12} className={classes.root2}>\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\n                        {patientObj.personResponseDto.firstName + \" \" + patientObj.personResponseDto.surname }\n                        </b>\n                        <Link to={\"/\"} >\n                        <ButtonMui\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-end ms-2 mr-2 mt-2\"\n                            //startIcon={<FaUserPlus size=\"10\"/>}\n                            startIcon={<TiArrowBack  />}\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\n\n                        >\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                        </ButtonMui>\n                      </Link>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.personResponseDto.identifier) }</b>\n                    </span>\n                    </Col>\n\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto.dateOfBirth }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\n                    </span>\n                    </Col>\n                    <Col md={4}>\n                    <span>\n                        {\" \"}\n                        Gender :{\" \"}\n                        <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto && patientObj.personResponseDto.sex!==null ?  patientObj.personResponseDto.sex : '' }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.personResponseDto.contactPoint)}</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.personResponseDto.address)} </b>\n                    </span>\n                    </Col>\n                    {patientObj.prepStatus!==null && (\n                    <Col md={12}>\n                       <div >\n                            <Typography variant=\"caption\">\n                                <Label color={ \"teal\"} size={\"mini\"}>\n                                   STATUS : {patientObj && patientObj.prepStatus}    \n                                </Label>\n                              \n                            </Typography>\n                       </div>                 \n                    </Col> \n                    )}\n                    </Row>\n                    </>)\n                    :(\n                      <>\n                      <p>Loading please wait..</p>\n                      </>\n                    )\n                  }\n                    </Col>\n                </Row>\n                </ExpansionPanelSummary>\n                <Divider />\n        </ExpansionPanel>\n    \n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React, { useState, useEffect } from \"react\";\nimport { Menu, Popup } from \"semantic-ui-react\";\n\n\n\n\nfunction SubMenu(props) {\n\n    const patientObj = props.patientObj \n    useEffect(() => {\n        //Observation();\n    }, [props.patientObj]);\n\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\n    }\n    const loadPrEPRegistrationForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\n    }\n    const loadPrEPCommencementForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\n    }\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\n    }\n\n    const onClickConsultation = (row) =>{        \n        props.setActiveContent({...props.activeContent, route:'consultation'})\n    }\n    const onClickHome = (row) =>{        \n        props.setActiveContent({...props.activeContent, route:'recent-history'})\n    }\n    const loadPatientHistory = ()=>{\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\n    }\n\n    return (\n         <div>\n\n                <Menu size=\"large\" color={\"black\"} inverted >\n                { patientObj.createdBy!==\"ETL\"  ? //The menu will show if the patient is not migrated \n                (<>\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\n                                  \n                { patientObj.eligibilityCount<=0 || patientObj.eligibilityCount===null ?\n                (<>\n                    <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>\n                   \n                </>)\n                :\n                (<>\n                {/* check if the patient has done prep commencement */}\n                    {patientObj.prepCount==='0' || patientObj.commencementCount===null ? \n                    (<>\n                        {patientObj.prepCount==='0' && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                        \n                    </>) \n                    : (<>\n                       \n                        <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} > PrEP Eligibility Screening </Menu.Item>\n                        {(patientObj.prepCount===null || patientObj.prepCount<0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\n                    </>)\n                    }\n                    \n                </>)}\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>   \n                </>)\n                :\n\n                (<>\n                {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && patientObj.prepCount==='0' && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (patientObj.commencementCount===null || patientObj.commencementCount<=0) &&(<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>     \n                </>) }                \n                </Menu>\n                   \n        </div>\n    );\n}\n\n\n\nexport default SubMenu;\n","import React, { Fragment, useState, useEffect } from \"react\";\n// BS\nimport { Dropdown,} from \"react-bootstrap\";\n/// Scroll\nimport { makeStyles } from '@material-ui/core/styles';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n//import { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"../../../api\";\n//import { Alert } from \"react-bootstrap\";\nimport {  Card,Accordion } from \"react-bootstrap\";\nimport {  Modal } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport {Button } from 'semantic-ui-react'\n\nconst RecentHistory = (props) => {\n  //console.log(props.patientObj)\n  const [recentActivities, setRecentActivities] = useState([])\n  const [summary, setSummary] = useState(null)\n  const [saving, setSaving] = useState(false)\n  const [open, setOpen] = React.useState(false)\n  const [record, setRecord] = useState(null)\n  const toggle = () => setOpen(!open);\n  const [\n    activeAccordionHeaderShadow,\n    setActiveAccordionHeaderShadow,\n  ] = useState(0);\n\n  useEffect(() => {\n    Summary()\n    RecentActivities();\n  }, [props.patientObj.personId]);\n\n  const RecentActivities =()=>{\n    axios\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\n       )\n       .then((response) => {\n          setRecentActivities(response.data)\n       })\n       .catch((error) => {\n       //console.log(error);\n       });\n   \n  }\n  const Summary =()=>{\n    axios\n       .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\n       )\n       .then((response) => {\n          setSummary(response.data[0])\n       })\n       .catch((error) => {\n       //console.log(error);\n       });\n   \n  }\n\n\n  const ActivityName =(name)=> {\n      if(name==='HIV Enrollment'){\n        return \"HE\"\n      }else if(name==='Prep Clinic'){\n        return \"PC\"\n      }else if(name==='Prep Enrollment'){\n        return \"PE\"\n      }else if(name==='Prep Eligibility'){\n        return \"PE\"\n      }else if(name==='ART Commencement'){\n        return \"AC\"\n      }else {\n        return \"RA\"\n      }\n  }\n\n    const LoadViewPage =(row,action)=>{\n          \n      if(row.path==='prep-eligibility'){        \n          props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-enrollment'){\n          props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-clinic'){//prep-commencement \n          props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-commencement'){\n          props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-interruption'){\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\n\n      }else{\n\n      }\n      \n  }\n  const LoadModal =(row)=>{\n    toggle()\n    setRecord(row)\n  }\nconst LoadDeletePage =(row)=>{\n  if(row.path==='prep-eligibility'){ \n      setSaving(true)       \n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-eligibility/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });  \n  }else if(row.path==='prep-clinic'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-enrollment'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-commencement'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-interruption'){\n    setSaving(true)\n    //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n    axios\n    .delete(`${baseUrl}prep-interruption/${row.id}`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setSaving(false)\n        toast.success(\"Record Deleted Successfully\");\n        RecentActivities()\n        toggle()\n    })\n    .catch((error) => {\n        setSaving(false)\n        if(error.response && error.response.data){\n            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          }\n          else{\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n    });\n\n}else{\n\n  }\n  \n}\n  // const redirectLink=()=>{\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\n  // }\n  //const index= 1\n\n  return (\n    <Fragment>\n      {/* <Ext /> */}\n     \n      <div className=\"row\">\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\n          <div className=\"card\">\n            <div className=\"card-header  border-0 pb-0\" >\n              <h4 className=\"card-title\"> Recent Activities</h4>\n            </div>\n            <div className=\"card-body\">\n              <PerfectScrollbar\n                style={{ height: \"370px\" }}\n                id=\"DZ_W_Todo1\"\n                className=\"widget-media dz-scroll ps ps--active-y\"\n              >\n                <Accordion\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\n                    defaultActiveKey=\"0\"\n                  >\n                    <>\n                    {recentActivities.map((data, i)=>\n                    <div className=\"accordion-item\" key={i}>\n                      <Accordion.Toggle\n                          as={Card.Text}\n                          eventKey={`${i}`}\n                          className={`accordion-header ${\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\n                          } accordion-header-info`}\n                          onClick={() =>\n                            setActiveAccordionHeaderShadow(\n                              activeAccordionHeaderShadow === 1 ? -1 : i\n                            )\n                          }\n                      >\n                      <span className=\"accordion-header-icon\"></span>\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\n                      <span className=\"accordion-header-indicator\"></span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse\n                      eventKey={`${i}`}\n                      className=\"accordion__body\"\n                    >\n                      <div className=\"accordion-body-text\">\n                      <ul className=\"timeline\">\n                      {data.activities && data.activities.map((activity,index) => ( \n                          \n                          <> \n                            <li>\n                              <div className=\"timeline-panel\">\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\n                              <div className=\"media-body\">\n                                <h5 className=\"mb-1\">{activity.name}</h5>\n                                <small className=\"d-block\">\n                                {activity.date}\n                                </small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                <Dropdown.Toggle\n                                variant=\" light\"\n                                className=\"i-false p-0 btn-info sharp\"\n                                >\n                                <svg\n                                  width=\"18px\"\n                                  height=\"18px\"\n                                  viewBox=\"0 0 24 24\"\n                                  version=\"1.1\"\n                                >\n                                  <g\n                                  stroke=\"none\"\n                                  strokeWidth=\"1\"\n                                  fill=\"none\"\n                                  fillRule=\"evenodd\"\n                                  >\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                  </g>\n                                </svg>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown-menu\">\n                                <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  onClick={()=>LoadViewPage(activity,'view')}\n                                  >\n                                  View\n                                  </Dropdown.Item>\n                               \n                               <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  onClick={()=>LoadViewPage(activity,'update')}\n                                  >\n                                  Update\n                                  </Dropdown.Item>\n                               \n                                 <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  to=\"/widget-basic\"\n                                  onClick={()=>LoadModal(activity)}\n                                  >\n                                  Delete\n                                  </Dropdown.Item>\n                                  \n                                </Dropdown.Menu>\n                              </Dropdown>\n                              </div>\n                            </li>\n                            </>\n                       ))}                       \n                      </ul>\n                      </div>\n                    </Accordion.Collapse>\n                  </div>\n                )}\n                </>\n                </Accordion>\n                \n              </PerfectScrollbar>\n            </div>\n          </div>\n      </div>\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\n        <div className=\"card\">\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\n            <h4 className=\"card-title\">Summary </h4>\n          </div>\n          <div className=\"row\">\n                {summary && summary!==null && (<>\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                <div className=\"card-body\">\n                  \n                  <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                    <div className=\"card overflow-hidden\">\n                  <div className=\"social-graph-wrapper widget-facebook\">\n                    <span className=\"s-icon\">\n                      <span style={{fontSize:\"16px\"}}>Total Clinic Visit : {summary.visitCount}</span>\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-6 border-right\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\"><b>{summary.encounterDate}</b></span> \n                        </h4>\n                        <p className=\"m-0\"><b>Last Visit </b></p>\n                      </div>\n                    </div>\n                   \n                    <div className=\"col-6\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\"><b>{summary.nextAppointment}</b></span>\n                        </h4>\n                        <p className=\"m-0\"><b>Next Visit</b></p>\n                      </div>\n                    </div>\n                   \n                  </div>\n                </div>\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12 col-sm-12\">\n                  <div className=\"widget-stat card\">\n                    <div className=\"card-body p-4\" style={{backgroundColor:\"#fff\"}}>\n                      <h4 className=\"card-title\" style={{fontSize:\"15px\"}}><b>Current Regimen Given</b></h4>\n                      <h4 class=\"text-info \">{summary.regimen}</h4>\n                     \n                    </div>\n                  </div>\n                  </div>\n                </div>\n                </div>\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                <div className=\"card-body\">\n                    <div className=\"card overflow-hidden\">\n                  <div className=\"social-graph-wrapper widget-linkedin\">\n                    <span className=\"s-icon\">\n                    <span style={{fontSize:\"16px\", }}>BMI : {(summary.weight/((summary.height/100) * (summary.height/100))).toFixed(2)} kg/m<sup>2</sup></span>\n                    </span>\n                  </div>\n                  <div className=\"row\">\n\n                    <div className=\"col-6 border-right\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\">{summary.weight} Kg</span> \n                        </h4>\n                        <p className=\"m-0\"><b>Weight </b></p>\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\">{summary.height} cm</span>\n                        </h4>\n                        <p className=\"m-0\"><b>Height </b></p>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </div>\n                </div>\n                </div>\n                </>)}\n          </div>\n        </div>\n      </div>\n    </div>\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>  \n    </Fragment>\n  );\n};\n\nexport default RecentHistory;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nconst PatientnHistory = (props) => {\n    const [recentActivities, setRecentActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [open, setOpen] = React.useState(false)\n    const [record, setRecord] = useState(null)\n     const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n      }, [props.patientObj.id]);\n        ///GET LIST OF Patients        \n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)                       \n                    setRecentActivities(response.data)\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadViewPage =(row,action)=>{\n        \n        if(row.path==='prep-eligibility'){        \n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-enrollment'){\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-clinic'){//prep-commencement \n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-commencement'){\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-interruption'){\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\n\n        }else{\n\n        }\n        \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n    const LoadDeletePage =(row)=>{\n        \n        if(row.path==='prep-eligibility'){ \n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        }else if(row.path==='prep-clinic'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-commencement'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-interruption'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else{\n\n        }\n        \n    }\n\n\n  return (\n    <div>\n        \n    <br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Patient History \"\n              columns={[\n                { title: \"Name\", field: \"name\" },\n                {\n                  title: \"Encounter Date\",\n                  field: \"date\",\n                },               \n                // { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={recentActivities && recentActivities.map((row) => ({\n                   name: row.name,\n                   date: row.date,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>    \n    </div>\n  );\n}\n    \nexport default PatientnHistory;\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Segment, Label, List, Card } from \"semantic-ui-react\";\n// Page titie\nimport {\n  FormGroup,\n  Label as FormLabelName,\n  InputGroup,\n  InputGroupText,\n  Input,\n} from \"reactstrap\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport Select from \"react-select\";\nimport Divider from \"@mui/material/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n  root: {\n    flexGrow: 1,\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst ClinicVisit = (props) => {\n  //let patientObj = props.patientObj ? props.patientObj : {}\n  const [errors, setErrors] = useState({});\n  const [disabledField, setSisabledField] = useState(false);\n  const [patientDto, setPatientDto] = useState();\n  let temp = { ...errors };\n  const classes = useStyles();\n  const [saving, setSaving] = useState(false);\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\n  const [sti, setSti] = useState([]);\n  const [prepStatus, setPrepStatus] = useState([]);\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\n  const [htsResult, setHtsResult] = useState([]);\n  const [prepRegimen, setprepRegimen] = useState([]);\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\n  const [labTestOptions, setLabTestOptions] = useState([]);\n  const [urineTestResult, setUrineTestResult] = useState([]);\n  const [otherTestResult, setOtherTestResult] = useState([]);\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\n  const [hepaTestResult, setHepaTestResult] = useState([]);\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\n  const [pregnant, setpregnant] = useState([]);\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\n  const [prepType, setPrepType] = useState([]);\n  const [populationType, setPopulationType] = useState([]);\n  const [visitType, setVisitType] = useState([]);\n  // const [selectedPregnant, setSelectedPregnant] = useState(\"\");\n  const [selectedPopulationType, setSelectedPopulationType] = useState(\"\");\n  // const [selectedVisitType, setSelectedVisitType] = useState(\"\");\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\n  let testsOptions = [];\n  const [hivTestValue, setHivTestValue] = useState(\"\");\n  const [hivTestResultDate, setHivTestResultDate] = useState(\"\");\n\n  useEffect(() => {\n    handleInputChange({\n      target: { name: \"hivTestResult\", value: hivTestValue },\n    });\n    handleInputChange({\n      target: { name: \"hivTestResultDate\", value: hivTestResultDate },\n    });\n  }, [hivTestValue]);\n  //Vital signs clinical decision support\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\n    weight: \"\",\n    diastolic: \"\",\n    height: \"\",\n    systolic: \"\",\n    pulse: \"\",\n    temperature: \"\",\n    respiratoryRate: \"\",\n  });\n\n  const [objValues, setObjValues] = useState({\n    adherenceLevel: \"\",\n    dateInitialAdherenceCounseling: \"\",\n    datePrepGiven: \"\",\n    datePrepStart: \"\",\n    dateReferre: \"\",\n    diastolic: \"\",\n    encounterDate: \"\",\n    extra: {},\n    height: \"\",\n    hepatitis: {},\n    nextAppointment: \"\",\n    notedSideEffects: \"\",\n    otherTestsDone: [],\n    personId: props.patientObj.personId,\n    pregnant: \"\",\n    prepEnrollmentUuid: \"\",\n    pulse: \"\",\n    referred: \"\",\n    regimenId: \"\",\n    respiratoryRate: \"\",\n    riskReductionServices: \"\",\n    healthCareWorkerSignature: \"\",\n    stiScreening: \"\",\n    syndromicStiScreening: null,\n    syphilis: {},\n    systolic: \"\",\n    temperature: \"\",\n    urinalysis: {},\n    urinalysisResult: \"\",\n    weight: \"\",\n    why: \"\",\n    otherDrugs: \"\",\n    duration: \"\",\n    prepGiven: \"\",\n    hivTestResult: \"\",\n    hivTestResultDate: \"\",\n    prepType: \"\",\n    populationType: \"\",\n    prepDistributionSetting: \"\",\n    familyPlanning: \"\",\n    dateOfFamilyPlanning: \"\",\n    monthsOfRefill: \"\",\n    visitType: \"\",\n  });\n  const [urinalysisTest, setUrinalysisTest] = useState({\n    urinalysisTest: \"Yes\",\n    testDate: \"\",\n    result: \"\",\n  });\n\n  const [syphilisTest, setSyphilisTest] = useState({\n    syphilisTest: \"Yes\",\n    testDate: \"\",\n    result: \"\",\n    others: \"\",\n  });\n  const [hepatitisTest, setHepatitisTest] = useState({\n    hepatitisTest: \"Yes\",\n    testDate: \"\",\n    result: \"\",\n  });\n\n  const [otherTest, setOtherTest] = useState([]);\n\n  useEffect(async () => {\n    // Check if the fields exist in objValues first\n    if (\n      objValues.urinalysis.testDate &&\n      objValues.urinalysis.result &&\n      objValues.urinalysis.urinalysisTest\n    ) {\n      setUrinalysisTest({\n        ...urinalysisTest,\n        testDate: objValues.urinalysis.testDate,\n        result: objValues.urinalysis.result,\n        urinalysisTest: objValues.urinalysis.urinalysisTest,\n      });\n    }\n    if (\n      objValues.syphilis.testDate &&\n      objValues.syphilis.result &&\n      objValues.syphilis.syphilisTest\n    ) {\n      setSyphilisTest({\n        ...syphilisTest,\n        testDate: objValues.syphilis.testDate,\n        result: objValues.syphilis.result,\n        syphilisTest: objValues.syphilis.syphilisTest,\n        others: objValues.syphilis.others,\n      });\n    }\n    if (\n      objValues.hepatitis.testDate &&\n      objValues.hepatitis.result &&\n      objValues.hepatitis.hepatitisTest\n    ) {\n      setHepatitisTest({\n        ...hepatitisTest,\n        testDate: objValues.hepatitis.testDate,\n        result: objValues.hepatitis.result,\n        hepatitisTest: objValues.hepatitis.hepatitisTest,\n      });\n    }\n  }, [objValues]);\n\n  useEffect(() => {\n    AdherenceLevel();\n    SYNDROMIC_STI_SCREENING();\n    PREP_RISK_REDUCTION_PLAN();\n    //PatientDetaild();\n    PREP_STATUS();\n    HTS_RESULT();\n    LAST_HIV_TEST_RESULT();\n    PREP_SIDE_EFFECTS();\n    GetPatientDTOObj();\n    WHY_POOR_FAIR_ADHERENCE();\n    PrepEligibilityObj();\n    PrepRegimen();\n    TestGroup();\n    PREP_URINALYSIS_RESULT();\n    PREP_OTHER_TEST();\n    HEPATITIS_SCREENING_RESULT();\n    SYPHILIS_RESULT();\n    PREGANACY_STATUS();\n    PREP_ENTRY_POINT();\n    PREP_TYPE();\n    POPULATION_TYPE();\n    VISIT_TYPE();\n    FAMILY_PLANNING_METHOD();\n    if (\n      props.activeContent &&\n      props.activeContent.id !== \"\" &&\n      props.activeContent.id !== null\n    ) {\n      GetPatientVisit(props.activeContent.id);\n      setSisabledField(\n        props.activeContent.actionType === \"view\" ? true : false\n      );\n    }\n    GetLatestFromEligibility();\n  }, [props.activeContent]);\n\n  const PREGANACY_STATUS = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setpregnant(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  const PREP_ENTRY_POINT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepEntryPoints(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  const PREP_TYPE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepType(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  //Get list of Test Group\n  const TestGroup = () => {\n    axios\n      .get(`${baseUrl}laboratory/labtestgroups`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        response.data.map((x) => {\n          x.labTests.map((x2) => {\n            testsOptions.push({\n              value: x2.id,\n              label: x2.labTestName,\n              testGroupId: x.id,\n              testGroupName: x.groupName,\n              sampleType: x2.sampleType,\n            });\n          });\n        });\n        setLabTestOptions(testsOptions);\n      })\n      .catch((error) => {});\n  };\n  const GetPatientVisit = async (id) => {\n    axios\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(\"returned: \", response.data);\n        setObjValues(response.data);\n        if (response.data.otherTestsDone !== null) {\n          setOtherTest([\n            ...response.data.otherTestsDone.map((x, index) => {\n              return {\n                localId: index + 1,\n                otherTest: \"Yes\",\n                testDate: x.testDate,\n                result: x.result,\n                name: x.name,\n                otherTestName: x.otherTestName,\n              };\n            }),\n          ]);\n        }\n      })\n      .catch((error) => {});\n  };\n  const GetPatientDTOObj = () => {\n    axios\n      .get(\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        setPatientDto(response.data);\n      })\n      .catch((error) => {});\n  };\n  const PrepEligibilityObj = () => {\n    axios\n      .get(\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        //setPrepStatus(response.data);\n        objValues.prepEnrollmentUuid = \"\";\n      })\n      .catch((error) => {});\n  };\n  const PrepRegimen = () => {\n    axios\n      .get(`${baseUrl}prep-regimen`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setprepRegimen(response.data);\n      })\n      .catch((error) => {});\n  };\n  const PREP_STATUS = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepStatus(response.data);\n      })\n      .catch((error) => {});\n  };\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\n  const PREP_RISK_REDUCTION_PLAN = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        console.log(\"prep codeset: \", response.data);\n        setPrepRiskReductionPlan(response.data);\n      })\n      .catch((error) => {});\n  };\n  const PREP_SIDE_EFFECTS = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepSideEffect(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  const HTS_RESULT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setHtsResult(response.data);\n      })\n      .catch((error) => {});\n  };\n  const LAST_HIV_TEST_RESULT = () => {\n    axios\n      .get(`${baseUrl}hts/persons/${objValues.personId}/current-hts`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        var lastHivTest = response.data.hivTestResult;\n\n        if (lastHivTest !== null && lastHivTest !== undefined) {\n          setHivTestValue(response.data.hivTestResult);\n          setHivTestResultDate(response.data.test1.date);\n          objValues.hivTestResultDate = response.data.hivTestResult;\n          objValues.hivTestResultDate = response.data.test1.date;\n        } else {\n          setHivTestValue(\"NOT DONE\");\n        }\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    if (latestFromEligibility !== null) {\n      setObjValues({\n        ...objValues,\n        populationType:\n          latestFromEligibility !== null\n            ? latestFromEligibility.populationType\n            : \"\",\n        visitType:\n          latestFromEligibility !== null ? latestFromEligibility.visitType : \"\",\n        pregnant:\n          latestFromEligibility !== null\n            ? latestFromEligibility.pregnancyStatus\n            : \"\",\n      });\n      // await POPULATION_TYPE();\n      const autoPopulatePopulationType = populationType.find(\n        (type) => type.code === latestFromEligibility.populationType\n      )?.display;\n      const autoPopulateVisitType = visitType.find(\n        (type) => type.code === latestFromEligibility.visitType\n      )?.display;\n      const autoPopulatePregnant = pregnant.find(\n        (type) => type.code === latestFromEligibility.pregnancyStatus\n      )?.display;\n      setSelectedPopulationType(autoPopulatePopulationType);\n      // setSelectedVisitType(autoPopulateVisitType)\n      // setSelectedPregnant(autoPopulatePregnant)\n    }\n  }, [latestFromEligibility]);\n\n  const GetLatestFromEligibility = async () => {\n    axios\n      .get(`${baseUrl}prep-eligibility/person/${objValues.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then(async (response) => {\n        const latestEligibility = response.data.sort((a, b) =>\n          moment(a.visitDate).isBefore(moment(b.visitDate))\n        )[\n          // (a,b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n          response.data.length - 1\n        ];\n\n        setLatestFromEligibility(latestEligibility);\n      })\n      .catch((error) => {});\n  };\n\n  useEffect(() => {\n    if (\n      objValues.populationType !== null &&\n      objValues.populationType !== undefined\n    ) {\n      const autoPopulate = populationType.find(\n        (type) => type.code === objValues.populationType\n      );\n\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : \"\");\n    }\n  }, [objValues.populationType]);\n  const POPULATION_TYPE = async () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPopulationType(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  const VISIT_TYPE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setVisitType(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const WHY_POOR_FAIR_ADHERENCE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setWhyAdherenceLevelPoor(response.data);\n      })\n      .catch((error) => {});\n  };\n  ///GET LIST OF FUNCTIONAL%20_STATUS\n  // TB STATUS\n  const SYNDROMIC_STI_SCREENING = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSti(response.data);\n      })\n      .catch((error) => {});\n  };\n  //PREP_URINALYSIS_RESULT\n  const PREP_URINALYSIS_RESULT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setUrineTestResult(response.data);\n      })\n      .catch((error) => {});\n  };\n  //PREP_OTHER_TEST\n  const PREP_OTHER_TEST = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setOtherTestResult(response.data);\n      })\n      .catch((error) => {});\n  };\n  //SYPHILIS_RESULT\n  const SYPHILIS_RESULT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setSphylisTestResult(response.data);\n      })\n      .catch((error) => {});\n  };\n  //HEPATITIS_SCREENING_RESULT\n  const HEPATITIS_SCREENING_RESULT = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setHepaTestResult(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  // FAMILY_PLANNING_METHOD\n  const FAMILY_PLANNING_METHOD = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setFamilyPlanningMethod(response.data);\n      })\n      .catch((error) => {});\n  };\n\n  ///Level of Adherence\n  async function AdherenceLevel() {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setAdherenceLevel(response.data);\n      })\n      .catch((error) => {});\n  }\n\n  const handleInputChange = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    if (e.target.name === \"monthsOfRefill\") {\n      const asNumber = Number(e.target.value);\n      const durationInDays = asNumber * 30;\n      setObjValues({\n        ...objValues,\n        monthsOfRefill: e.target.value,\n        duration: `${durationInDays}`,\n      });\n    } else {\n      // if the encounterDate is the same as the commencement date, the prep regimen id should be automatically populated from the commencement\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\n    }\n  };\n  const handleInputChangeUrinalysisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\n  };\n  const handleInputChangeOtherTest = (e, localId) => {\n    //find the test with the localId\n    let temp = [...otherTest];\n    let index = temp.findIndex((x) => Number(x.localId) === Number(localId));\n\n    if (\n      e.target.name === \"name\" &&\n      e.target.value !== \"PREP_OTHER_TEST_OTHER_(SPECIFY)\"\n    ) {\n      temp[index].otherTestName = \"\";\n      temp[index][e.target.name] = e.target.value;\n      setOtherTest(temp);\n    } else {\n      temp[index][e.target.name] = e.target.value;\n      setOtherTest(temp);\n    }\n  };\n  const handleInputChangeHepatitisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\n  };\n  const handleInputChangeSyphilisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\n    //Others\n    if (e.target.name === \"result\" && e.target.value !== \"Others\") {\n      syphilisTest.others = \"\";\n      setSyphilisTest({ ...syphilisTest, [\"others\"]: \"\" });\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\n    }\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\n  };\n  //Handle CheckBox\n  const handleCheckBoxSyphilisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    if (e.target.checked) {\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" });\n    } else {\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" });\n    }\n  };\n  const handleCheckBoxHepatitisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    if (e.target.checked) {\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" });\n    } else {\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" });\n    }\n  };\n  const handleCheckBoxOtherTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    if (e.target.checked) {\n      setOtherTest([\n        ...otherTest,\n        ...objValues.otherTestsDone,\n        {\n          localId: objValues.otherTestsDone?.length || 0,\n          otherTest: \"Yes\",\n          testDate: \"\",\n          result: \"\",\n          name: \"\",\n          otherTestName: \"\",\n        },\n      ]);\n    } else {\n      // setOtherTest({...otherTest, [\"otherTest\"]: \"No\"})\n      setOtherTest([]);\n    }\n  };\n\n  const handleCheckBoxUrinalysisTest = (e) => {\n    setErrors({ ...errors, [e.target.name]: \"\" });\n    if (e.target.checked) {\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" });\n    } else {\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" });\n    }\n  };\n  //to check the input value for clinical decision\n  const handleInputValueCheckHeight = (e) => {\n    if (\n      e.target.name === \"height\" &&\n      (e.target.value < 48.26 || e.target.value > 216.408)\n    ) {\n      const message =\n        \"Height cannot be greater than 216.408 and less than 48.26\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: \"\" });\n    }\n  };\n  const handleInputValueCheckweight = (e) => {\n    if (\n      e.target.name === \"weight\" &&\n      (e.target.value < 3 || e.target.value > 150)\n    ) {\n      const message =\n        \"Body weight must not be greater than 150 and less than 3\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: \"\" });\n    }\n  };\n  const handleInputValueCheckSystolic = (e) => {\n    if (\n      e.target.name === \"systolic\" &&\n      (e.target.value < 90 || e.target.value > 240)\n    ) {\n      const message =\n        \"Blood Pressure systolic must not be greater than 240 and less than 90\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: \"\" });\n    }\n  };\n  const handleInputValueCheckDiastolic = (e) => {\n    if (\n      e.target.name === \"diastolic\" &&\n      (e.target.value < 60 || e.target.value > 140)\n    ) {\n      const message =\n        \"Blood Pressure diastolic must not be greater than 140 and less than 60\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: \"\" });\n    }\n  };\n  const handleInputValueCheckPulse = (e) => {\n    if (\n      e.target.name === \"pulse\" &&\n      (e.target.value < 40 || e.target.value > 120)\n    ) {\n      const message = \"Pulse must not be greater than 120 and less than 40\";\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: \"\" });\n    }\n  };\n  const handleInputValueCheckRespiratoryRate = (e) => {\n    if (\n      e.target.name === \"respiratoryRate\" &&\n      (e.target.value < 10 || e.target.value > 70)\n    ) {\n      const message =\n        \"Respiratory Rate must not be greater than 70 and less than 10\";\n      setVitalClinicalSupport({\n        ...vitalClinicalSupport,\n        respiratoryRate: message,\n      });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: \"\" });\n    }\n  };\n  const handleInputValueCheckTemperature = (e) => {\n    if (\n      e.target.name === \"temperature\" &&\n      (e.target.value < 35 || e.target.value > 47)\n    ) {\n      const message =\n        \"Temperature must not be greater than 47 and less than 35\";\n      setVitalClinicalSupport({\n        ...vitalClinicalSupport,\n        temperature: message,\n      });\n    } else {\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: \"\" });\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.activeContent.actionType === \"\" ||\n      props.activeContent.actionType === null\n    ) {\n      emptyObjValues();\n    }\n  }, [props.activeContent.actionType]);\n\n  const emptyObjValues = () => {\n    setObjValues({\n      adherenceLevel: \"\",\n      dateInitialAdherenceCounseling: \"\",\n      datePrepGiven: \"\",\n      datePrepStart: \"\",\n      dateReferre: \"\",\n      diastolic: \"\",\n      encounterDate: \"\",\n      extra: {},\n      height: \"\",\n      hepatitis: {},\n      nextAppointment: \"\",\n      notedSideEffects: \"\",\n      otherTestsDone: [],\n      personId: props.patientObj.personId,\n      pregnant: \"\",\n      prepEnrollmentUuid: \"\",\n      pulse: \"\",\n      referred: \"\",\n      regimenId: \"\",\n      respiratoryRate: \"\",\n      riskReductionServices: \"\",\n      stiScreening: \"\",\n      syndromicStiScreening: null,\n      syphilis: {},\n      systolic: \"\",\n      temperature: \"\",\n      urinalysis: {},\n      urinalysisResult: \"\",\n      weight: \"\",\n      why: \"\",\n      otherDrugs: \"\",\n      hivTestResult: \"\",\n      duration: \"\",\n      prepGiven: \"\",\n      prepDistributionSetting: \"\",\n      visitType: \"\",\n    });\n    setUrinalysisTest({});\n    setSyphilisTest({});\n    setHepatitisTest({});\n    setOtherTest([]);\n  };\n\n  //Validations of the forms\n  const validate = () => {\n    temp.encounterDate = objValues.encounterDate\n      ? \"\"\n      : \"This field is required\";\n    // temp.pregnant = (isFemale() && objValues.pregnant === null) ? \"\" : \"This field is required\"\n    if (isFemale()) {\n      temp.pregnant = objValues.pregnant ? \"\" : \"This field is required\";\n    }\n    temp.nextAppointment = objValues.nextAppointment\n      ? \"\"\n      : \"This field is required\";\n    temp.adherenceLevel = objValues.adherenceLevel\n      ? \"\"\n      : \"This field is required\";\n\n    //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\n    temp.height = objValues.height ? \"\" : \"This field is required\";\n    temp.weight = objValues.weight ? \"\" : \"This field is required\";\n    temp.urinalysisTest = urinalysisTest.urinalysisTest\n      ? \"\"\n      : \"This field is required\";\n    temp.testDate = urinalysisTest.testDate ? \"\" : \"This field is required\";\n    temp.result = urinalysisTest.result ? \"\" : \"This field is required\";\n    temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\";\n    temp.duration = objValues.duration ? \"\" : \"This field is required\";\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\n      ? \"\"\n      : \"This field is required\";\n    temp.populationType = objValues.populationType\n      ? \"\"\n      : \"This field is required\";\n    temp.visitType = objValues.visitType ? \"\" : \"This field is required\";\n    // temp.hivTestResult = objValues.hivTestResult ? \"\" : \"This field is required\"\n    // temp.hivTestResultDate = objValues.hivTestResultDate ? \"\" : \"This field is required\"\n    //temp.datePrepGiven = objValues.datePrepGiven ? \"\" : \"This field is required\"\n\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x === \"\");\n  };\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      setSaving(true);\n      //objValues.visitDate = vital.encounterDate\n      objValues.hivTestResultDate = hivTestResultDate;\n      objValues.hivTestResult = hivTestValue;\n      objValues.syphilis = syphilisTest;\n      objValues.hepatitis = hepatitisTest;\n      objValues.urinalysis = urinalysisTest;\n      objValues.otherTestsDone = otherTest.map((x) => {\n        return {\n          testDate: x.testDate,\n          result: x.result,\n          name: x.name,\n          otherTestName: x.otherTestName,\n        };\n      });\n      objValues.prepEnrollmentUuid = patientDto.uuid;\n\n      if (props.activeContent && props.activeContent.actionType === \"update\") {\n        //Perform operation for updation action\n        axios\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            //PatientDetaild();\n            setSaving(false);\n            toast.success(\"Clinic Visit save successful\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"consultation\",\n              activeTab: \"history\",\n              actionType: \"view\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              if (error.response.data.apierror) {\n                toast.error(error.response.data.apierror.message, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              } else {\n                toast.error(errorMessage, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              }\n            } else {\n              toast.error(\"Something went wrong, please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      } else {\n        axios\n          .post(`${baseUrl}prep/clinic-visit`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            //PatientDetaild();\n            setSaving(false);\n            emptyObjValues();\n            toast.success(\"Clinic Visit save successful\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"consultation\",\n              activeTab: \"history\",\n              actionType: \"view\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n\n            if (error.response && error.response.data) {\n              let errorMessage =\n                error.response.data.apierror &&\n                error.response.data.apierror.message !== \"\"\n                  ? error.response.data.apierror.message\n                  : \"Something went wrong, please try again\";\n              if (error.response.data.apierror) {\n                toast.error(error.response.data.apierror.message, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              } else {\n                toast.error(errorMessage, {\n                  position: toast.POSITION.BOTTOM_CENTER,\n                });\n              }\n            } else {\n              toast.error(\"Something went wrong, please try again...\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n              });\n            }\n          });\n      }\n    }\n  };\n  // const handleSubmit = ()=>{\n  //     if (validate()) {objValues.syphilis = syphilisTest\n  //     objValues.hepatitis = hepatitisTest\n  //     objValues.urinalysis = urinalysisTest\n  //     objValues.otherTestsDone = otherTest\n  //     objValues.prepEnrollmentUuid = patientDto.uuid\n  //     emptyObjValues();\n  //     props.setActiveContent({\n  //         ...props.activeContent,\n  //         id: \"\",\n  //         route: 'consultation',\n  //         activeTab: \"history\",\n  //         actionType: \"view\"\n  //     })}\n  // }\n\n  const handleCreateNewTest = () => {\n    setOtherTest([\n      ...otherTest,\n      {\n        localId: otherTest.length + 1,\n        otherTest: \"Yes\",\n        testDate: \"\",\n        result: \"\",\n        name: \"\",\n        otherTestName: \"\",\n      },\n    ]);\n  };\n\n  const isFemale = () => {\n    return props.patientObj.gender.toLowerCase() === \"female\";\n  };\n\n  const handlePrepTypeChange = (e) => {\n    setObjValues({ ...objValues, regimenId: \"\", prepType: e.target.value });\n    if (\n      e.target.value === \"PREP_TYPE_OTHERS\" ||\n      e.target.value === \"PREP_TYPE_ED_PREP\"\n    ) {\n      PrepRegimen();\n    } else {\n      axios\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((response) => {\n          setprepRegimen(response.data);\n        })\n        .catch((error) => {\n          //console.log(error);\n        });\n    }\n\n    setErrors({ ...errors, [e.target.name]: \"\" });\n  };\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h2>Clinic Follow-up Visit</h2>\n        </div>\n      </div>\n      <Grid>\n        <Grid.Column>\n          <Segment>\n            <Label\n              as=\"a\"\n              color=\"blue\"\n              style={{ width: \"106%\", height: \"35px\" }}\n              ribbon\n            >\n              <h4 style={{ color: \"#fff\" }}>VITAL SIGNS</h4>\n            </Label>\n            <br />\n            <br />\n            <div className=\"row\">\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Date of Visit <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"encounterDate\"\n                    id=\"encounterDate\"\n                    value={objValues.encounterDate}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChange}\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\n                    min={\n                      patientDto && patientDto.dateEnrolled\n                        ? patientDto.dateEnrolled\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.encounterDate !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.encounterDate}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"row\">\n                <div className=\" mb-3 col-md-4\">\n                  <FormGroup>\n                    <FormLabelName>Pulse</FormLabelName>\n                    <InputGroup>\n                      <Input\n                        type=\"number\"\n                        name=\"pulse\"\n                        id=\"pulse\"\n                        onChange={handleInputChange}\n                        min=\"40\"\n                        max=\"120\"\n                        value={objValues.pulse}\n                        onKeyUp={handleInputValueCheckPulse}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        bmp\n                      </InputGroupText>\n                    </InputGroup>\n                    {vitalClinicalSupport.pulse !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.pulse}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.pulse !== \"\" ? (\n                      <span className={classes.error}>{errors.pulse}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\" mb-3 col-md-4\">\n                  <FormGroup>\n                    <FormLabelName>Respiratory Rate </FormLabelName>\n                    <InputGroup>\n                      <Input\n                        type=\"number\"\n                        name=\"respiratoryRate\"\n                        id=\"respiratoryRate\"\n                        onChange={handleInputChange}\n                        min=\"10\"\n                        max=\"70\"\n                        value={objValues.respiratoryRate}\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        bmp\n                      </InputGroupText>\n                    </InputGroup>\n                    {vitalClinicalSupport.respiratoryRate !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.respiratoryRate}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.respiratoryRate !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.respiratoryRate}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\" mb-3 col-md-4\">\n                  <FormGroup>\n                    <FormLabelName>Temperature </FormLabelName>\n                    <InputGroup>\n                      <Input\n                        type=\"number\"\n                        name=\"temperature\"\n                        id=\"temperature\"\n                        onChange={handleInputChange}\n                        min=\"35\"\n                        max=\"47\"\n                        value={objValues.temperature}\n                        onKeyUp={handleInputValueCheckTemperature}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        <sup>o</sup>c\n                      </InputGroupText>\n                    </InputGroup>\n                    {vitalClinicalSupport.temperature !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.temperature}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.temperature !== \"\" ? (\n                      <span className={classes.error}>\n                        {errors.temperature}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n\n                <div className=\" mb-3 col-md-5\">\n                  <FormGroup>\n                    <FormLabelName>\n                      Body Weight <span style={{ color: \"red\" }}> *</span>\n                    </FormLabelName>\n                    <InputGroup>\n                      <Input\n                        type=\"number\"\n                        name=\"weight\"\n                        id=\"weight\"\n                        onChange={handleInputChange}\n                        min=\"3\"\n                        max=\"150\"\n                        value={objValues.weight}\n                        onKeyUp={handleInputValueCheckweight}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        kg\n                      </InputGroupText>\n                    </InputGroup>\n                    {vitalClinicalSupport.weight !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.weight}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.weight !== \"\" ? (\n                      <span className={classes.error}>{errors.weight}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group mb-3 col-md-5\">\n                  <FormGroup>\n                    <FormLabelName>\n                      Height <span style={{ color: \"red\" }}> *</span>\n                    </FormLabelName>\n                    <InputGroup>\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        cm\n                      </InputGroupText>\n                      <Input\n                        type=\"number\"\n                        name=\"height\"\n                        id=\"height\"\n                        onChange={handleInputChange}\n                        value={objValues.height}\n                        min=\"48.26\"\n                        max=\"216.408\"\n                        onKeyUp={handleInputValueCheckHeight}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#992E62\",\n                          color: \"#fff\",\n                          border: \"1px solid #992E62\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        {objValues.height !== \"\"\n                          ? (objValues.height / 100).toFixed(2) + \"m\"\n                          : \"m\"}\n                      </InputGroupText>\n                    </InputGroup>\n                    {vitalClinicalSupport.height !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.height}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.height !== \"\" ? (\n                      <span className={classes.error}>{errors.height}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\n                  {objValues.weight !== \"\" && objValues.height !== \"\" && (\n                    <FormGroup>\n                      <Label> </Label>\n                      <InputGroup>\n                        <InputGroupText\n                          addonType=\"append\"\n                          style={{\n                            backgroundColor: \"#014D88\",\n                            color: \"#fff\",\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0rem\",\n                          }}\n                        >\n                          BMI :{\" \"}\n                          {(\n                            objValues.weight /\n                            ((objValues.height / 100) *\n                              (objValues.height / 100))\n                          ).toFixed(2)}\n                        </InputGroupText>\n                      </InputGroup>\n                    </FormGroup>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group mb-3 col-md-8\">\n                  <FormGroup>\n                    <FormLabelName>Blood Pressure</FormLabelName>\n                    <InputGroup>\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        systolic(mmHg)\n                      </InputGroupText>\n                      <Input\n                        type=\"number\"\n                        name=\"systolic\"\n                        id=\"systolic\"\n                        min=\"90\"\n                        max=\"240\"\n                        onChange={handleInputChange}\n                        value={objValues.systolic}\n                        onKeyUp={handleInputValueCheckSystolic}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n\n                      <InputGroupText\n                        addonType=\"append\"\n                        style={{\n                          backgroundColor: \"#014D88\",\n                          color: \"#fff\",\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                      >\n                        diastolic(mmHg)\n                      </InputGroupText>\n                      <Input\n                        type=\"number\"\n                        name=\"diastolic\"\n                        id=\"diastolic\"\n                        min={0}\n                        max={140}\n                        onChange={handleInputChange}\n                        value={objValues.diastolic}\n                        onKeyUp={handleInputValueCheckDiastolic}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0rem\",\n                        }}\n                        disabled={disabledField}\n                      />\n                    </InputGroup>\n                    {vitalClinicalSupport.systolic !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.systolic}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.systolic !== \"\" ? (\n                      <span className={classes.error}>{errors.systolic}</span>\n                    ) : (\n                      \"\"\n                    )}\n\n                    {vitalClinicalSupport.diastolic !== \"\" ? (\n                      <span className={classes.error}>\n                        {vitalClinicalSupport.diastolic}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                    {errors.diastolic !== \"\" ? (\n                      <span className={classes.error}>{errors.diastolic}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </FormGroup>\n                </div>\n                {isFemale() && (\n                  <div className=\"form-group mb-3 col-md-4\">\n                    <FormGroup>\n                      <FormLabelName>\n                        Pregnancy Status{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"pregnant\"\n                        id=\"pregnant\"\n                        onChange={handleInputChange}\n                        value={objValues.pregnant}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\">Select Pregnancy Status</option>\n                        {pregnant.map((value) => (\n                          <option key={value.id} value={value.code}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.pregnant !== \"\" ? (\n                        <span className={classes.error}>{errors.pregnant}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                )}\n              </div>\n            </div>\n            <Label\n              as=\"a\"\n              color=\"black\"\n              style={{ width: \"106%\", height: \"35px\" }}\n              ribbon\n            >\n              <h4 style={{ color: \"#fff\" }}></h4>\n            </Label>\n            <br />\n            <br />\n\n            <div className=\"row\">\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Result of Last HIV Test </FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"hivTestResult\"\n                    id=\"hivTestResult\"\n                    value={hivTestValue}\n                    onChange={(e) => {\n                      setHivTestValue(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled\n                  />\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Date of Last HIV Test </FormLabelName>\n                  <Input\n                    type={hivTestValue == \"NOT DONE\" ? \"text\" : \"date\"}\n                    name=\"hivTestResultDate\"\n                    id=\"hivTestResultDate\"\n                    value={\n                      hivTestValue == \"NOT DONE\"\n                        ? \"NOT APPLICABLE\"\n                        : hivTestResultDate\n                    }\n                    onChange={(e) => {\n                      setHivTestValue(e.target.value);\n                      handleInputChange(e);\n                    }}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled\n                  />\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Noted Side Effects </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"notedSideEffects\"\n                    id=\"notedSideEffects\"\n                    value={objValues.notedSideEffects}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select</option>\n                    {prepSideEffect.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n              {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"regimenStartPrep\"\n                    id=\"regimenStartPrep\"\n                    value={objValues.regimenStartPrep}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\n                  </Input>\n                 \n                </FormGroup>\n              </div>\n               */}\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>STI Screening</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"stiScreening\"\n                    id=\"stiScreening\"\n                    value={objValues.stiScreening}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select</option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </Input>\n                </FormGroup>\n              </div>\n              {objValues.stiScreening === \"true\" && (\n                <div className=\" mb-3 col-md-6\">\n                  <FormGroup>\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\n                    <Input\n                      type=\"select\"\n                      name=\"syndromicStiScreening\"\n                      id=\"syndromicStiScreening\"\n                      value={objValues.syndromicStiScreening}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                      disabled={disabledField}\n                    >\n                      <option value=\"\">Select</option>\n                      {sti.map((value) => (\n                        <option key={value.id} value={value.id}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </Input>\n                  </FormGroup>\n                </div>\n              )}\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"riskReductionServices\"\n                    id=\"riskReductionServices\"\n                    value={objValues.riskReductionServices}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option key={100} value=\"\">\n                      Select\n                    </option>\n                    {prepRiskReductionPlan.map((plan) => (\n                      <option key={plan.id} value={plan.id}>\n                        {plan.display}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Level of Adherence <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"adherenceLevel\"\n                    id=\"adherenceLevel\"\n                    value={objValues.adherenceLevel}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\">Select</option>\n\n                    {adherenceLevel.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.adherenceLevel !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.adherenceLevel}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {objValues.adherenceLevel ===\n                \"PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES\" && (\n                <div className=\" mb-3 col-md-6\">\n                  <FormGroup>\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\n                    <Input\n                      type=\"select\"\n                      name=\"whyAdherenceLevelPoor\"\n                      id=\"whyAdherenceLevelPoor\"\n                      value={objValues.whyAdherenceLevelPoor}\n                      onChange={handleInputChange}\n                      style={{\n                        border: \"1px solid #014D88\",\n                        borderRadius: \"0.25rem\",\n                      }}\n                      disabled={disabledField}\n                    >\n                      <option value=\"\">Select</option>\n\n                      {whyAdherenceLevelPoor.map((value) => (\n                        <option key={value.id} value={value.code}>\n                          {value.display}\n                        </option>\n                      ))}\n                    </Input>\n                  </FormGroup>\n                </div>\n              )}\n              {/* <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >PrEP Given</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepGiven\"\n                    id=\"prepGiven\"\n                    value={objValues.prepGiven}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"Yes\">Yes </option>\n                    <option value=\"No\">No </option>\n                  </Input>\n                 \n                </FormGroup>\n              </div> */}\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">\n                    Population Type <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"populationType\"\n                    id=\"populationType\"\n                    onChange={handleInputChange}\n                    value={objValues.populationType}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select Population Type</option>\n                    {populationType?.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.populationType !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.populationType}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">\n                    Visit Type <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"visitType\"\n                    id=\"visitType\"\n                    onChange={handleInputChange}\n                    value={objValues.visitType}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select Visit Type</option>\n                    {visitType.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.visitType !== \"\" ? (\n                    <span className={classes.error}>{errors.visitType}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">\n                    Prep Type<span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepType\"\n                    id=\"prepType\"\n                    // disabled\n                    onChange={handlePrepTypeChange}\n                    value={objValues.prepType}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select Prep Type</option>\n                    {prepType.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.prepType !== \"\" ? (\n                    <span className={classes.error}>{errors.prepType}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">\n                    PrEP Regimen <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"regimenId\"\n                    id=\"regimenId\"\n                    onChange={handleInputChange}\n                    value={objValues.regimenId}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n                    {prepRegimen.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.regimen}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.regimenId !== \"\" ? (\n                    <span className={classes.error}>{errors.regimenId}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">\n                    Prep Distribution Setting{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepDistributionSetting\"\n                    id=\"prepDistributionSetting\"\n                    onChange={handleInputChange}\n                    value={objValues.prepDistributionSetting}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"></option>\n                    {prepEntryPoint.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.prepDistributionSetting !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.prepDistributionSetting}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              {/* <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Duration <span style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"duration\"\n                                        id=\"duration\"\n                                        value={objValues.duration}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n\n                                        disabled={disabledField}\n                                    />\n                                    {errors.duration !== \"\" ? (\n                                        <span className={classes.error}>{errors.duration}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div> */}\n\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>\n                    Months of Refill <span style={{ color: \"red\" }}> *</span>\n                  </FormLabelName>\n                  <Input\n                    type=\"number\"\n                    name=\"monthsOfRefill\"\n                    id=\"monthsOfRefill\"\n                    value={objValues.monthsOfRefill}\n                    min={0}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  />\n                  {errors.monthsOfRefill !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.monthsOfRefill}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"datePrepGiven\"\n                    id=\"datePrepGiven\"\n                    value={objValues.datePrepGiven}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.datePrepGiven !==\"\" ? (\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\n                  ) : \"\" }   \n                </FormGroup>\n              </div>  */}\n\n              <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Other Drugs</FormLabelName>\n                  <Input\n                    type=\"text\"\n                    name=\"otherDrugs\"\n                    id=\"otherDrugs\"\n                    value={objValues.otherDrugs}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    disabled={disabledField}\n                  />\n                </FormGroup>\n              </div>\n              {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >PrEP Status</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepStatus\"\n                    id=\"prepStatus\"\n                    value={objValues.prepStatus}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select</option>\n                    {prepStatus.map((value) => (\n                            <option key={value.id} value={value.code}>\n                                {value.display}\n                            </option>\n                        ))}\n                  </Input>\n                 \n                </FormGroup>\n              </div> */}\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"familyPlanning\"\n                    id=\"familyPlanning\"\n                    onChange={handleInputChange}\n                    value={objValues.familyPlanning}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"></option>\n                    {familyPlanningMethod.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName>Date of Family Planning </FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"dateOfFamilyPlanning\"\n                    id=\"dateOfFamilyPlanning\"\n                    value={objValues.dateOfFamilyPlanning}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.25rem\",\n                    }}\n                    onChange={handleInputChange}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateOfFamilyPlanning !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateOfFamilyPlanning}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <br />\n              <br />\n              <Label\n                as=\"a\"\n                color=\"teal\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"urinalysisTest\"\n                    value=\"Yes\"\n                    onChange={handleCheckBoxUrinalysisTest}\n                    checked={\n                      urinalysisTest.urinalysisTest == \"Yes\" ? true : false\n                    }\n                  />{\" \"}\n                  Urinalysis Test\n                </h4>\n              </Label>\n              <br />\n              <br />\n              {urinalysisTest.urinalysisTest === \"Yes\" && (\n                <>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>\n                        Urinalysis Test Date{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </FormLabelName>\n                      <Input\n                        type=\"date\"\n                        name=\"testDate\"\n                        id=\"testDate\"\n                        value={urinalysisTest.testDate}\n                        // defaultValue={objValues.urinalysis?.testDate}\n                        onChange={handleInputChangeUrinalysisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        min={objValues.encounterDate}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        disabled={disabledField}\n                      />\n                      {errors.testDate !== \"\" ? (\n                        <span className={classes.error}>{errors.testDate}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>\n                        Urinalysis Test Result{\" \"}\n                        <span style={{ color: \"red\" }}> *</span>\n                      </FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"result\"\n                        id=\"result\"\n                        value={urinalysisTest.result}\n                        onChange={handleInputChangeUrinalysisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\">Select</option>\n                        {urineTestResult.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                      {errors.result !== \"\" ? (\n                        <span className={classes.error}>{errors.result}</span>\n                      ) : (\n                        \"\"\n                      )}\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n              <br />\n              <br />\n              <Label\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"hepatitisTest\"\n                    value=\"Yes\"\n                    onChange={handleCheckBoxHepatitisTest}\n                    checked={\n                      hepatitisTest.hepatitisTest === \"Yes\" ? true : false\n                    }\n                  />{\" \"}\n                  Hepatitis Test{\" \"}\n                </h4>\n              </Label>\n              <br />\n              <br />\n              {hepatitisTest.hepatitisTest === \"Yes\" && (\n                <>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\n                      <Input\n                        type=\"date\"\n                        name=\"testDate\"\n                        id=\"testDate\"\n                        value={hepatitisTest.testDate}\n                        onChange={handleInputChangeHepatitisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        min={objValues.encounterDate}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        disabled={disabledField}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"result\"\n                        id=\"result\"\n                        value={hepatitisTest.result}\n                        onChange={handleInputChangeHepatitisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\">Select</option>\n                        {hepaTestResult.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                    </FormGroup>\n                  </div>\n                </>\n              )}\n              <br />\n              <br />\n              <Label\n                as=\"a\"\n                color=\"red\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"syphilisTest\"\n                    value=\"Yes\"\n                    onChange={handleCheckBoxSyphilisTest}\n                    checked={syphilisTest.syphilisTest === \"Yes\" ? true : false}\n                  />{\" \"}\n                  Syphilis Test{\" \"}\n                </h4>\n              </Label>\n              <br />\n              <br />\n              {syphilisTest.syphilisTest === \"Yes\" && (\n                <>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\n                      <Input\n                        type=\"date\"\n                        name=\"testDate\"\n                        id=\"testDate\"\n                        value={syphilisTest.testDate}\n                        onChange={handleInputChangeSyphilisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                        min={objValues.encounterDate}\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                      />\n                    </FormGroup>\n                  </div>\n                  <div className=\" mb-3 col-md-6\">\n                    <FormGroup>\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\n                      <Input\n                        type=\"select\"\n                        name=\"result\"\n                        id=\"result\"\n                        value={syphilisTest.result}\n                        onChange={handleInputChangeSyphilisTest}\n                        style={{\n                          border: \"1px solid #014D88\",\n                          borderRadius: \"0.25rem\",\n                        }}\n                        disabled={disabledField}\n                      >\n                        <option value=\"\">Select</option>\n                        {sphylisTestResult.map((value) => (\n                          <option key={value.id} value={value.display}>\n                            {value.display}\n                          </option>\n                        ))}\n                      </Input>\n                    </FormGroup>\n                  </div>\n                  {syphilisTest.result === \"Others\" && (\n                    <div className=\" mb-3 col-md-6\">\n                      <FormGroup>\n                        <FormLabelName>\n                          Syphilis Test Result (Others)\n                        </FormLabelName>\n                        <Input\n                          type=\"text\"\n                          name=\"others\"\n                          id=\"others\"\n                          value={syphilisTest.others}\n                          onChange={handleInputChangeSyphilisTest}\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          disabled={disabledField}\n                        />\n                      </FormGroup>\n                    </div>\n                  )}\n                </>\n              )}\n              <br />\n              <br />\n              <Label\n                as=\"a\"\n                color=\"black\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"otherTest\"\n                    value=\"Yes\"\n                    onChange={handleCheckBoxOtherTest}\n                    defaultChecked={true}\n                    checked={otherTest.length > 0}\n                  />\n                  Other Test\n                </h4>\n              </Label>\n              <br />\n              <br />\n              {/* {otherTest.otherTest === 'Yes' && (<> */}\n              {otherTest.length > 0 &&\n                otherTest.map((eachTest) => (\n                  <div className=\"row\" key={eachTest.localId}>\n                    <div className=\" mb-1 col-md-4\">\n                      <FormGroup>\n                        <FormLabelName> Test Name</FormLabelName>\n\n                        <Input\n                          type=\"select\"\n                          name=\"name\"\n                          id=\"name\"\n                          value={eachTest.name}\n                          onChange={(e) =>\n                            handleInputChangeOtherTest(e, eachTest.localId)\n                          }\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          disabled={disabledField}\n                        >\n                          <option value=\"\">Select</option>\n                          {otherTestResult.map((value) => (\n                            <option key={value.id} value={value.code}>\n                              {value.display}\n                            </option>\n                          ))}\n                        </Input>\n                      </FormGroup>\n                    </div>\n                    {eachTest.name === \"PREP_OTHER_TEST_OTHER_(SPECIFY)\" && (\n                      <div className=\" mb-1 col-md-4\">\n                        <FormGroup>\n                          <FormLabelName> Other Test Name</FormLabelName>\n                          <Input\n                            type=\"text\"\n                            name=\"otherTestName\"\n                            id=\"otherTestName\"\n                            value={eachTest.otherTestName}\n                            onChange={(e) =>\n                              handleInputChangeOtherTest(e, eachTest.localId)\n                            }\n                            style={{\n                              border: \"1px solid #014D88\",\n                              borderRadius: \"0.25rem\",\n                            }}\n                            disabled={disabledField}\n                          />\n                        </FormGroup>\n                      </div>\n                    )}\n                    <div className=\" mb-1 col-md-4\">\n                      <FormGroup>\n                        <FormLabelName> Test Date</FormLabelName>\n                        <Input\n                          type=\"date\"\n                          name=\"testDate\"\n                          id=\"testDate\"\n                          value={eachTest.testDate}\n                          onChange={(e) =>\n                            handleInputChangeOtherTest(e, eachTest.localId)\n                          }\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          disabled={disabledField}\n                          min={objValues.encounterDate}\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\" mb-1 col-md-4\">\n                      <FormGroup>\n                        <FormLabelName> Test Result</FormLabelName>\n                        <Input\n                          type=\"text\"\n                          name=\"result\"\n                          id=\"result\"\n                          value={eachTest.result}\n                          onChange={(e) =>\n                            handleInputChangeOtherTest(e, eachTest.localId)\n                          }\n                          style={{\n                            border: \"1px solid #014D88\",\n                            borderRadius: \"0.25rem\",\n                          }}\n                          disabled={disabledField}\n                        ></Input>\n                      </FormGroup>\n                    </div>\n                    {/* add material ui divider  */}\n                    {otherTest.length > 1 && (\n                      <Divider\n                        component=\"li\"\n                        style={{ marginBottom: \"10px\" }}\n                      />\n                    )}\n                  </div>\n                ))}\n              {otherTest.length > 0 && (\n                <div>\n                  <MatButton\n                    type=\"button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={`${classes.button} col-md-4`}\n                    startIcon={<AddIcon />}\n                    style={{ backgroundColor: \"#014d88\" }}\n                    onClick={handleCreateNewTest}\n                    disabled={saving}\n                  >\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Add Test\n                    </span>\n                  </MatButton>\n                </div>\n              )}\n\n              <br />\n              <Label\n                as=\"a\"\n                color=\"blue\"\n                style={{ width: \"106%\", height: \"35px\" }}\n                ribbon\n              >\n                <h4 style={{ color: \"#fff\" }}>NEXT APPOINTMENT DATE </h4>\n              </Label>\n              <br />\n              <br />\n              <br />\n              <div className=\"mb-3 col-md-6\">\n                <FormLabelName>Next Appointment Date</FormLabelName>\n                <Input\n                  type=\"date\"\n                  name=\"nextAppointment\"\n                  id=\"nextAppointment\"\n                  value={objValues.nextAppointment}\n                  onChange={handleInputChange}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                  min={objValues.encounterDate}\n                  disabled={disabledField}\n                />\n                {errors.nextAppointment !== \"\" ? (\n                  <span className={classes.error}>\n                    {errors.nextAppointment}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div className=\" mb-3 col-md-6\">\n                <FormLabelName>Healthcare Worker Signature</FormLabelName>\n                <Input\n                  name=\"healthCareWorkerSignature\"\n                  id=\"healthCareWorkerSignature\"\n                  placeholder=\"Enter signature...\"\n                  value={objValues.healthCareWorkerSignature}\n                  onChange={handleInputChange}\n                  style={{\n                    border: \"1px solid #014D88\",\n                    borderRadius: \"0.25rem\",\n                  }}\n                />\n                {errors.healthCareWorkerSignature !== \"\" ? (\n                  <span className={classes.error}>\n                    {errors.healthCareWorkerSignature}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n            <br />\n            {!disabledField && (\n              <>\n                {props.activeContent &&\n                props.activeContent.actionType === \"update\" ? (\n                  <>\n                    <MatButton\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      hidden={disabledField}\n                      className={classes.button}\n                      startIcon={<SaveIcon />}\n                      style={{ backgroundColor: \"#014d88\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    >\n                      {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Update\n                        </span>\n                      ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Updating...\n                        </span>\n                      )}\n                    </MatButton>\n                  </>\n                ) : (\n                  <>\n                    <MatButton\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      startIcon={<SaveIcon />}\n                      style={{ backgroundColor: \"#014d88\" }}\n                      onClick={handleSubmit}\n                      disabled={saving}\n                    >\n                      {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Save\n                        </span>\n                      ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>\n                          Saving...\n                        </span>\n                      )}\n                    </MatButton>\n                  </>\n                )}\n              </>\n            )}\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\n    </div>\n  );\n};\n\nexport default ClinicVisit;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst PatientnHistory = (props) => {\n    const [recentActivities, setRecentActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [open, setOpen] = React.useState(false)\n    const [record, setRecord] = useState(null)\n     const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n        if(props.activeContent.actionType===\"view\"){\n            PatientHistory()\n        }\n      }, [props.patientObj.id, props.activeContent.actionType]);\n\n        ///GET LIST OF Patients\n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)                       \n                    setRecentActivities(response.data)\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadViewPage =(row,action)=>{\n               \n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action, activeTab:'home'})     \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n    const LoadDeletePage =(row)=>{\n        \n        if(row.path==='prep-eligibility'){ \n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        }else if(row.path==='prep-clinic'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment2'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else{\n\n        }\n        \n    }\n\n\n  return (\n    <div>\n        \n    <br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Patient Clinic Visit History \"\n              columns={[\n                { title: \"Visit Date\", field: \"date\" },\n                {\n                  title: \"Regimen Given\",\n                  field: \"regimen\",\n                },               \n                { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={recentActivities && recentActivities.map((row) => ({\n                   date: row.encounterDate,\n                   regimen: row.regimen,\n                   nextAppointment: row.nextAppointment,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                               <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\n                               <Dropdown.Item  onClick={()=>LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>     \n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n","import React, {useState, Fragment, useEffect } from \"react\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport ConsultationPage from './Home';\nimport ClinicHistoryPage from \"./ClinicHistory\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst ClinicVisitPage = (props) => {\n    const [key, setKey] = useState('home');\n    const patientObj = props.patientObj\n    \n    useEffect ( () => {\n      setKey(props.activeContent.activeTab)\n    }, [props.activeContent]);\n\n\n  return (\n    <Fragment>  \n      <Row>       \n        <Col xl={12}>\n          <Card style={divStyle}>            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                >\n\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\n                  </Tab>  \n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\n                  </Tab>                   \n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default ClinicVisitPage;\n","import React, {useState, useEffect} from 'react';\nimport {\n    Card, CardBody, FormGroup, Label, Input, InputGroup,\n    InputGroupText, Label as FormLabelName,\n} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport {makeStyles} from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\nimport {url as baseUrl, token} from \"../../../api\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport {Spinner} from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    root: {\n        flexGrow: 1,\n        \"& .card-title\": {\n            color: '#fff',\n            fontWeight: 'bold'\n        },\n        \"& .form-control\": {\n            borderRadius: '0.25rem',\n            height: '41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\": {\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\": {\n            color: 'red'\n        },\n        \"& label\": {\n            fontSize: '14px',\n            color: '#014d88',\n            fontWeight: 'bold'\n        },\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst PrEPCommencementForm = (props) => {\n\n    const patientObj = props.patientObj;\n    const classes = useStyles()\n    const [disabledField, setSisabledField] = useState(false);\n    const [prepRegimen, setprepRegimen] = useState([]);\n    const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] = useState([])\n    const [objValues, setObjValues] = useState({\n        dateInitialAdherenceCounseling: \"\",\n        datePrepStart: \"\",\n        height: \"\",\n        personId: patientObj.personId,\n        prepClientId: props.prepId,\n        regimenId: null,\n        urinalysisResult: \"\",\n        prepEligibilityUuid: \"\",\n        weight: \"\",\n        drugAllergies: \"\",\n        referred: \"\",\n        datereferred: \"\",\n        extra: {},\n        nextAppointment: \"\",\n        pregnant: true,\n        prepEnrollmentUuid: \"\",\n        duration: \"\",\n        prepDistributionSetting: \"\",\n        prepType: \"\",\n        monthsOfRefill: \"\",\n        liverFunctionTestResults: \"\",\n        dateLiverFunctionTestResults: \"\",\n        historyOfDrugToDrugInteraction: \"\"\n    });\n\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [pregnant, setpregnant] = useState([]);\n    const [patientDto, setPatientDto] = useState();\n    const [prepEntryPoint, setPrepEntryPoints] = useState([]);\n    const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\n    const [prepType, setPrepType] = useState([]);\n    const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\n\n    useEffect(() => {\n        PREGANACY_STATUS();\n        GetPatientDTOObj();\n        PrepRegimen();\n        PREP_ENTRY_POINT();\n        PREP_TYPE();\n        LiverFunctionTestResult();\n        HistoryOfDrugToDrugInteraction();\n        PREP_URINALYSIS_RESULT();\n        if (props.activeContent.id && props.activeContent.id !== \"\" && props.activeContent.id !== null) {\n            GetPatientCommercement(props.activeContent.id)\n            setSisabledField(props.activeContent.actionType === 'view' ? true : false)\n        }\n    }, []);\n    const PrepRegimen = async() => {\n        axios\n            .get(`${baseUrl}prep-regimen`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setprepRegimen(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n    const PREP_ENTRY_POINT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepEntryPoints(response.data);\n                // console.log(\"prep\", prepEntryPoint)\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n    const PREP_URINALYSIS_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setUrinalysisTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n\n\n    const PREP_TYPE = async () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepType(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n\n    const LiverFunctionTestResult =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setLiverFunctionTestResult(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const HistoryOfDrugToDrugInteraction =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setHistoryOfDrugToDrugInteraction(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const GetPatientCommercement = (id) => {\n        axios\n            .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                //console.log(response.data.find((x)=> x.id===id));\n                setObjValues(response.data.find((x) => x.id === id));\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    const PREGANACY_STATUS = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setpregnant(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    const GetPatientDTOObj = () => {\n        axios\n            .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPatientDto(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    //Vital signs clinical decision support\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\n        weight: \"\",\n        height: \"\",\n    })\n\n\n\n    const handleInputChange = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n\n        if (e.target.name === 'referred' && e.target.value === 'false') {\n            objValues.datereferred = ''\n            setObjValues({...objValues, ['datereferred']: ''});\n        } else if (e.target.name === 'monthsOfRefill') {\n            const durationInDays = (Number(e.target.value) * 30)\n            setObjValues({...objValues, monthsOfRefill: e.target.value, duration: durationInDays})\n\n        } \n        setObjValues({...objValues, [e.target.name]: e.target.value});\n    }\n\n    const validate = () => {\n        let temp = {...errors}\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\n        temp.prepType = objValues.prepType ? \"\" : \"This field is required\"\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\n        temp.height = objValues.height ? \"\" : \"This field is required\"\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\n        temp.referred = objValues.referred ? \"\" : \"This field is required\"\n        temp.prepDistributionSetting = objValues.prepDistributionSetting ? \"\" : \"This field is required\"\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    //to check the input value for clinical decision \n    const handleInputValueCheckHeight = (e) => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.name === \"height\" && (e.target.value < 48.26 || e.target.value > 216.408)) {\n            const message = \"Height cannot be greater than 216.408 and less than 48.26\"\n            setVitalClinicalSupport({...vitalClinicalSupport, height: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, height: \"\"})\n        }\n    }\n    const handleInputValueCheckBodyWeight = (e) => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.name === \"weight\" && (e.target.value < 3 || e.target.value > 150)) {\n            const message = \"Body weight must not be greater than 150 and less than 3\"\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: \"\"})\n        }\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            setSaving(true);\n            objValues.prepEnrollmentUuid = patientDto.uuid\n            if (props.activeContent && props.activeContent.actionType === \"update\") {//Perform operation for updation action\n                axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                ).then(response => {\n                    setSaving(false);\n                    patientObj.commencementCount = 1\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\n\n                })\n                    .catch(error => {\n                        setSaving(false);\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n            } else {\n                axios.post(`${baseUrl}prep/commencement`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                ).then(response => {\n                    setSaving(false);\n                    patientObj.commencementCount = 1\n                    props.PatientObject();\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\n\n                })\n                    .catch(error => {\n                        setSaving(false);\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n            }\n\n        }\n    }\n\n    // console.log(props.patientObj.gender)\n\n    const handlePrepTypeChange = (e) => {\n        // check the prep type. if it is ed prep or others, fetch all prep types instead\n        \n        setObjValues({...objValues, regimenId: \"\", prepType: e.target.value})\n        if (e.target.value === 'PREP_TYPE_OTHERS' || e.target.value === 'PREP_TYPE_ED_PREP') {\n            PrepRegimen();\n        } else {\n            axios\n                .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`,\n                    {headers: {\"Authorization\": `Bearer ${token}`}}\n                )\n                .then((response) => {\n                    setprepRegimen(response.data);\n                })\n                .catch((error) => {\n                    //console.log(error);\n                });\n        }\n\n        setErrors({...errors, [e.target.name]: \"\"})\n\n    }\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardBody>\n                    <form>\n                        <div className=\"row\">\n                            <h2> PrEP Commencement </h2>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"uniqueId\">Date of Initial Adherence Counseling <span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dateInitialAdherenceCounseling\"\n                                        id=\"dateInitialAdherenceCounseling\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.dateInitialAdherenceCounseling}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.dateInitialAdherenceCounseling !== \"\" ? (\n                                        <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Date PrEP started <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"datePrepStart\"\n                                        id=\"datePrepStart\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.datePrepStart}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.datePrepStart !== \"\" ? (\n                                        <span className={classes.error}>{errors.datePrepStart}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\" mb-3 col-md-4\">\n                                <FormGroup>\n                                    <Label>Body Weight <span style={{color: \"red\"}}> *</span></Label>\n                                    <InputGroup>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"weight\"\n                                            id=\"weight\"\n                                            onChange={handleInputChange}\n                                            min=\"3\"\n                                            max=\"150\"\n                                            value={objValues.weight}\n                                            onKeyUp={handleInputValueCheckBodyWeight}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                            disabled={disabledField}\n                                        />\n                                        <InputGroupText addonType=\"append\" style={{\n                                            backgroundColor: \"#014D88\",\n                                            color: \"#fff\",\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0rem\"\n                                        }}>\n                                            kg\n                                        </InputGroupText>\n                                    </InputGroup>\n                                    {vitalClinicalSupport.bodyWeight !== \"\" ? (\n                                        <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\n                                    ) : \"\"}\n                                    {errors.weight !== \"\" ? (\n                                        <span className={classes.error}>{errors.weight}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                    <Label>Height <span style={{color: \"red\"}}> *</span></Label>\n                                    <InputGroup>\n                                        <InputGroupText\n                                            addonType=\"append\"\n                                            style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}\n                                        >\n                                            cm\n                                        </InputGroupText>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"height\"\n                                            id=\"height\"\n                                            onChange={handleInputChange}\n                                            value={objValues.height}\n                                            min=\"48.26\"\n                                            max=\"216.408\"\n                                            disabled={disabledField}\n                                            onKeyUp={handleInputValueCheckHeight}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                        />\n                                        <InputGroupText\n                                            addonType=\"append\"\n\n                                            style={{\n                                                backgroundColor: \"#992E62\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #992E62\",\n                                                borderRadius: \"0rem\"\n                                            }}\n                                        >\n                                            {objValues.height !== '' ? (objValues.height / 100).toFixed(2) + \"m\" : \"m\"}\n                                        </InputGroupText>\n                                    </InputGroup>\n                                    {vitalClinicalSupport.height !== \"\" ? (\n                                        <span className={classes.error}>{vitalClinicalSupport.height}</span>\n                                    ) : \"\"}\n                                    {errors.height !== \"\" ? (\n                                        <span className={classes.error}>{errors.height}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 mt-2 col-md-4\">\n                                {objValues.weight !== \"\" && objValues.height !== '' && (\n                                    <FormGroup>\n                                        <Label> {\" \"}</Label>\n                                        <InputGroup>\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                BMI\n                                                : {(objValues.weight / ((objValues.height / 100) * (objValues.height / 100))).toFixed(2)}\n                                            </InputGroupText>\n\n                                        </InputGroup>\n                                    </FormGroup>\n                                )}\n                            </div>\n                            {(props.patientObj.gender === 'Female' || props.patientObj.gender === 'female' || props.patientObj.gender === 'FEMALE') && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"\">Pregnancy Status</Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"pregnant\"\n                                            id=\"pregnant\"\n                                            onChange={handleInputChange}\n                                            value={objValues.pregnant}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\"></option>\n                                            {pregnant.map((value) => (\n                                                <option key={value.id} value={value.code}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n\n                                        </Input>\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"\">Breast Feeding</Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"breastFeeding\"\n                                            id=\"breastFeeding\"\n                                            onChange={handleInputChange}\n                                            value={objValues.breastFeeding}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"Yes\"> Yes</option>\n                                            <option value=\"No\"> No</option>\n                                        </Input>\n\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"\">History of drug Allergies</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"drugAllergies\"\n                                        id=\"drugAllergies\"\n                                        onChange={handleInputChange}\n                                        value={objValues.drugAllergies}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </Input>\n\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"urinalysisResult\">Urinalysis Result</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"urinalysisResult\"\n                                        id=\"urinalysisResult\"\n                                        onChange={handleInputChange}\n                                        value={objValues.urinalysisResult}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                            {urinalysisTestResult.map((value) => (\n                                                <option key={value.id} value={value.display}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"historyOfDrugToDrugInteraction\">History of Drug-Drug Interactions<span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"select\"\n                                        name=\"historyOfDrugToDrugInteraction\"\n                                        id=\"historyOfDrugToDrugInteraction\"\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.historyOfDrugToDrugInteraction}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select </option>\n                                        {historyOfDrugToDrugInteraction.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.historyOfDrugToDrugInteraction !== \"\" ? (\n                                        <span className={classes.error}>{errors.historyOfDrugToDrugInteraction}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"liverFunctionTestResults\">Liver Function Tests Result<span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"select\"\n                                        name=\"liverFunctionTestResults\"\n                                        id=\"liverFunctionTestResults\"\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.liverFunctionTestResults}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select Result</option>\n                                        {liverFunctionTestResult.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.liverFunctionTestResults !== \"\" ? (\n                                        <span className={classes.error}>{errors.liverFunctionTestResults}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"dateLiverFunctionTestResults\">Date of Liver Function Tests Result  <span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dateLiverFunctionTestResults\"\n                                        id=\"dateLiverFunctionTestResults\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.dateLiverFunctionTestResults}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.dateLiverFunctionTestResults !== \"\" ? (\n                                        <span className={classes.error}>{errors.dateLiverFunctionTestResults}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"\">Referred <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"referred\"\n                                        id=\"referred\"\n                                        onChange={handleInputChange}\n                                        value={objValues.referred}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\"> Yes</option>\n                                        <option value=\"false\"> No</option>\n                                    </Input>\n                                    {errors.referred !== \"\" ? (\n                                        <span className={classes.error}>{errors.referred}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            {objValues.referred === 'true' && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"datereferred\">Date referred</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"datereferred\"\n                                            id=\"datereferred\"\n                                            onChange={handleInputChange}\n                                            value={objValues.datereferred}\n                                            min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                            disabled={disabledField}\n                                        />\n                                        {errors.datereferred !== \"\" ? (\n                                            <span className={classes.error}>{errors.datereferred}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            \n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"prepType\">Prep Type At Start <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepType\"\n                                        id=\"prepType\"\n                                        // disabled\n                                        onChange={handlePrepTypeChange}\n                                        value={objValues.prepType}\n                                        // disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select Prep Type</option>\n                                        {prepType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepType !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepType}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"regimenId\">PrEP Regimen <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"regimenId\"\n                                        id=\"regimenId\"\n                                        onChange={handleInputChange}\n                                        value={objValues.regimenId}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select</option>\n                                        {prepRegimen.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.regimen}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.regimenId !== \"\" ? (\n                                        <span className={classes.error}>{errors.regimenId}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Prep Distribution Setting <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepDistributionSetting\"\n                                        id=\"prepDistributionSetting\"\n                                        onChange={handleInputChange}\n                                        value={objValues.prepDistributionSetting}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"></option>\n                                        {prepEntryPoint.map((value) => (\n                                            <option key={value.code} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepDistributionSetting !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepDistributionSetting}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n\n                            {/* <div className=\" mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Date PrEP Given</Label>\n                            <Input\n                                type=\"date\"\n                                name=\"datePrepGiven\"\n                                id=\"datePrepGiven\"\n                                value={objValues.datePrepGiven}\n                                onChange={handleInputChange}\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                disabled={disabledField}\n                            />\n                                \n                            </FormGroup>\n                        </div>  */}\n                            {/* <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Duration</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"duration\"\n                                        id=\"duration\"\n                                        value={objValues.duration}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                </FormGroup>\n                            </div> */}\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Months Of Refill</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"monthsOfRefill\"\n                                        id=\"monthsOfRefill\"\n                                        value={objValues.monthsOfRefill}\n                                        min={0}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                        </div>\n\n                        {saving ? <Spinner/> : \"\"}\n                        <br/>\n\n                        {props.activeContent && props.activeContent.actionType ? (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                hidden={disabledField}\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Update</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Updating...</span>\n                                )}\n                            </MatButton>\n                        </>) : (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Save</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Saving...</span>\n                                )}\n                            </MatButton>\n                        </>)}\n                    </form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default PrEPCommencementForm;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\n// import { useHistory } from \"react-router-dom\";\n// import {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import { DateTimePicker } from \"react-widgets\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        //maxWidth: 752,\n        //flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },  \n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    \n}));\n\nconst PrEPEligibiltyScreeningForm = (props) => {\n\n    const patientObj = props.patientObj;\n    //let history = useHistory();\n    const classes = useStyles()\n    const [disabledField, setDisabledField] = useState(false);\n    const [objValues, setObjValues] = useState({\n        dateInterruption: \"\",\n        why: \"\",\n        interruptionType: \"\",\n        dateRestartPlacedBackMedication: \"\",\n        personId: patientObj.personId,\n        causeOfDeath: \"\",\n        dateClientDied: \"\",\n        dateClientReferredOut: \"\",\n        facilityReferredTo: \"\",\n        interruptionDate: \"\",\n        interruptionReason: \"\",\n        sourceOfDeathInfo: \"\",\n        dateSeroconverted:\"\",\n        reasonStopped:\"\",\n        reasonStoppedOthers:\"\"\n      });\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [prepStatus, setPrepStatus] = useState([]);\n    const [reasonStooped, setReasonStooped] = useState([]);\n    const [causeOfDeath, setCauseOfDeath] = useState([]);\n    const [patientDto, setPatientDto] = useState();\n    useEffect(() => {         \n        PREP_STATUS();\n        PREP_STATUS_STOPPED_REASON();\n        GetPatientDTOObj();\n        CAUSE_DEATH();\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\n            GetPatientInterruption(props.activeContent.id)\n            setDisabledField(props.activeContent.actionType==='view'? true : false)\n        }\n    }, []);\n    const GetPatientDTOObj =()=>{\n        axios\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n               setPatientDto(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    }\n    const GetPatientInterruption =(id)=>{\n        axios\n           .get(`${baseUrl}prep-interruption/${props.activeContent.id}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n            //    setObjValues(response.data.find((x)=> x.id===id));\n               setObjValues(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    }\n    const PREP_STATUS =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPrepStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const CAUSE_DEATH =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCauseOfDeath(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //\n    const PREP_STATUS_STOPPED_REASON =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setReasonStooped(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => { \n        setErrors({...errors, [e.target.name]: \"\"}) \n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_STOPPED'){\n            objValues.reasonStopped=\"\"\n            objValues.reasonStoppedOthers=\"\"\n            setObjValues ({...objValues,  ['reasonStopped']: \"\"});\n            setObjValues ({...objValues,  ['reasonStoppedOthers']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        } \n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_DEAD'){\n            objValues.causeOfDeath=\"\"\n            objValues.sourceOfDeathInfo=\"\"\n            objValues.dateClientDied=\"\"\n            //objValues.dateClientDied\n            setObjValues ({...objValues,  ['causeOfDeath']: \"\"});\n            setObjValues ({...objValues,  ['sourceOfDeathInfo']: \"\"});\n            setObjValues ({...objValues,  ['dateClientDied']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_RESTART'){\n            objValues.dateRestartPlacedBackMedication=\"\"\n            setObjValues ({...objValues,  ['dateRestartPlacedBackMedication']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_TRANSFER_OUT'){\n            objValues.dateClientReferredOut=\"\"\n            objValues.facilityReferredTo=\"\"\n            setObjValues ({...objValues,  ['facilityReferredTo']: \"\"});\n            setObjValues ({...objValues,  ['dateClientReferredOut']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_SEROCONVERTED'){\n            objValues.linkToArt=\"\"\n            objValues.dateSeroconverted=\"\"\n            setObjValues ({...objValues,  ['dateSeroconverted']: \"\"});\n            setObjValues ({...objValues,  ['linkToArt']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }     \n        //     \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n\n    }\n    const validate = () => {\n        let temp = { ...errors }\n        //temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n         //console.log(objValues.interruptionDate)\n         //objValues.interruptionDate =  objValues.interruptionDate!==\"\" ? objValues.interruptionDate : objValues.dateSeroconverted\n         if(objValues.interruptionDate===\"\" && objValues.dateSeroconverted!==\"\"){\n            objValues.interruptionDate =  objValues.dateSeroconverted\n         }else if(objValues.interruptionDate===\"\" && objValues.dateRestartPlacedBackMedication!==\"\"){\n            objValues.interruptionDate =  objValues.dateRestartPlacedBackMedication\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientReferredOut!==\"\"){\n            objValues.interruptionDate =  objValues.dateClientReferredOut\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientDied!==\"\"){\n            objValues.interruptionDate =  objValues.dateClientDied\n         }else{\n            //objValues.interruptionDate = objValues.interruptionDate\n         }\n         if(validate()){\n          setSaving(true);\n          if(props.activeContent && props.activeContent.actionType===\"update\"){\n          axios.put(`${baseUrl}prep-interruption/${props.activeContent.id}`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          ).then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.PatientObject();\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    if(error.response.data.apierror){\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                    }else{\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                    }\n                }else{\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                }\n              });\n            }else{\n                axios.post(`${baseUrl}prep/interruption`,objValues,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n                \n                ).then(response => {\n                        setSaving(false);\n                        toast.success(\"Record save successful\");\n                        props.PatientObject();\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                            toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            }else{\n                            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        }else{\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n\n            }\n        }\n          \n    }\n\n\n  return (      \n      <div>                   \n        <Card className={classes.root}>\n            <CardBody>\n            <form >\n                <div className=\"row\">\n                    <h2> PrEP Discontinuations & Interruptions</h2>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">PrEP Interruptions <span style={{ color:\"red\"}}> *</span></Label>\n                        <Input\n                            type=\"select\"\n                            name=\"interruptionType\"\n                            id=\"interruptionType\"\n                            onChange={handleInputChange}\n                            value={objValues.interruptionType}\n                            required\n                        >\n                        <option value=\"\">Select</option>\n                        {prepStatus.map((value) => (\n                            <option key={value.id} value={value.code}>\n                                {value.display}\n                            </option>\n                        ))}\n                        </Input>\n                        {errors.interruptionType !==\"\" ? (\n                                <span className={classes.error}>{errors.interruptionType}</span>\n                            ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Date of Interruption <span style={{ color:\"red\"}}> *</span></Label>\n                            <Input\n                                type=\"date\"\n                                name=\"interruptionDate\"\n                                id=\"interruptionDate\"\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.interruptionDate}\n                                required\n                            />\n                            {errors.interruptionDate !==\"\" ? (\n                                <span className={classes.error}>{errors.interruptionDate}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                    )}\n                     {objValues.interruptionType==='PREP_STATUS_STOPPED' && (\n                        <>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Reason Stopped </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"reasonStopped\"\n                                id=\"reasonStopped\"\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.reasonStopped}\n                                \n                            >\n                                <option value=\"\">Select</option>\n                                {reasonStooped.map((value) => (\n                                    <option key={value.id} value={value.display}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                            </Input>\n                            {errors.reasonStopped !==\"\" ? (\n                                <span className={classes.error}>{errors.reasonStopped}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                        {objValues.reasonStopped ==='Others (Pls specify)' && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Other Reason Stopped </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"reasonStoppedOthers\"\n                                id=\"reasonStoppedOthers\"\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.reasonStoppedOthers}\n                                \n                            ></Input>\n                            {errors.reasonStoppedOther !==\"\" ? (\n                                <span className={classes.error}>{errors.reasonStopped}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                        )}\n                        </>\n                     )}\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\n                    <>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateClientReferredOut\"\n                            id=\"dateClientReferredOut\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateClientReferredOut}\n                            required\n                        />\n                        {errors.dateClientReferredOut !==\"\" ? (\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Facility referred to </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"facilityReferredTo\"\n                            id=\"facilityReferredTo\"\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.facilityReferredTo}\n                            required\n                        />\n                        {errors.facilityReferredTo !==\"\" ? (\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    </>\n                    )}\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\n                    <>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date of client died </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateClientDied\"\n                            id=\"dateClientDied\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateClientDied}\n                            required\n                        />\n                        {errors.dateClientDied !==\"\" ? (\n                            <span className={classes.error}>{errors.dateClientDied}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Cause of death</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"causeOfDeath\"\n                            id=\"causeOfDeath\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.causeOfDeath}\n                            required\n                        >\n                            <option value=\"\">Select</option>\n                                {causeOfDeath.map((value) => (\n                                    <option key={value.id} value={value.display}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                        </Input>\n                        {errors.causeOfDeath !==\"\" ? (\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                   \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Source of death information  </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"sourceOfDeathInfo\"\n                            id=\"sourceOfDeathInfo\"\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.sourceOfDeathInfo}\n                            required\n                        />\n                        {errors.sourceOfDeathInfo !==\"\" ? (\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    </>\n                    )}\n                    {/* <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"why\"\n                            id=\"why\"\n                            onChange={handleInputChange}\n                            value={objValues.why}\n                            required\n                        />\n                        \n                        </FormGroup>\n                    </div> */}\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Date of restart if placed back on medication</Label>\n                        <Input\n                            className=\"form-control\"\n                            type=\"date\"\n                            name=\"dateRestartPlacedBackMedication\"\n                            id=\"dateRestartPlacedBackMedication\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            value={objValues.dateRestartPlacedBackMedication}\n                            onChange={handleInputChange}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                        />\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\n                        ) : \"\" }    \n                        </FormGroup>\n                    </div>\n                     )}\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\n                    <>\n                     <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateSeroconverted\"\n                            id=\"dateSeroconverted\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateSeroconverted}\n                            required\n                        />\n                        {errors.dateSeroconverted !==\"\" ? (\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div> \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Link to ART</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"linkToArt\"\n                            id=\"linkToArt\"\n                            onChange={handleInputChange}\n                            value={objValues.linkToArt}  \n                        >\n                        <option value=\"\"> Select</option>\n                        <option value=\"true\">Yes </option>\n                        <option value=\"false\"> No</option>\n                        </Input>\n                        {errors.linkToArt !==\"\" ? (\n                            <span className={classes.error}>{errors.linkToArt}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    {objValues.linkToArt==='true' && (\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Date link to ART</Label>\n                        <Input\n                            className=\"form-control\"\n                            type=\"date\"\n                            name=\"dateLinkToArt\"\n                            id=\"dateLinkToArt\"\n                            //min=\"1983-12-31\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            value={objValues.dateLinkToArt}\n                            onChange={handleInputChange}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                        />\n                        {errors.dateLinkToArt !==\"\" ? (\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\n                        ) : \"\" }    \n                        </FormGroup>\n                    </div>\n                    )}\n                    </>)}\n                    \n                </div>\n\n                {saving ? <Spinner /> : \"\"}\n                <br />\n            \n                <MatButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<SaveIcon />}\n                    onClick={handleSubmit}\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                    >\n                    {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                    ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                    )}\n                </MatButton>\n            \n                <MatButton\n                    variant=\"contained\"\n                    className={classes.button}\n                    startIcon={<CancelIcon />}\n                    onClick={props.toggle}\n                    style={{backgroundColor:'#992E62'}}\n                    \n                >\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\n                </MatButton>\n            \n                </form>\n            </CardBody>\n        </Card>                    \n    </div>\n  );\n}\n\nexport default PrEPEligibiltyScreeningForm;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, Checkbox, FormControl, FormControlLabel, FormLabel, } from \"@material-ui/core\";\nimport MatButton from '@material-ui/core/Button'\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message, Select, Dropdown} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport * as moment from 'moment';\nimport SaveIcon from '@material-ui/icons/Save'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [disabledField, setSisabledField] = useState(false);\n    const patientID= props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [counselingType, setCounselingType] = useState([]);\n    const [visitType, setVisitType] = useState([]);\n    const [reasonForDecline, setReasonForDecline] = useState([]);\n    const [populationType, setPopulationType] = useState([]);\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\n    let temp = { ...errors }\n\n    const [objValues, setObjValues]= useState(\n            {\n                counselingType: \"\",\n                drugUseHistory: {},\n                extra: {},\n                firstTimeVisit: true,\n                hivRisk: {},\n                numChildrenLessThanFive: \"\",\n                numWives: \"\",\n                personId: \"\",\n                personalHivRiskAssessment: {},\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\n                sexPartnerRisk: {},\n                stiScreening: {},\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\n                uniqueId: \"\",\n                visitDate:\"\",\n                visitType:\"\",\n                populationType: \"\",\n                pregnancyStatus: \"\",\n                score: 0\n            }\n    )\n    useEffect( async () => { \n        \n        CounselingType();\n        VisitType();\n        await ReasonForDecline();\n        PopulationType();\n        PregnancyStatus();\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\n            GetPatientPrepEligibility(props.activeContent.id)\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\n        }\n    }, [props.patientObj]);\n    const GetPatientPrepEligibility =(id)=>{\n        axios\n           .get(`${baseUrl}prep/eligibility/${id}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n                // console.log(response.data);\n               setObjValues(response.data);\n               setRiskAssessment(response.data.personalHivRiskAssessment)\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\n               setStiScreening(response.data.stiScreening)\n               setDrugHistory(response.data.drugUseHistory)\n               setAssessmentForPepIndication(response.data.assessmentForPepIndication)\n               setAssessmentForAcuteHivInfection(response.data.assessmentForAcuteHivInfection)\n               setServicesReceivedByClient(response.data.servicesReceivedByClient)\n               setAssessmentForPrepEligibility(response.data.assessmentForPrepEligibility)\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    } \n    const CounselingType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCounselingType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const VisitType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setVisitType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const ReasonForDecline = async ()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setReasonForDecline(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PopulationType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPopulationType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \n    }\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            unprotectedVaginalSexCasual:\"\",\n            unprotectedVaginalSexRegular:\"\",\n            uprotectedAnalSexWithCasual:\"\",\n            uprotectedAnalSexWithRegular:\"\", \n            stiHistory:\"\",  \n            sharedNeedles:\"\",   \n            moreThan1SexPartner:\"\",\n            analSexWithPartner :\"\",\n            unprotectedAnalSexWithPartner:\"\",\n            haveYouPaidForSex:\"\",\n            haveSexWithoutCondom:\"\",\n            experienceCondomBreakage:\"\",\n            takenPartInSexualOrgy:\"\",\n                          \n        }\n    )\n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            haveSexWithHIVPositive:\"\",\n            haveSexWithPartnerInjectDrug:\"\",\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\n            haveSexWithPartnerTransgender :\"\",\n            sexWithPartnersWithoutCondoms:\"\",             \n        }\n    )\n    const handleInputChangeRiskAssessmentPartner = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n                    \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n            analDischarge:\"\",\n            analItching:\"\",\n            analpain:\"\",\n            swollenIguinal:\"\", \n            genitalScore:\"\",\n                \n        }\n    )\n    const handleInputChangeStiScreening = e => { \n        setErrors({...errors, [e.target.name]: \"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \n                \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    const [drugHistory, setDrugHistory]= useState(\n        {\n            useAnyOfTheseDrugs:\"\",\n            inject:\"\",\n            sniff:\"\", \n            smoke:\"\", \n            Snort:\"\", \n            useDrugSexualPerformance:\"\",\n            hivTestedBefore:\"\",\n            recommendHivRetest:\"\",\n            clinicalSetting:\"\", \n            reportHivRisk:\"\",\n            hivExposure:\"\",\n            hivTestResultAtvisit:\"\", //\n            lastTest:\"\"\n        }\n    )\n    const handleInputChangeDrugHistory = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        if(drugHistory.hivTestedBefore===\"true\"){\n            drugHistory.lastTest=\"\"\n            setDrugHistory ({...drugHistory,  ['lastTest']: ''}); \n        } \n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForPepIndication, setAssessmentForPepIndication]= useState(\n        {\n            unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours:\"\",\n            sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours:\"\",\n        }\n    )\n    const handleInputChangeAssessmentForPepIndication = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForPepIndication ({...assessmentForPepIndication,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection]= useState(\n        {\n            acuteHivSymptomsLasttwoWeeks:\"\",\n            unprotectedAnalOrVaginalOrSharedNeedlesLast28Days:\"\",\n        }\n    )\n    const handleInputChangeAssessmentForAcuteHivInfection = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForAcuteHivInfection ({...assessmentForAcuteHivInfection,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForPrepEligibility, setAssessmentForPrepEligibility]= useState(\n        {\n            hivNegative:\"\",\n            hivRiskScore:\"\",\n            noIndicationForPep: \"\",\n            hasNoProteinuria: \"\",\n            noHistoryOrSignsOfLiverAbnormalitiesCabLa: \"\",\n            noHistoryOfDrugToDrugInteractionCabLa: \"\",\n            noHistoryOfDrugHypersensitivityCabLa: \"\",\n\n        }\n    )\n    const handleInputChangeAssessmentForPrepEligibility = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForPrepEligibility ({...assessmentForPrepEligibility,  [e.target.name]: e.target.value});         \n    }\n    const [servicesReceivedByClient, setServicesReceivedByClient]= useState(\n        {\n            willingToCommencePrep:\"\",\n            reasonsForDecline:[],\n            otherReasonsForDecline: \"\",\n\n        }\n    )\n    const handleInputChangeServicesReceivedByClient = (e, data) => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        \n        setServicesReceivedByClient ({...servicesReceivedByClient,  [e.target.name]: e.target.value});         \n    }\n\n    const handleInputReasonsForDecline = (e, data) => {\n        setServicesReceivedByClient({...servicesReceivedByClient, reasonsForDecline: data.value})\n    }\n\n    const [assessmentScore, setAssessmentScore] = useState(0);\n   \n\n    /*****  Validation  */\n     const validate = () => {\n        //PREP FORM VALIDATION\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\n           temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\n           temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\n           \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n            \n            if(validate()){\n                setSaving(true);\n            //objValues.htsClientId= clientId\n            objValues.drugUseHistory= drugHistory\n            objValues.personalHivRiskAssessment= riskAssessment\n            objValues.sexPartnerRisk= riskAssessmentPartner\n            objValues.stiScreening= stiScreening\n            objValues.personId= patientID\n            objValues.uniqueId= patientID\n            objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection\n            objValues.assessmentForPepIndication = assessmentForPepIndication\n            objValues.assessmentForPrepEligibility = assessmentForPrepEligibility\n            objValues.servicesReceivedByClient = servicesReceivedByClient\n            objValues.score = getPrepEligibilityScore();\n                if(props.activeContent && props.activeContent.actionType===\"update\"){//Perform operation for updation action\n                    axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.eligibilityCount= 1\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\n                        props.PatientObject();\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n        \n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            }else{\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        }else{\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    axios.post(`${baseUrl}prep/eligibility`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.eligibilityCount= 1\n                        //props.setPatientObj(response.data)\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n        \n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }\n           \n            }else{\n                setSaving(false);\n                toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\n            }   \n    }\n\n    const isFemale = () => {\n        return props.patientObj.gender.toLowerCase() === \"female\";\n    }\n    \n    const is30AndAbove = () => {\n        return Number(props.patientObj.age) >= 30;\n    }\n\n    const getIndicationForPepResult = () => {\n        if (assessmentForPepIndication !== null && assessmentForPepIndication !== undefined){\n            return Object.values(assessmentForPepIndication).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\n        }\n    }\n\n    const getAcuteHivResult = () => {\n        if (assessmentForAcuteHivInfection !== null && assessmentForAcuteHivInfection !== undefined){\n            return Object.values(assessmentForAcuteHivInfection).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\n        }\n    }\n\n    const getPrepEligibilityScore = () => {\n        var score = 0;\n        score += drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0\n        score += riskCount.length > 0 ? 1 : 0\n        score += getAcuteHivResult()\n        score += getIndicationForPepResult()\n        if (is30AndAbove() && isFemale() === false) {\n            score += assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0;\n        }\n        score += assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0;\n        score += assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0;\n        score += assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0;\n\n        if (is30AndAbove() && isFemale() === false) {\n            return score >= 8 ? 1 : 0;\n        } else {\n            return score >= 7 ? 1 : 0;\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n                <h2>PrEP Eligibilty Screening Form</h2>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Visit Date <span style={{ color:\"red\"}}> *</span></Label>\n                                <input\n                                    type=\"date\"\n                                    className=\"form-control\"\n                                    name=\"visitDate\"\n                                    id=\"visitDate\"\n                                    value={objValues.visitDate}\n                                    onChange={handleInputChange}\n                                    min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                />\n                                   \n                                {errors.visitDate !==\"\" ? (\n                                <span className={classes.error}>{errors.visitDate}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Visit type <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"visitType\"\n                                    id=\"visitType\"\n                                    value={objValues.visitType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {visitType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.visitType !==\"\" ? (\n                                <span className={classes.error}>{errors.visitType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Population type <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"populationType\"\n                                    id=\"populationType\"\n                                    value={objValues.populationType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {populationType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.populationType !==\"\" ? (\n                                <span className={classes.error}>{errors.populationType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        {isFemale() && <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Pregnancy Status <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"pregnancyStatus\"\n                                    id=\"pregnancyStatus\"\n                                    value={objValues.pregnancyStatus}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {pregnancyStatus.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.pregnancyStatus !==\"\" ? (\n                                <span className={classes.error}>{errors.pregnancyStatus}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>}\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Sex partners <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"sexPartner\"\n                                    id=\"sexPartner\"\n                                    value={objValues.sexPartner}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Both\">Both</option>\n                                </select>\n                                {errors.sexPartner !==\"\" ? (\n                                <span className={classes.error}>{errors.sexPartner}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        {/* {props.patientDetail!==null && props.patientDetail.personResponseDto.maritalStatus.display==='Married'   && (\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label> Number of own children {\"<\"}5 years</Label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"numChildrenLessThanFive\"\n                                    id=\"numChildrenLessThanFive\"\n                                    value={objValues.numChildrenLessThanFive}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                />\n                                   \n                                {errors.numChildrenLessThanFive !==\"\" ? (\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        )} */}\n                        {props.patientObj.gender==='Male' || props.patientObj.gender==='male'  && (\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Number of wives </Label>\n                                <input\n                                    className=\"form-control\"\n                                    name=\"numWives\"\n                                    id=\"numWives\"\n                                    value={objValues.numWives}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                />\n                                {errors.numWives !==\"\" ? (\n                                <span className={classes.error}>{errors.numWives}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        )}\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Type of counseling <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"counselingType\"\n                                    id=\"counselingType\"\n                                    value={objValues.counselingType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {counselingType.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.counselingType !==\"\" ? (\n                                <span className={classes.error}>{errors.counselingType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        </div>\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSexCasual\"\n                                        id=\"unprotectedVaginalSexCasual\"\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSexRegular\"\n                                        id=\"unprotectedVaginalSexRegular\"\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with casual partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSexWithCasual\"\n                                        id=\"uprotectedAnalSexWithCasual\"\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSexWithRegular\"\n                                        id=\"uprotectedAnalSexWithRegular\"\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>History of STI</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiHistory\"\n                                        id=\"stiHistory\"\n                                        value={riskAssessment.stiHistory}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiHistory !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiHistory}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Shared needles/injecting materials</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sharedNeedles\"\n                                        id=\"sharedNeedles\"\n                                        value={riskAssessment.sharedNeedles}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sharedNeedles !==\"\" ? (\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThan1SexPartner\"\n                                        id=\"moreThan1SexPartner\"\n                                        value={riskAssessment.moreThan1SexPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThan1SexPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal sex with Male/Female partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analSexWithPartner\"\n                                        id=\"analSexWithPartner\"\n                                        value={riskAssessment.analSexWithPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analSexWithPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedAnalSexWithPartner\"\n                                        id=\"unprotectedAnalSexWithPartner\"\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveYouPaidForSex\"\n                                        id=\"haveYouPaidForSex\"\n                                        value={riskAssessment.haveYouPaidForSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveYouPaidForSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you experience condom breakage </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experienceCondomBreakage\"\n                                        id=\"experienceCondomBreakage\"\n                                        value={riskAssessment.experienceCondomBreakage}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experienceCondomBreakage !==\"\" ? (\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you taken part in sexual orgy </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"takenPartInSexualOrgy\"\n                                        id=\"takenPartInSexualOrgy\"\n                                        value={riskAssessment.takenPartInSexualOrgy}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            \n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithHIVPositive\"\n                                        id=\"haveSexWithHIVPositive\"\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerInjectDrug\"\n                                        id=\"haveSexWithPartnerInjectDrug\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerTransgender\"\n                                        id=\"haveSexWithPartnerTransgender\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexWithPartnersWithoutCondoms\"\n                                        id=\"sexWithPartnersWithoutCondoms\"\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                         \n                            {/* </>)} */}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PEP Indication</div>        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>In the past 72 hours, have you had sex without a condom with someone whose HIV status is positive or not known to you?  </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        value={assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}\n                                        onChange={handleInputChangeAssessmentForPepIndication}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Have you shared injection equipment like needles with someone whose HIV status is positive or unknown to you? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        value={assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}\n                                        onChange={handleInputChangeAssessmentForPepIndication}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\n                                    <span className={classes.error}>{errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}}  >Assessment for Acute HIV Infection</div>        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>In the past 2 weeks: Have you had a cold or flu such as fever, sore throat, abnormal sweats, swollen lymph nodes, mouth sores, headache or rash?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"acuteHivSymptomsLasttwoWeeks\"\n                                        id=\"acuteHivSymptomsLasttwoWeeks\"\n                                        value={assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks}\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.acuteHivSymptomsLasttwoWeeks !==\"\" ? (\n                                    <span className={classes.error}>{errors.acuteHivSymptomsLasttwoWeeks}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Have you had condomless anal or vaginal sex or shared injection materials and/or equipment in the past 28 days?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\n                                        id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\n                                        value={assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\n                            \n                            <hr/>\n                            <h3>Route of Administration</h3>\n                            <h4>Do you use any of these drugs/substances ?</h4>\n                            <br/>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Inject </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"inject\"\n                                        id=\"inject\"\n                                        value={drugHistory.inject}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.inject !==\"\" ? (\n                                    <span className={classes.error}>{errors.inject}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Sniff </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sniff\"\n                                        id=\"sniff\"\n                                        value={drugHistory.sniff}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sniff !==\"\" ? (\n                                    <span className={classes.error}>{errors.sniff}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Snort</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"Snort\"\n                                        id=\"Snort\"\n                                        value={drugHistory.fever}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.Snort !==\"\" ? (\n                                    <span className={classes.error}>{errors.Snort}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Smoke</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"smoke\"\n                                        id=\"smoke\"\n                                        value={drugHistory.smoke}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.smoke !==\"\" ? (\n                                    <span className={classes.error}>{errors.smoke}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"useDrugSexualPerformance\"\n                                        id=\"useDrugSexualPerformance\"\n                                        value={drugHistory.useDrugSexualPerformance}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had HIV testing before ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestedBefore\"\n                                        id=\"hivTestedBefore\"\n                                        value={drugHistory.hivTestedBefore}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hivTestedBefore !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {drugHistory.hivTestedBefore===\"true\" && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>When was your last test?    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastTest\"\n                                        id=\"lastTest\"\n                                        value={drugHistory.lastTest}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"1 Month\">{\"<\"}1 Month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6Months\">4-6 Months</option>\n                                        <option value=\"6Months\">{\">\"}6 months</option>\n                                        \n                                    </select>\n                                    {errors.lastTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            </div>\n                            \n                            <div className=\"row\">\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV test result at visit <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestResultAtvisit\"\n                                        id=\"hivTestResultAtvisit\"\n                                        value={drugHistory.hivTestResultAtvisit}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Positive\">Positive</option>\n                                        <option value=\"Negative\">Negative</option>\n                                        \n                                    </select>\n                                    {errors.hivTestResultAtvisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Recommended for HIV Retest ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"recommendHivRetest\"\n                                        id=\"recommendHivRetest\"\n                                        value={drugHistory.recommendHivRetest}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.recommendHivRetest !==\"\" ? (\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clinicalSetting\"\n                                        id=\"clinicalSetting\"\n                                        value={drugHistory.clinicalSetting}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clinicalSetting !==\"\" ? (\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"reportHivRisk\"\n                                        id=\"reportHivRisk\"\n                                        value={drugHistory.reportHivRisk}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.reportHivRisk !==\"\" ? (\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivExposure\"\n                                        id=\"hivExposure\"\n                                        value={drugHistory.hivExposure}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hivExposure !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivExposure}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Genital score +/-pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"genitalScore\"\n                                        id=\"genitalScore\"\n                                        value={stiScreening.genitalScore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.genitalScore !==\"\" ? (\n                                    <span className={classes.error}>{errors.genitalScore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"swollenIguinal\"\n                                        id=\"swollenIguinal\"\n                                        value={stiScreening.swollenIguinal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.swollenIguinal !==\"\" ? (\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal pain on stooling?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analpain\"\n                                        id=\"analpain\"\n                                        value={stiScreening.analpain}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analpain !==\"\" ? (\n                                    <span className={classes.error}>{errors.analpain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal itching?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analItching\"\n                                        id=\"analItching\"\n                                        value={stiScreening.analItching}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analItching !==\"\" ? (\n                                    <span className={classes.error}>{errors.analItching}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analDischarge\"\n                                        id=\"analDischarge\"\n                                        value={stiScreening.analDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.analDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PrEP Eligibilty</div>\n                            <div>\n                                <FormGroup>\n                                    <Label>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</Label>\n                                </FormGroup>\n                            </div>\n                            <div>\n                                <FormGroup>\n                                    <Label>{`HIV Risk Score > 1: ${riskCount.length > 0 ? 1 : 0}`}</Label>\n                                </FormGroup>\n                            </div>\n                            {(is30AndAbove() && isFemale() === false) && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Has no proteinuria (>30 Years)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hasNoProteinuria\"\n                                        id=\"hasNoProteinuria\"\n                                        value={assessmentForPrepEligibility?.hasNoProteinuria}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hasNoProteinuria !==\"\" ? (\n                                    <span className={classes.error}>{errors.hasNoProteinuria}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history / signs & symptoms of Liver abnormalities (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\n                                        id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history of drug-drug interaction (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOfDrugToDrugInteractionCabLa\"\n                                        id=\"noHistoryOfDrugToDrugInteractionCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOfDrugToDrugInteractionCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOfDrugToDrugInteractionCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOfDrugHypersensitivityCabLa\"\n                                        id=\"noHistoryOfDrugHypersensitivityCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOfDrugHypersensitivityCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOfDrugHypersensitivityCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Calculate the sum of PrEP Eligibility. If {\"<= \"}1 client is Eligible for PrEP.  (Score: Count Yes=1, No=0).</h4>\n                                {/* <b>Score :{stiCount.length}</b> */}\n                                <h5>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</h5>\n                                <h5>{`HIV risk score >=1 : ${riskCount.length > 0 ? 1 : 0}`}</h5>\n                                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult() }`}</h5>\n                                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\n                                {(is30AndAbove() && isFemale() === false) && <h5>{`Has no proteinuria: ${assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0}`}</h5>}\n\n                            </Message>\n                            <Message warning>\n                                <h4>Calculate the sum of PrEP Eligibility for CAB-LA regimen. If the following below =1 client is Eligible for CAB-LA. {`(Score: Count Yes=1, No=0)`}</h4>\n                                {/* <b>Score :{stiCount.length}</b> */}\n                                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0}`}</h5>\n                                <h5>{`No history of drug-drug interaction (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0}`}</h5>\n                                <h5>{`No history of drug hypersensitivity (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0}`}</h5>\n\n                            </Message>\n                            <Message warning>\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Services Received by Client</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Willing to commence PrEP`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"willingToCommencePrep\"\n                                        id=\"willingToCommencePrep\"\n                                        value={servicesReceivedByClient?.willingToCommencePrep}\n                                        onChange={handleInputChangeServicesReceivedByClient}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.willingToCommencePrep !==\"\" ? (\n                                    <span className={classes.error}>{errors.willingToCommencePrep}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                                     \n                                        \n                                        {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\n                            {servicesReceivedByClient?.willingToCommencePrep === 'false' && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Reasons for Declining PrEP`}</Label>\n                                    <Dropdown value={servicesReceivedByClient?.reasonsForDecline} placeholder='select reasons for decline' onChange={handleInputReasonsForDecline} fluid multiple selection options={reasonForDecline.map((each) => {\n                                            return {key: each.code, text:each.display, value:each.code}})} />\n                                    {errors.reasonsForDecline !==\"\" ? (\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                            {(servicesReceivedByClient?.reasonsForDecline?.find((one)=> one === \"REASON_PREP_DECLINED_OTHERS_(SPECIFY)\") !== (null || undefined)) && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"otherReasonsForDecline\"\n                                        id=\"otherReasonsForDecline\"\n                                        value={servicesReceivedByClient?.otherReasonsForDecline}\n                                        onChange={handleInputChangeServicesReceivedByClient}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                    {errors.reasonsForDecline !==\"\" ? (\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                         \n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {props.activeContent && props.activeContent.actionType ===\"update\"? (<>\n                        <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        hidden={disabledField}\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        style={{backgroundColor:\"#014d88\"}}\n                        onClick={handleSubmit}\n                        disabled={saving}\n                        >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                            )}\n                    </MatButton>\n                    </>):(<>\n                    <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        style={{backgroundColor:\"#014d88\"}}\n                        onClick={handleSubmit}\n                        disabled={saving}\n                        >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                    </MatButton>\n                    </>)}\n                           \n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { DateTimePicker } from \"react-widgets\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst PrEPVisit = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [carePoints, setCarePoints] = useState([]);\n    const [hivStatus, setHivStatus] = useState([]);\n    //set ro show the facility name field if is transfer in \n    const [transferIn, setTransferIn] = useState(false);\n    // display the OVC number if patient is enrolled into OVC \n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\n\n    useEffect(() => {         \n\n      }, []);\n\n    const handleInputChange = e => {\n        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        if(e.target.name ===\"entryPointId\" ){\n            if(e.target.value===\"21\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }\n\n    }\n          \n    //Handle CheckBox \n    const handleCheckBox =e =>{\n        if(e.target.checked){\n            setOvcEnrolled(true)\n        }else{\n            setOvcEnrolled(false)\n        }\n    }  \n    \n    const validate = () => {\n        let temp = { ...errors }\n        //temp.name = details.name ? \"\" : \"This field is required\"\n        //temp.description = details.description ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        \n          objValues.personId= patientObj.id\n          patientObj.enrolled=true\n          delete objValues['tableData'];\n          setSaving(true);\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.toggle()\n                  props.patientObj.enrolled=true\n                  props.PatientCurrentStatus()\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n        <div>                  \n            <Card >\n                <CardBody>\n                <form >\n                    <div className=\"row\">\n                        <h2>PrEP Visit</h2>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"uniqueId\"\n                                id=\"uniqueId\"\n                                onChange={handleInputChange}\n                                value={objValues.uniqueId}\n                                required\n                            />\n                            \n                            </FormGroup>\n                        </div>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Noted Side Effects</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"entryPointId\"\n                                id=\"entryPointId\"\n                                onChange={handleInputChange}\n                                value={objValues.entryPointId}\n                                required\n                            >\n                                <option value=\"\">Select </option>\n                \n                                {carePoints.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                {errors.entryPointId !==\"\" ? (\n                                        <span className={classes.error}>{errors.entryPointId}</span>\n                                    ) : \"\" }\n                            </Input>\n                                \n                            </FormGroup>\n                        </div>\n                        </div>\n                        <hr/>\n                        \n                        <div className=\"row\">\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">HTS Result</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                        <h3>PrEP Drugs</h3>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Regimen</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        </div>\n                    \n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Level of Adherence</Label>\n                            <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Why Poor/Fair Adherence?</Label>\n                            <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                            </FormGroup>\n                        </div>\n                    </div>\n                    \n                    {saving ? <Spinner /> : \"\"}\n                    <br />\n                \n                    <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        onClick={handleSubmit}\n                        >\n                        {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                        ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                        )}\n                    </MatButton>\n                \n                <MatButton\n                    variant=\"contained\"\n                    className={classes.button}\n                    startIcon={<CancelIcon />}\n                    onClick={props.toggle}\n                    \n                >\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n                </MatButton>\n                \n                    </form>\n                </CardBody>\n            </Card>                    \n        </div>\n  );\n}\n\nexport default PrEPVisit;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from \"reactstrap\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport { useHistory } from \"react-router-dom\";\n//import {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n//import { DateTimePicker } from \"react-widgets\";\nimport PhoneInput from \"react-phone-input-2\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PrEPRegistrationForm = (props) => {\n  ///const patientObj = props.patientObj;\n  const [entryPoint, setEntryPoint] = useState([]);\n  //let history = useHistory();\n  const classes = useStyles();\n  const [objValues, setObjValues] = useState({\n    dateEnrolled: \"\",\n    dateReferred: \"\",\n    extra: {},\n    personId: 0,\n    prepEligibilityUuid: \"\",\n    riskType: \"\",\n    supporterName: \"\",\n    supporterPhone: \"\",\n    supporterRelationshipType: \"\",\n    uniqueId: \"\",\n    hivTestingPoint: \"\",\n    dateOfLastHivNegativeTest: \"\",\n    targetGroup: \"\",\n  });\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [prepRisk, setPrepRisk] = useState([]);\n  const [relatives, setRelatives] = useState([]);\n  const [patientDto, setPatientDto] = useState();\n  const [disabledField, setSisabledField] = useState(false);\n  const [targetGroupValue, setTargetGroupValue] = useState(\"\");\n  useEffect(() => {\n    GetPatientDTOObj();\n    RELATIONSHIP();\n    PREP_RISK_TYPE();\n    EntryPoint();\n    if (\n      props.activeContent.id &&\n      props.activeContent.id !== \"\" &&\n      props.activeContent.id !== null\n    ) {\n      GetPatientPrepEnrollment(props.activeContent.id);\n      setSisabledField(\n        props.activeContent.actionType === \"view\" ? true : false\n      );\n    }\n    //GetPatientPrepEnrollment\n  }, []);\n  const getTargetGroupvalue = () => {\n    axios\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data?.htsClientDtoList[0]?.targetGroup);\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const EntryPoint = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPoint(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const RELATIONSHIP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setRelatives(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const PREP_RISK_TYPE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepRisk(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const GetPatientDTOObj = () => {\n    axios\n      .get(\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        //console.log(response.data)\n        setPatientDto(response.data);\n        getTargetGroupvalue();\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const GetPatientPrepEnrollment = (id) => {\n    axios\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data.find((x)=> x.id===id));\n        setObjValues(response.data.find((x) => x.id === id));\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n\n  const validate = () => {\n    let temp = { ...errors };\n    temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\";\n    temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\";\n    temp.riskType = objValues.riskType ? \"\" : \"This field is required\";\n    //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\n    //temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\n    //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\n    temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\";\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      objValues.personId = props.patientObj.personId;\n      objValues.prepEligibilityUuid = patientDto.uuid;\n      objValues.targetGroup = targetGroupValue;\n      //console.log(\"prep\", objValues);\n      setSaving(true);\n      if (props.activeContent && props.activeContent.actionType) {\n        axios\n          .put(\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\n            objValues,\n            { headers: { Authorization: `Bearer ${token}` } }\n          )\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.prepCount = \"1\";\n            props.PatientObject();\n            toast.success(\"Prep Enrollment save successful!\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            toast.error(\"Something went wrong\");\n          });\n      } else {\n        axios\n          .post(`${baseUrl}prep/enrollment`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.prepCount = \"1\";\n            toast.success(\"Prep Enrollment save successful!\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            toast.error(\"Something went wrong\");\n          });\n      }\n    } else {\n      toast.error(\"All fields are required \", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <h2>PrEP Enrollment </h2>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"uniqueId\">\n                    Unique Client's ID <span style={{ color: \"red\" }}> *</span>{\" \"}\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"uniqueId\"\n                    id=\"uniqueId\"\n                    onChange={handleInputChange}\n                    value={objValues.uniqueId}\n                    disabled={disabledField}\n                  />\n                  {errors.uniqueId !== \"\" ? (\n                    <span className={classes.error}>{errors.uniqueId}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"ancUniqueArtNo\"\n                    id=\"ancUniqueArtNo\"\n                    onChange={handleInputChange}\n                    value={objValues.ancUniqueArtNo}\n                    disabled={disabledField}\n                  />\n                  {errors.ancUniqueArtNo !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.ancUniqueArtNo}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>\n                    Date enrolled in PrEP{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateEnrolled\"\n                    id=\"dateEnrolled\"\n                    value={objValues.dateEnrolled}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    min={\n                      patientDto && patientDto.visitDate\n                        ? patientDto.visitDate\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateEnrolled !== \"\" ? (\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"entryPointId\">\n                    PrEP Risk Type <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"select\"\n                    name=\"riskType\"\n                    id=\"riskType\"\n                    onChange={handleInputChange}\n                    value={objValues.riskType}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n                    {prepRisk.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.riskType !== \"\" ? (\n                    <span className={classes.error}>{errors.riskType}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>HIV Testing Point </Label>\n                  <Input\n                    type=\"select\"\n                    name=\"hivTestingPoint\"\n                    id=\"hivTestingPoint\"\n                    onChange={handleInputChange}\n                    value={objValues.hivTestingPoint}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n                    {entryPoint.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>Date of last HIV Negative test</Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateOfLastHivNegativeTest\"\n                    id=\"dateOfLastHivNegativeTest\"\n                    value={objValues.dateOfLastHivNegativeTest}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateOfLastHivNegativeTest !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateOfLastHivNegativeTest}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>\n                    Date Referred for PrEP{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>{\" \"}\n                  </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateReferred\"\n                    id=\"dateReferred\"\n                    value={objValues.dateReferred}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    min={\n                      patientDto && patientDto.visitDate\n                        ? patientDto.visitDate\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateReferred !== \"\" ? (\n                    <span className={classes.error}>{errors.dateReferred}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>PrEP Supporter </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"supporterName\"\n                    id=\"supporterName\"\n                    value={objValues.supporterName}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={disabledField}\n                  />\n                  {errors.supporterName !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterName}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>Relationship </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"select\"\n                    name=\"supporterRelationshipType\"\n                    id=\"supporterRelationshipType\"\n                    value={objValues.supporterRelationshipType}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n\n                    {relatives.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.supporterRelationshipType !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterRelationshipType}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>PrEP Supporter Phone Number</Label>\n                  {/* <Input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        name=\"supporterPhone\"\n                                        id=\"supporterPhone\"\n                                        value={objValues.supporterPhone}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                    /> */}\n                  <PhoneInput\n                    containerStyle={{\n                      width: \"100%\",\n                      border: \"1px solid #014D88\",\n                    }}\n                    inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                    country={\"ng\"}\n                    placeholder=\"(234)7099999999\"\n                    maxLength={5}\n                    name=\"supporterPhone\"\n                    id=\"supporterPhone\"\n                    masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                    value={objValues.supporterPhone}\n                    onChange={(e) => {\n                      checkPhoneNumberBasic(e, \"supporterPhone\");\n                    }}\n                    disabled={disabledField}\n                  />\n                  {errors.supporterPhone !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterPhone}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n            </div>\n\n            {saving ? <Spinner /> : \"\"}\n            <br />\n            {props.activeContent &&\n            props.activeContent.actionType === \"update\" ? (\n              <>\n                <MatButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  hidden={disabledField}\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  style={{ backgroundColor: \"#014d88\" }}\n                  onClick={handleSubmit}\n                  disabled={saving}\n                >\n                  {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                  ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Updating...\n                    </span>\n                  )}\n                </MatButton>\n              </>\n            ) : (\n              <>\n                <MatButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  style={{ backgroundColor: \"#014d88\" }}\n                  onClick={handleSubmit}\n                  disabled={saving}\n                >\n                  {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                  ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Saving...\n                    </span>\n                  )}\n                </MatButton>\n              </>\n            )}\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default PrEPRegistrationForm;\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\nimport {Modal,ModalHeader, ModalBody,Form,\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\n} from \"reactstrap\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MatButton from \"@material-ui/core/Button\";\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { Button2, Icon, List } from 'semantic-ui-react'\nimport {ToastContainer, toast} from \"react-toastify\";\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport axios from \"axios\";\nimport {token, url as baseUrl} from \"../../../api\";\n\nimport { green, red } from '@mui/material/colors';\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\n//import SaveIcon from '@mui/icons-material/Save';\n// import LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import ModalImage from \"react-modal-image\";\nimport {Link, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport {Dropdown,Badge} from 'react-bootstrap';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport fingerprintimage  from './../../images/fingerprintimage.png';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\nimport _ from 'lodash';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\n            fontFamily:'FontAwesome',\n            border:'0',\n            verticalAlign:'middle',\n            marginLeft:'.25em',\n            lineHeight:'1'\n        },\n        \"& .dropdown-menu .dropdown-item\":{\n            fontSize: '14px',\n            color: '#014d88',\n            padding: '0.3rem 1.5rem',\n            fontWeight:'bold'\n        },\n        \"& .mt-4\":{\n            marginTop:'28px !important'\n        },\n        \"& .form-control\":{\n            color:'#992E62'\n        },\n        \"& .form-control:focus\":{\n            color:'#014d88'\n        },\n        \"& .sharp \":{\n            \"min-width\": \"35px\",\n            padding:\"5px\",\n            height: '35px',\n            \"min-height\": \"35px\"\n}\n    },\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n/*    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 350,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: \"none\",\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"12.8px\",\n    },*/\n}));\n\nlet checkUrl=\"\"\n\nfunction Biometrics(props) {\n    const classes = useStyles();\n    let history = useHistory();\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\n    const [biometricDevices,setbiometricDevices] = useState([]);\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\n    const [fingerType, setFingerType] = useState([]);\n    const [devices, setDevices] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [pageLoading, setPageLoading] = useState(false);\n    const [showCapture, setshowCapture] = React.useState(false);\n    const [tryAgain, setTryAgain] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [errors, setErrors] = useState({});\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\n    // const [responseImage, setResponseImage] = useState(\"\")\n    const [capturedFingered, setCapturedFingered]= useState([]);\n    const [selectedFingers, setSelectedFingers] = useState([]);\n\n    const buttonSx = {\n        ...(success && {\n            bgcolor: green[500],\n            '&:hover': {\n                bgcolor: green[700],\n            },\n        }),\n    };\n\n    const getPersonBiometrics = async() =>{\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\n            if(response.data.length > 0){\n                setStoredBiometrics(response.data);\n                setPageLoading(true);\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\n                setSelectedFingers(personCapturedFingers);\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\n\n                });\n                setFingerType(biometricItems);\n            }else{\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                    return _.extend({}, item, {captured: false});\n                    //return item.captured = personCapturedFingers.includes(item.display)\n                });\n                setFingerType(biometricItems);\n\n            }\n\n        }).catch(async (error)=>{\n            console.log(\"getPersonBiometrics error\")\n            console.log(error)\n\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                return _.extend({}, item, {captured: false});\n            });\n            setFingerType(biometricItems);\n            setPageLoading(true);\n        })\n    }\n\n    const clear_storelist = () =>{\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\n            console.log('cleared store')\n        }).catch((error)=>{\n            console.log(\"cleared store error\")\n            console.log(error)\n\n        })\n    }\n\n\n    useEffect(() => {\n        clear_storelist();\n        getPersonBiometrics();\n        TemplateType();\n        //biometricFingers();\n    }, []);\n    //Get list of KP\n    const TemplateType =()=>{\n        axios\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                if(response.data===true){\n                    axios\n                        .get(`${baseUrl}biometrics/devices`,\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\n                        )\n                        .then((response) => {\n                            setDevices(response.data);\n                            setbiometricDevices(response.data);\n\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        });\n\n                }\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n\n    }\n\n    //Get list of Finger index\n    const biometricFingers =()=>{\n        axios\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setFingerType(response.data);\n            })\n            .catch((error) => {\n            });\n\n    }\n    //check if device is plugged or not\n    const checkDevice = e =>{\n        const deviceName =e.target.value;\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\n        setObjValues({...objValues, device:deviceName})\n        axios\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                if(response.data.errorType ===\"ERROR\"){\n                    toast.error(response.data.errorName + \" is not plug\");\n                    //setshowCapture(true)\n                }else{\n                    setshowCapture(true)\n                }\n            })\n            .catch((error) => {\n            });\n    }\n    // handle the input changes\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n    }\n    //form validation\n    const validate = () => {\n        let temp = { ...errors }\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\n        temp.device = objValues.device ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    //to capture  selected index finger\n    const captureFinger = (e) => {\n        e.preventDefault();\n        if(validate()){\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n            )\n                .then(response => {\n                    setLoading(true);\n                    if(response.data.type ===\"ERROR\"){\n                        setLoading(false);\n                        setTryAgain(true);\n                        window.setTimeout(() => {\n                            setTryAgain(false);\n                        }, 5000);\n                        toast.error(response.data.message.ERROR);\n                    }else{\n                        const templateType= response.data.templateType\n                        setTryAgain(false);\n                        setSuccess(true)\n                        window.setTimeout(() => {\n                            setSuccess(false)\n                            setLoading(false);\n                        }, 5000);\n                        let biometricsEnrollments = response.data\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\n\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\n                        //fingerType.splice(templateType, 1);\n                        _.find(fingerType,{'display':templateType}).captured = true;\n                        setFingerType([...fingerType]);\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\n                        setObjValues({...objValues, templateType:\"\"});\n                    }\n                    //toast.success(\"Record save successful\");\n                })\n                .catch(error => {\n                });\n        }\n    }\n\n    const deleteBiometric =(id,finger)=>{\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\n            toast.success(`${finger} deleted successfully`);\n            _.find(fingerType,{'display':finger}).captured = false;\n            setFingerType([...fingerType]);\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\n            setStoredBiometrics(newStoredBiometrics);\n            clear_storelist();\n            if(newStoredBiometrics.length === 0){\n                props.updatePatientBiometricStatus(false);\n            }\n        }).catch((error)=>{\n            toast.error(\"Something went wrong\");\n            console.log(error)\n\n        })\n    }\n\n    //Save Biometric capture\n    const saveBiometrics = (e) => {\n        e.preventDefault();\n        if(capturedFingered.length >= 1){\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n            )\n                .then(response => {\n                    toast.success(\"Biometric save successful\");\n                    setCapturedFingered([])\n                    getPersonBiometrics();\n                    props.patientObj.biometricStatus=true\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\n                    //props.updatePatientBiometricStatus(true);\n                })\n                .catch(error => {\n                    toast.error(\"Something went wrong saving biometrics\");\n                    console.log(error);\n                });\n        }else{\n\n            toast.error(\"You can't save less than 2 finger\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n\n\n            <div style={{display:\"flex\",width:'100%'}}>\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\n                    {pageLoading && storedBiometrics.length > 0 ? (\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\n                                {storedBiometrics.map((biometric, index)=>(\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\n\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\n                                                <div>\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\n                                                </div>\n\n                                                {/*Action button -- Dropdown menu*/}\n                                                <Dropdown className=\"dropdown ms-auto\"  >\n                                                    <Dropdown.Toggle\n                                                        as=\"button\"\n                                                        variant=\"\"\n                                                        drop=\"up\"\n                                                        className=\"btn sharp btn-primary \"\n                                                        id=\"tp-btn\"\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\n                                                    >\n                                                        <svg\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                            width=\"18px\"\n                                                            height=\"18px\"\n                                                            viewBox=\"0 0 24 24\"\n                                                            version=\"1.1\"\n                                                        >\n                                                            <g\n                                                                stroke=\"none\"\n                                                                strokeWidth=\"1\"\n                                                                fill=\"none\"\n                                                                fillRule=\"evenodd\"\n                                                            >\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                                            </g>\n                                                        </svg>\n                                                    </Dropdown.Toggle>\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\n                                                            <DeleteIcon /> Delete\n                                                        </Dropdown.Item>\n\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n\n                                            </div>\n                                            <div className=\"card-body p-0 pb-2\">\n                                                <ul className=\"list-group list-group-flush\">\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\n                                                    </li>\n\n                                                    <li className=\"list-group-item\">\n\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\n                                                        <span className=\"text-black desc-text ms-2\">\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\n                                                    </span>\n                                                    </li>\n\n                                                </ul>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                ))}\n                            </div>\n                        )\n                        :\n                        <>\n                            <div className=\"flex-grow-8\">\n                                <div  className=\"flex-grow-8\"  >\n                                    <Alert severity=\"info\">\n                                        <AlertTitle style={{height:'400px'}}>\n                                            <strong>No biometrics captured</strong>\n                                        </AlertTitle>\n                                    </Alert>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\n                        <div className=\"col-12\">\n                            <ToastContainer />\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"device\"\n                                        id=\"device\"\n                                        onChange={checkDevice}\n                                        value={objValues.device}\n                                        required\n                                    >\n                                        <option value=\"\">Select Device </option>\n                                        {biometricDevices.map(({ id, name }) => (\n                                            <option key={id} value={name}>\n                                                {name}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.device !==\"\" ? (\n                                        <span className={classes.error}>{errors.device}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </Col>\n                            {showCapture ? (\n                                    <div className=\"row col-12\">\n                                        <Col md={6}>\n                                            <FormGroup>\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\n                                                <Input\n                                                    type=\"select\"\n                                                    name=\"templateType\"\n                                                    id=\"templateType\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.templateType}\n                                                    required\n                                                >\n                                                    <option value=\"\">Select Finger </option>\n\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\n                                                        <option key={value.id} value={value.display}>\n                                                            {value.display}\n                                                        </option>\n                                                    ))}\n                                                </Input>\n                                                {errors.templateType !==\"\" ? (\n                                                    <span className={classes.error}>{errors.templateType}</span>\n                                                ) : \"\" }\n                                            </FormGroup>\n                                        </Col>\n\n\n                                        <Col md={6}>\n\n                                            <MatButton\n                                                type='button'\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={captureFinger}\n                                                className={'mt-4'}\n                                                style={{backgroundColor:'#992E62'}}\n                                                startIcon={<FingerprintIcon />}\n                                            >\n                                                Capture Finger\n                                            </MatButton>\n\n                                        </Col>\n                                        <br/>\n\n                                    </div>\n                                )\n                                :\n                                \"\"\n                            }\n\n                            <Row>\n                                {capturedFingered.length >=1 ? (\n                                        <>\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\n                                                <List celled horizontal>\n                                                    {capturedFingered.map((x) => (\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\n                                                        </List.Item>\n                                                    ))}\n\n                                                </List>\n\n                                            </Col>\n                                            <br/><br/><br/><br/><br/><br/>\n                                            <Col md={12} >\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={saveBiometrics}\n                                                    // className={classes.button}\n                                                    startIcon={<SaveIcon/>}\n                                                >\n                                                    Save Capture\n                                                </MatButton>\n                                            </Col>\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                            </Row>\n                        </div>\n                    </div>\n\n                   \n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/*\n            <Form >\n\n                    <Card>\n                         <CardHeader>\n                                    Capture Biometrics\n                                </CardHeader>\n                        <CardBody>\n                            <Row form>\n                                <ToastContainer />\n                                <Col md={4}>\n                                    <FormGroup>\n                                        <Label for='device'>Select Device </Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"device\"\n                                            id=\"device\"\n                                            onChange={checkDevice}\n                                            value={objValues.device}\n                                            required\n                                        >\n                                            <option value=\"\">Select Device </option>\n                                            {biometricDevices.map(({ id, name }) => (\n                                                <option key={id} value={name}>\n                                                    {name}\n                                                </option>\n                                            ))}\n\n                                        </Input>\n                                        {errors.device !==\"\" ? (\n                                            <span className={classes.error}>{errors.device}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </Col>\n                                {showCapture ? (\n                                        <>\n                                            <Col md={4}>\n                                                <FormGroup>\n                                                    <Label for='device'>Select Finger</Label>\n                                                    <Input\n                                                        type=\"select\"\n                                                        name=\"templateType\"\n                                                        id=\"templateType\"\n                                                        onChange={handleInputChange}\n                                                        value={objValues.templateType}\n                                                        required\n                                                    >\n                                                        <option value=\"\">Select Finger </option>\n\n                                                        {fingerType.map((value) => (\n                                                            <option key={value.id} value={value.display}>\n                                                                {value.display}\n                                                            </option>\n                                                        ))}\n                                                    </Input>\n                                                    {errors.templateType !==\"\" ? (\n                                                        <span className={classes.error}>{errors.templateType}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </Col>\n\n\n                                            <Col md={4}>\n\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={captureFinger}\n                                                    className={'mt-4'}\n                                                    startIcon={<FingerprintIcon />}\n                                                >\n                                                    Capture Finger\n                                                </MatButton>\n\n                                            </Col>\n                                            <br/>\n\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                                 <img width='500' height='200' src={responseImage}/>\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n\n                                    {loading && (\n                                        <>\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                                <Box sx={{ m: 1, position: 'relative' }}>\n                                                    <Fab\n                                                        aria-label=\"save\"\n                                                        color=\"secondary\"\n                                                        sx={buttonSx}\n\n                                                    >\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\n                                                    </Fab>\n                                                    {loading && (\n                                                        <CircularProgress\n                                                            size={68}\n                                                            sx={{\n                                                                color: green[500],\n                                                                position: 'absolute',\n                                                                top: -6,\n                                                                left: -6,\n                                                                zIndex: 1,\n                                                            }}\n                                                        />\n                                                    )}\n                                                </Box>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\n                                                </Typography>\n                                            </Box>\n                                        </>\n                                    )\n                                    }\n                                    {tryAgain && (\n                                        <>\n\n\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                                <Box sx={{ m: 1, position: 'relative' }}>\n                                                    <Fab\n                                                        aria-label=\"save\"\n                                                        color=\"secondary\"\n                                                        sx={buttonSx}\n\n                                                    >\n                                                        <FingerprintIcon />\n                                                    </Fab>\n                                                    {tryAgain && (\n                                                        <CircularProgress\n                                                            size={68}\n                                                            sx={{\n                                                                color: red[500],\n                                                                position: 'absolute',\n                                                                top: -6,\n                                                                left: -6,\n                                                                zIndex: 1,\n                                                            }}\n                                                        />\n                                                    )}\n                                                </Box>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    Click to Recapture Again\n                                                </Typography>\n                                            </Box>\n                                        </>\n                                    )\n                                    }\n\n                                </Col>\n\n\n                            </Row>\n\n                            <Row>\n                                {capturedFingered.length >=1 ? (\n                                        <>\n                                            <Col md={12} >\n                                                <h3>Captured Fingerprints</h3>\n                                            </Col>\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\n                                                <List celled horizontal>\n                                                    {capturedFingered.map((x) => (\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\n                                                        </List.Item>\n                                                    ))}\n\n                                                </List>\n\n                                            </Col>\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\n                                        <List celled horizontal>\n                                            {[1,2,3].map((x) => (\n                                                <List.Item>\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\n                                                </List.Item>\n                                            ))}\n\n                                        </List>\n\n                                    </Col>\n                                            <br/><br/><br/><br/><br/><br/>\n                                            <Col md={12} >\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={saveBiometrics}\n                                                    // className={classes.button}\n                                                    startIcon={<SaveIcon/>}\n                                                >\n                                                    Save Capture\n                                                </MatButton>\n                                            </Col>\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                            </Row>\n                        </CardBody>\n                    </Card>\n            </Form>\n*/}\n\n        </div>\n    );\n}\n\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './PatientCard'\nimport { useHistory } from \"react-router-dom\";\nimport SubMenu from './SubMenu';\nimport RecentHistory from './../History/RecentHistory';\nimport PatientHistory from './../History/PatientHistory'\nimport ClinicVisit from '../Consultation/Index'\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\nimport PrEPVisit from './../PrepServices/PrEPVisit';\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\nimport Biometrics from './Biometric'\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [patientDetail, setPatientDetail] = useState(\"\")\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\n    const { classes } = props;\n    const patientObjLocation = history.location && history.location.state ? history.location.state.patientObj : {}\n    //let patientObj =\"\"\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\n    //console.log(patientObj)\n    useEffect(() => {\n      PatientObject()\n     }, []);\n     async function PatientObject() {\n      axios\n          .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n          )\n          .then((response) => {\n            setPatientDetail(response.data);\n            //patientObj=response.data\n          })\n          .catch((error) => {    \n          });        \n    }\n  return (\n    <div className={classes.root}>\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\n\t\t\t</ol>\n\t\t  </div>\n      <Card >\n        <CardContent>\n          {/* This component is where the patient menu and route is define and manage */}\n            {/* start of patient card detail */}\n            <PatientCardDetail patientObj={patientDetail}  setActiveContent={setActiveContent} patientDetail={patientDetail}/> \n            {/* End of patient card detail */} \n            {/* This is the submenu components */}          \n            <SubMenu patientObj={patientObjLocation}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\n            <br/>\n            {/* This is the submenu routes */}\n            {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\n            {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} patientDetail={patientDetail} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-visit' &&( <PrEPVisit PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)} \n            {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \n          {/* History Pages */}\n         \n         </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {format} from 'date-fns';\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {TiArrowBack} from 'react-icons/ti'\nimport {useForm} from \"react-hook-form\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport { getValue } from \"@syncfusion/ej2-base\";\nimport  './patient.css'\n// import Form from 'react-bootstrap/Form';\n\n\n\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst UserRegistration = (props) => {\n    console.log(props)\n    const [basicInfo, setBasicInfo]= useState(\n            {\n                active: true,\n                address: [],\n                contact: [],\n                contactPoint: [],\n                dateOfBirth: \"\",\n                deceased: false,\n                deceasedDateTime: null,\n                firstName: \"\",\n                genderId: \"\",\n                identifier: \"\",\n                otherName: \"\",\n                maritalStatusId: \"\",\n                educationId: \"\",\n                employmentStatusId:\"\",\n                dateOfRegistration: \"\",\n                isDateOfBirthEstimated: null,\n                age:\"\",\n                phoneNumber:\"\",\n                altPhonenumber:\"\",\n                dob:\"\",\n                countryId:\"\",\n                stateId:\"\",\n                district:\"\",\n                landmark:\"\",\n                sexId:\"\",\n                ninNumber:\"\"\n\n            }\n    )\n    const [relatives, setRelatives]= useState(\n                { \n                    address:\"\",\n                    phone:\"\",\n                    firstName: \"\",\n                    email: \"\",\n                    relationshipId: \"\",\n                    lastName: \"\",\n                    middleName: \"\"\n                }\n        )\n\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\n    const [contacts, setContacts] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const [ageDisabled, setAgeDisabled] = useState(true);\n    const [showRelative, setShowRelative] = useState(false);\n    const [editRelative, setEditRelative] = useState(null);\n    const [genders, setGenders]= useState([]);\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\n    const [educationOptions, setEducationOptions]= useState([]);\n    const [occupationOptions, setOccupationOptions]= useState([]);\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\n    const [countries, setCountries] = useState([]);\n    const [states, setStates] = useState([]);\n    const [provinces, setProvinces] = useState([]);\n    const [errors, setErrors] = useState({})\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n     //HIV INFORMATION\n     const [femaleStatus, setfemaleStatus]= useState(false)\n     //const [values, setValues] = useState([]);\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\n     careEntryPointOther:\"\"});\n     const [carePoints, setCarePoints] = useState([]);\n     const [sourceReferral, setSourceReferral] = useState([]);\n     const [hivStatus, setHivStatus] = useState([]);\n     const [enrollSetting, setEnrollSetting] = useState([]);\n     const [tbStatus, setTbStatus] = useState([]);\n     const [kP, setKP] = useState([]);\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\n     //set ro show the facility name field if is transfer in \n     const [transferIn, setTransferIn] = useState(false);\n     // display the OVC number if patient is enrolled into OVC \n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\n     //Input fields to hidden base on some conditions\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\n    \n    const locationState = location.state;\n    let patientId = null;\n    let patientObj = {};\n    patientId = locationState ? locationState.patientId : null;\n    patientObj = locationState ? locationState.patientObj : {}; \n    //status for hospital Number \n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\n    \n    useEffect(() => { \n        loadGenders();\n        loadMaritalStatus();\n        loadEducation();\n        loadOccupation();\n        loadRelationships();\n        loadTopLevelCountry();        \n        CareEntryPoint();\n        SourceReferral();\n        HivStatus();\n        EnrollmentSetting();\n        TBStatus();\n        KP();\n        PregnancyStatus();\n        GetCountry();\n        if(patientObj){\n            const contacts = patientObj.contact ? patientObj.contact : [];\n            //setContacts(contacts.contact);\n            let newConatctsInfo=[]\n            //Manipulate relatives contact  address:\"\",\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \n                const contactInfo = \n                    { \n                        address:x.address.line[0],\n                        phone:x.contactPoint.value,\n                        firstName:x.firstName,\n                        email: \"\",\n                        relationshipId: x.relationshipId,\n                        lastName: x.surname,\n                        middleName: x.otherName\n                    }\n                newConatctsInfo.push(contactInfo)\n            })\n            setContacts(newConatctsInfo);\n            const identifiers = patientObj.identifier;\n            const address = patientObj.address;\n            const contactPoint = patientObj.contactPoint;\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\n            basicInfo.dob=patientObj.dateOfBirth\n            basicInfo.firstName=patientObj.firstName\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\n            basicInfo.middleName=patientObj.otherName\n            basicInfo.lastName=patientObj.surname\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\n            basicInfo.sexId=patientObj.sex \n            basicInfo.educationId=patientObj.education.id\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\n            basicInfo.email=email && email.value ? email.value : \"\"\n            basicInfo.address=country && country.city ? country.city : \"\"\n            basicInfo.landmark=country.line[0]\n            basicInfo.countryId=country.countryId\n            setStateByCountryId(country.countryId); \n            getProvincesId(country.stateId)\n            basicInfo.stateId=country.stateId\n            basicInfo.district=country.district\n            setObjValues(patientObj.enrollment)\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\n            basicInfo.age=patientAge\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\n            basicInfo.ninNumber=patientObj.ninNumber\n\n        }\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\n            alert('Date of registration can not be earlier than date of birth')\n        }\n        \n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\n\n    const loadGenders = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setGenders(response.data);\n        } catch (e) {\n            \n        }\n    }, []);\n    const loadMaritalStatus = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setMaritalStatusOptions(response.data);\n        } catch (e) {\n        }\n    }, []);\n    const loadEducation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setEducationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadOccupation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setOccupationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadRelationships = useCallback(async () => {\n      try {\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n          setRelationshipOptions(response.data);\n      } catch (e) {\n      }\n    }, []);\n    const loadTopLevelCountry = useCallback(async () => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        settopLevelUnitCountryOptions(response.data);\n    }, []);\n    const loadOrganisationUnitsByParentId = async (parentId) => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        return response.data;\n    };\n\n    //Country List\n      const GetCountry =()=>{\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCountries(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    //Calculate Date of birth \n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now ;\n      };\n     //Get States from selected country\n     const getStates = e => {\n        const getCountryId =e.target.value;\n\n            setStateByCountryId(getCountryId); \n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\n    };\n    //Get list of State\n    function setStateByCountryId(getCountryId) {\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setStates(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });  \n    }\n    \n     //fetch province\n     const getProvinces = e => {\n            const stateId = e.target.value;\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\n            axios\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setProvinces(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });  \n    };\n    function getProvincesId(getStateId) {\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setProvinces(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });  \n    }\n    //Date of Birth and Age handle \n    const handleDobChange = (e) => {\n        if (e.target.value) {\n            const today = new Date();\n            const birthDate = new Date(e.target.value);\n            let age_now = today.getFullYear() - birthDate.getFullYear();\n            const m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n            basicInfo.age=age_now\n            //setBasicInfo({...basicInfo, age: age_now});        \n        } else {\n            setBasicInfo({...basicInfo, age:  \"\"});\n        }\n        setBasicInfo({...basicInfo, dob: e.target.value});\n        \n    }\n    const handleDateOfBirthChange = (e) => {\n        if (e.target.value == \"Actual\") {\n            setAgeDisabled(true);\n        } else if (e.target.value == \"Estimated\") {\n            setAgeDisabled(false);\n        }\n    }\n    const handleAgeChange = (e) => {\n        if (!ageDisabled && e.target.value) {\n            \n            const currentDate = new Date();\n            currentDate.setDate(15);\n            currentDate.setMonth(5);\n            const estDob = moment(currentDate.toISOString());\n            const dobNew = estDob.add((e.target.value * -1), 'years');\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\n\n        }\n        setBasicInfo({...basicInfo, age: e.target.value});\n    }\n    //End of Date of Birth and Age handling \n    //Handle Input Change for Basic Infor\n    const handleInputChangeBasic = e => {        \n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \n        //manupulate inpute fields base on gender/sex \n        if(e.target.name==='sexId' && e.target.value==='Female') {\n            setfemaleStatus(true)\n        }\n        if(e.target.name==='firstName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='lastName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='middleName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\n            async function getCharacters() {\n                const hosiptalNumber=e.target.value\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                if(response.data!==true){\n                    setHospitalNumStatus(false)\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\n                    setHospitalNumStatus2(true)\n                }else{\n                    setHospitalNumStatus(false)\n                    setHospitalNumStatus2(true)\n                }\n            }\n            getCharacters();\n            }  \n             \n    } \n    //Function to show relatives \n    const handleAddRelative = () => {\n        setShowRelative(true);\n    };\n    //Function to cancel the relatives form\n    const handleCancelSaveRelationship = () => {\n        setShowRelative(false);\n    }\n    const handleCancel =()=>{\n        history.push({ pathname: '/' });\n    }\n    /*****  Validation  Relationship Input*/\n    const validateRelatives = () => {\n        let temp = { ...errors }\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    //Function to add relatives \n    const handleSaveRelationship = (e) => {\n        if(validateRelatives()){\n            setContacts([...contacts, relatives])\n        }\n\n    }\n    const handleDeleteRelative = (index) => {\n        contacts.splice(index, 1);\n        setContacts([...contacts]);\n    };\n    const handleEditRelative = (relative, index) => {\n        setRelatives(relative)\n        setShowRelative(true);\n        contacts.splice(index, 1); \n    };     \n    const getRelationship = (relationshipId) => {\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\n        return relationship ? relationship.display : '';\n    };\n    const handleInputChangeRelatives = e => {        \n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \n    }\n    /*****  Validation  */\n    const validate = () => {\n        let temp = { ...errors }\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \n            //HIV FORM VALIDATION\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\n            \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); \n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\n        basicInfo.sexId=getSexId.id\n         if(validate()){\n            let newConatctsInfo=[]\n            //Manipulate relatives contact  address:\"\",\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\n                \n                const contactInfo = { \n                address: {\n                    line: [\n                        x.address\n                    ],\n                },\n                contactPoint: {\n                    type: \"phone\",\n                    value: x.phone\n                },\n                firstName: x.firstName,\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\n                relationshipId: x.relationshipId,\n                surname: x.lastName,\n                otherName: x.middleName\n            }\n            \n            newConatctsInfo.push(contactInfo)\n            })\n            try {\n                const patientForm = {\n                    active: true,\n                    address: [\n                        {\n                            \"city\": basicInfo.address,\n                            \"countryId\": basicInfo.countryId,\n                            \"district\": basicInfo.district,\n                            \"line\": [\n                                basicInfo.landmark\n                            ],\n                            \"organisationUnitId\": 0,\n                            \"postalCode\": \"\",\n                            \"stateId\": basicInfo.stateId\n                        }\n                    ],\n                    contact: newConatctsInfo,\n                    contactPoint: [],\n                    dateOfBirth: basicInfo.dob,\n                    deceased: false,\n                    deceasedDateTime: null,\n                    firstName: basicInfo.firstName,\n                    genderId: basicInfo.genderId,\n                    sexId:basicInfo.sexId,\n                    identifier: [\n                        {\n                            \"assignerId\": 1,\n                            \"type\": \"HospitalNumber\",\n                            \"value\": basicInfo.hospitalNumber\n                        }\n                    ],\n                    otherName: basicInfo.middleName,\n                    maritalStatusId: basicInfo.maritalStatusId,\n                    surname: basicInfo.lastName,\n                    educationId: basicInfo.educationId,\n                    employmentStatusId: basicInfo.employmentStatusId,\n                    dateOfRegistration: basicInfo.dateOfRegistration,\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\n                    ninNumber: basicInfo.ninNumber\n                };\n                const phone = {\n                    \"type\": \"phone\",\n                    \"value\": basicInfo.phoneNumber\n                };\n                if (basicInfo.email) {\n                    const email = {\n                        \"type\": \"email\",\n                        \"value\": basicInfo.email\n                    }\n                    patientForm.contactPoint.push(email);\n                }\n                if (basicInfo.altPhonenumber) {\n                    const altPhonenumber = {\n                        \"type\": \"altphone\",\n                        \"value\": basicInfo.altPhonenumber\n                    }\n                    patientForm.contactPoint.push(altPhonenumber);\n                }\n                patientForm.contactPoint.push(phone);\n                patientForm.id = patientId;\n                patientDTO.person=patientForm;\n                patientDTO.hivEnrollment=objValues;\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                toast.success(\"Patient Updated successful\");\n                history.push('/');\n            } catch (error) {                \n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage); \n                }\n            }\n        }\n\n    }\n    const alphabetOnly=(value)=>{\n        const result = value.replace(/[^a-z]/gi, '');\n        return result\n    }\n   \n    const CareEntryPoint =()=>{\n            axios\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data);\n                    setCarePoints(response.data);\n                })\n                .catch((error) => {\n                //console.log(error);\n                });            \n    }\n    //Get list of Source of Referral\n    const SourceReferral =()=>{\n            axios\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                //console.log(response.data);\n                setSourceReferral(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });        \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const HivStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setHivStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const TBStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setTbStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => {        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        if(e.target.name ===\"entryPointId\" ){\n            if(e.target.value===\"21\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }\n        if(e.target.name ===\"pregnancyStatusId\" ){\n            console.log(e.target.value)\n            if(e.target.value===\"72\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }                  \n    }    \n    \n    const checkPhoneNumber=(e, inputName)=>{\n        const limit = 10;\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \n    }\n    const checkPhoneNumberBasic=(e, inputName)=>{\n        const limit = 10;\n\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \n    } \n    //Handle CheckBox \n    const handleCheckBox =e =>{\n        if(e.target.checked){\n            setOvcEnrolled(true)\n        }else{\n            setOvcEnrolled(false)\n        }\n    }\n\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} hideProgressBar />\n            <Card className={classes.cardBottom}>\n                <CardContent>\n                <Link\n                    to={{\n                        pathname: \"/patient-history\",\n                        state: { patientObj: patientObj  }\n                    }}\n                >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-end ms-1\"\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                            startIcon={<TiArrowBack />}\n                        >\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\n                        </Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <div className=\"col-xl-12 col-lg-12\">\n                        <Form >\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className=\"basic-form\">\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dateOfRegistration\"\n                                                        id=\"dateOfRegistration\"\n                                                        value={basicInfo.dateOfRegistration}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            \n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"hospitalNumber\"\n                                                        id=\"hospitalNumber\"\n                                                        value={basicInfo.hospitalNumber}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                        disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.hospitalNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\n                                                    ) : \"\" }\n                                                    {errors.hospitalNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\n                                                    ) : \"\" }\n                                                    {hospitalNumStatus===true ? (\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\n                                                    ) : \"\" }\n                                                    {hospitalNumStatus2===true ? (\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\n                                                    ) :\"\"}\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">EMR Number* </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"emrNumber\"\n                                                        id=\"emrNumber\"\n                                                        disabled='true'\n                                                        value={Math.floor(Math.random() * 1094328)}\n                                                        //onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            \n                                        </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"firstName\">First Names *</Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"firstName\"\n                                                        id=\"firstName\"\n                                                        value={basicInfo.firstName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                    {errors.firstName !==\"\" ? (\n                                                    <span className={classes.error}>{errors.firstName}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Middle Name</Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"middleName\"\n                                                        id=\"middleName\"\n                                                        value={basicInfo.middleName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Last Name *</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"lastName\"\n                                                        id=\"lastName\"\n                                                        value={basicInfo.lastName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.lastName !==\"\" ? (\n                                                    <span className={classes.error}>{errors.lastName}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Sex *</Label>\n                                                    <select\n                                                            className=\"form-control\"\n                                                            name=\"sexId\"\n                                                            id=\"sexId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.sexId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                            \n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {genders.map((gender, index) => (\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        {errors.sexId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.sexId}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-2 col-md-2\">\n                                                <FormGroup>\n                                                    <Label>Date Of Birth</Label>\n                                                    <div className=\"radio\">\n                                                        <label>\n                                                            <input\n                                                                type=\"radio\"\n                                                                value=\"Actual\"\n                                                                name=\"dateOfBirth\"\n                                                                defaultChecked\n                                                                //disabled={locationState.actionType==='update'? false : true}\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            /> Actual\n                                                        </label>\n                                                    </div>\n                                                    <div className=\"radio\">\n                                                        <label>\n                                                            <input\n                                                                type=\"radio\"\n                                                                value=\"Estimated\"\n                                                                name=\"dateOfBirth\"\n                                                                //disabled={locationState.actionType==='update'? false : true}\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            /> Estimated\n                                                        </label>\n                                                    </div>\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-3\">\n                                                <FormGroup>\n                                                    <Label>Date</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dob\"\n                                                        id=\"dob\"\n                                                        max={today}\n                                                        value={basicInfo.dob}\n                                                        onChange={handleDobChange}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-3\">\n                                                <FormGroup>\n                                                    <Label>Age</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"number\"\n                                                        name=\"age\"\n                                                        id=\"age\"\n                                                        value={basicInfo.age}\n                                                        disabled={ageDisabled}\n                                                        onChange={handleAgeChange}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className={\"row\"}>\n{/*                                            {watchShowAge >=0 &&\n                                            <>*/}\n                                                <div className=\"form-group mb-3 col-md-3\">\n                                                    <FormGroup>\n                                                        <Label>Marital Status</Label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"maritalStatusId\"\n                                                            id=\"maritalStatusId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.maritalStatusId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        \n                                                    </FormGroup>\n                                                </div>\n\n                                                <div className=\"form-group  col-md-4\">\n                                                    <FormGroup>\n                                                        <Label>Employment Status *</Label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"employmentStatusId\"\n                                                            id=\"employmentStatusId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.employmentStatusId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {occupationOptions.map((occupationOption, index) => (\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        {errors.employmentStatusId !==\"\" ? (\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\n                                                        ) : \"\" }\n                                                    </FormGroup>\n                                                </div>\n\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Education Level *</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"educationId\"\n                                                        id=\"educationId\"\n                                                        onChange={handleInputChangeBasic}\n                                                        value={basicInfo.educationId}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                        <option value={\"\"}>Select</option>\n                                                        {educationOptions.map((educationOption, index) => (\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\n                                                        ))}\n                                                    </select>\n                                                    {errors.educationId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.educationId}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"nin\"\n                                                        id=\"nin\"\n                                                        value={basicInfo.ninNumber}\n                                                        //onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            \n                                        </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Phone Number *</Label>\n                                                <PhoneInput\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                    country={'ng'}\n                                                    placeholder=\"(234)7099999999\"\n                                                    maxLength={5}\n                                                    name=\"phoneNumber\"\n                                                    id=\"phoneNumber\"\n                                                    value={basicInfo.phoneNumber}\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    \n                                                />\n                                                {errors.phoneNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Alt. Phone Number</Label>\n                                                <PhoneInput\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                    country={'ng'}\n                                                    placeholder=\"(234)7099999999\"\n                                                    value={basicInfo.altPhonenumber}\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                />\n\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Email</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"email\"\n                                                    name=\"email\"\n                                                    id=\"email\"\n                                                    onChange={handleInputChangeBasic}\n                                                    value={basicInfo.email}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                />\n                                               \n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Country *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"countryId\"\n                                                    id=\"countryId\"\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    value={basicInfo.countryId}\n                                                    onChange={getStates}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value={\"\"}>Select</option>\n                                                    {countries.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.countryId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.countryId}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>State *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"stateId\"\n                                                    id=\"stateId\"\n                                                    value={basicInfo.stateId}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    onChange={getProvinces}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value=\"\">Select</option>\n                                                    {states.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.stateId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.stateId}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Province/District/LGA *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"district\"\n                                                    id=\"district\"\n                                                    value={basicInfo.district}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    onChange={handleInputChangeBasic}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value=\"\">Select</option>\n                                                    {provinces.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.district !==\"\" ? (\n                                                    <span className={classes.error}>{errors.district}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Street Address*</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"address\"\n                                                    id=\"address\"\n                                                    value={basicInfo.address}\n                                                    onChange={handleInputChangeBasic}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                   \n                                                />\n                                               {errors.address !==\"\" ? (\n                                                    <span className={classes.error}>{errors.address}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Landmark</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"landmark\"\n                                                    id=\"landmark\"\n                                                    value={basicInfo.landmark}\n                                                    onChange={handleInputChangeBasic}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    \n                                                />\n                                                \n                                            </FormGroup>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {\n                                            contacts && contacts.length > 0 && (\n                                                <div className=\"col-xl-12 col-lg-12\">\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\n                                                        <thead className=\"mb-3\">\n                                                        <tr>\n                                                            <th>Relationship Type</th>\n                                                            <th>Name</th>\n                                                            <th>Phone</th>\n                                                            <th>Address</th>\n                                                            <th>Actions</th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody className=\"mb-3\">\n                                                        {contacts.map((item, index) => {\n                                                            return (\n                                                                <tr key={item.index} className=\"mb-3\">\n                                                                    <td>{ \n                                                                        getRelationship(item.relationshipId) \n                                                                    }</td>\n                                                                    <td>{ \n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\n                                                                    }</td>\n                                                                    <td>{ \n                                                                            item.phone\n                                                                        }</td>\n                                                                    <td>{ \n                                                                            item.address\n                                                                    }</td>\n                                                                    <td>\n                                                                        <button type=\"button\"\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\n                                                                                onClick={() => handleEditRelative(item, index)}\n                                                                                >\n                                                                            <FontAwesomeIcon icon=\"edit\" />\n                                                                        </button>\n                                                                        &nbsp;&nbsp;\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\n                                                                            onClick={(e) => handleDeleteRelative(index)}\n                                                                            >\n                                                                            <FontAwesomeIcon icon=\"trash\" />\n                                                                        </button>\n                                                                    </td>\n                                                                </tr>\n                                                            );\n                                                        })}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            )\n                                        }\n                                        <div className=\"col-xl-12 col-lg-12\">\n                                            {\n                                                showRelative && (\n                                                    <div className=\"card\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\n                                                                        <select\n                                                                            className=\"form-control\"\n                                                                            name=\"relationshipId\"\n                                                                            id=\"relationshipId\"\n                                                                            value={relatives.relationshipId}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                            >\n                                                                            <option value={\"\"}>Select</option>\n                                                                            {relationshipOptions.map((relative, index) => (\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\n                                                                            ))}\n                                                                        </select>\n                                                                        {errors.relationshipId !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"firstName\"\n                                                                            value={relatives.firstName}\n                                                                            id=\"firstName\"\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                       {errors.firstName !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.firstName}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Middle Name</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"middleName\"\n                                                                            id=\"middleName\"\n                                                                            value={relatives.middleName}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Last Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"lastName\"\n                                                                            id=\"lastName\"\n                                                                            value={relatives.lastName}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                       {errors.lastName !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.lastName}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\n                                                                        <PhoneInput\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                                            country={'ng'}\n                                                                            placeholder=\"(234)7099999999\"\n                                                                            name=\"phone\"\n                                                                            value={relatives.phone}\n                                                                            id=\"phone\"\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\n                                                                        />\n                                                                    \n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactEmail\">Email</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"email\"\n                                                                            id=\"email\"\n                                                                            value={relatives.email}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactAddress\">Address</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"address\"\n                                                                            id=\"address\"\n                                                                            value={relatives.address}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"col-1\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"primary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleSaveRelationship}\n                                                                    >\n                                                                        Add\n                                                                    </MatButton>\n                                                                </div>\n\n                                                                <div className=\"col-1\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"secondary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleCancelSaveRelationship}\n                                                                    >\n                                                                        Cancel\n                                                                    </MatButton>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\"></div>\n                                        <MatButton\n                                            type=\"button\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<AddIcon />}\n                                            onClick={handleAddRelative}\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                                        >\n                                            Add a Relative/Next Of Kin\n                                        </MatButton>\n                                    {/* </div> */}\n                                </div>\n                            </div>\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                <div className=\"row\">\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"uniqueId\"\n                                        id=\"uniqueId\"\n                                        onChange={handleInputChange}\n                                        value={objValues.uniqueId}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled\n                                        \n                                    />\n                                    {errors.uniqueId !==\"\" ? (\n                                    <span className={classes.error}>{errors.uniqueId}</span>\n                                    ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"dateOfRegistration\"\n                                        id=\"dateOfRegistration\"\n                                        min={basicInfo.dateOfRegistration}\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        onChange={handleInputChange}\n                                        value={objValues.dateOfRegistration}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    />\n                                    {errors.dateOfRegistration !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\n                                    ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"entryPointId\"\n                                    id=\"entryPointId\"\n                                    onChange={handleInputChange}\n                                    value={objValues.entryPointId}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    //disabled={locationState.actionType==='update'? false : true}\n                                    \n                                >\n                                <option value=\"\"> </option>                  \n                                {carePoints.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                </Input>\n                                {errors.entryPointId !==\"\" ? (\n                                    <span className={classes.error}>{errors.entryPointId}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                                \n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                {transferIn===true ? \n                                    (\n                                        <FormGroup>\n                                        <Label >Facility Name</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"facilityName\"\n                                            id=\"facilityName\"\n                                            onChange={handleInputChange}\n                                            value={objValues.facilityName}  \n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            //disabled={locationState.actionType==='update'? false : true}\n                                        />\n                                        </FormGroup>\n                                    ):\"\"}\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label >HIV Status at Registration *</Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"statusAtRegistrationId\"\n                                    id=\"statusAtRegistrationId\"\n                                    onChange={handleInputChange}\n                                    value={objValues.statusAtRegistrationId}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    //disabled={locationState.actionType==='update'? false : true}\n                                    \n                                >\n                                <option value=\"\"> Select</option>                  \n                                {hivStatus.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                </Input>\n                                {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                                </div>\n\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Date of Confirmed HIV Test *</Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"dateConfirmedHiv\"\n                                        id=\"dateConfirmedHiv\"\n                                        min={basicInfo.dob}\n                                        max={objValues.dateOfRegistration}\n                                        onChange={handleInputChange}\n                                        value={objValues.dateConfirmedHiv}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    /> \n                                    {errors.dateConfirmedHiv !==\"\" ? (\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                        ) : \"\" } \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Source of Referral *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"sourceOfReferrerId\"\n                                        id=\"sourceOfReferrerId\"\n                                        value={objValues.sourceOfReferrerId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    >\n                                        <option value=\"\">Select </option>                 \n                                            {sourceReferral.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                    {errors.sourceOfReferrerId !==\"\" ? (\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Enrollment Setting *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"enrollmentSettingId\"\n                                        id=\"enrollmentSettingId\"\n                                        value={objValues.enrollmentSettingId}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        onChange={handleInputChange}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>\n\n                                            {enrollSetting.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                    {errors.enrollmentSettingId !==\"\" ? (\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                {(femaleStatus && basicInfo.age > 9) && (\n                                    <>\n                                   \n                                    <div className = \"form-group mb-3 col-md-6\" >\n                                        <FormGroup>\n                                        <Label> Pregnancy </Label>\n                                        <Input\n                                            type = \"select\"\n                                            name = \"pregnancyStatusId\"\n                                            id = \"pregnancyStatusId\"\n                                            value = {objValues.pregnancyStatusId}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            onChange = {handleInputChange}  \n                                            //disabled={locationState.actionType==='update'? false : true}                                      \n                                        >\n                                        < option value = \"\" >Select </option>\n                                        {pregnancyStatus.map((value) => (\n                                                    <option key={value.id} value={value.id}>\n                                                        {value.display}\n                                                    </option>\n                                                ))}\n                                        </Input>                                                                        \n                                    </FormGroup>  \n                                    </div>\n                                    {objValues.pregnancyStatusId!=='72' && (\n                                    <>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date of LMP </Label>                                    \n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateOfLpm\"\n                                            id=\"dateOfLpm\"\n                                            max={today}\n                                            onChange={handleInputChange}\n                                            value={objValues.dateOfLpm}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            //disabled={locationState.actionType==='update'? false : true}\n                                        />  \n                                            \n                                        </FormGroup>\n                                    </div>\n                                    </>\n                                    )}\n                                    </>\n                                )}\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >TB Status * </Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"tbStatusId\"\n                                        id=\"tbStatusId\"\n                                        value={objValues.tbStatusId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>\n                                            {tbStatus.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n\n                                    </Input>\n                                    {errors.tbStatusId !==\"\" ? (\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                {hideTargetGroup===\"false\" ? (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Target Group *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"targetGroupId\"\n                                        id=\"targetGroupId\"\n                                        value={objValues.targetGroupId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>                    \n                                                {kP.map((value) => (\n                                                    <option key={value.id} value={value.id}>\n                                                        {value.display}\n                                                    </option>\n                                                ))}\n                                    </Input>\n                                    {errors.targetGroupId !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                ) : \"\"}\n                                <div className=\"form-group mb-3 col-md-3\">\n                                    \n                                    <div className=\"form-check custom-checkbox ml-1 \">\n                                        <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        name=\"ovc_enrolled\"\n                                        id=\"ovc_enrolled\"                                        \n                                        onChange={handleCheckBox}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        />\n                                        <label\n                                        className=\"form-check-label\"\n                                        htmlFor=\"basic_checkbox_1\"\n                                        >\n                                        Enrolled into OVC?\n                                        </label>\n                                    </div>\n                                </div>\n                                {basicInfo.age <=14 && (\n                                <div className=\"form-group mb-3 col-md-3\">\n                                    \n                                    <div className=\"form-check custom-checkbox ml-1 \">\n                                        <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        name=\"ovc_enrolled\"\n                                        id=\"ovc_enrolled\"                                        \n                                        onChange={handleCheckBox}\n                                        />\n                                        <label\n                                        className=\"form-check-label\"\n                                        htmlFor=\"basic_checkbox_1\"\n                                        >\n                                        Enrolled into OVC?\n                                        </label>\n                                    </div>\n                                </div>\n                                )}\n                                {/* <div className=\"form-group mb-3 col-md-3\">\n                                    {ovcEnrolled===true ? \n                                        (\n                                        <FormGroup>\n                                        <Label >OVC Number</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"ovcNumber\"\n                                            id=\"ovcNumber\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.ovcNumber}\n                                            \n                                        />\n                                        </FormGroup>\n                                        )\n                                        :\n                                        \"\"\n                                    }\n                                </div> */}\n                                \n                                {ovcEnrolled===true && \n                                (\n                                <>        \n                                <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Household Unique Number</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"householdNumber\"\n                                            id=\"householdNumber\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.householdNumber}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Referred To OVC Partner</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"referredToOVCPartner\"\n                                            id=\"referredToOVCPartner\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.referredToOVCPartner}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date Referred To OVC Partner</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateReferredToOVCPartner\"\n                                            id=\"dateReferredToOVCPartner\"\n                                            min={basicInfo.dob}\n                                            max={objValues.dateOfRegistration }\n                                            onChange={handleInputChange}\n                                            value={objValues.dateReferredToOVCPartner}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            \n                                        /> \n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                            ) : \"\" }  */}\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Referred From OVC Partner</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"referredFromOVCPartner\"\n                                            id=\"referredFromOVCPartner\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.referredFromOVCPartner}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date Referred From OVC Partner</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateReferredFromOVCPartner\"\n                                            id=\"dateReferredFromOVCPartner\"\n                                            min={basicInfo.dob}\n                                            max={objValues.dateOfRegistration }\n                                            onChange={handleInputChange}\n                                            value={objValues.dateReferredFromOVCPartner}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            \n                                        /> \n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                            ) : \"\" }  */}\n                                        </FormGroup>\n                                    </div>\n                                </div>\n                                </>\n                                )}\n                            \n                            </div>\n                                </div>\n                            </div>\n                            {/* END OF HIV ENROLLEMENT FORM */}\n                            {saving ? <Spinner /> : \"\"}\n\n                            <br />\n\n                            {locationState.actionType ==='update' ?\n                            (\n                                <>\n                                    <MatButton\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        startIcon={<SaveIcon />}\n                                        onClick={handleSubmit}\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                                    >\n                                        {!saving ? (\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                                        ) : (\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                                        )}\n                                    </MatButton>\n            \n                                    <MatButton\n                                        variant=\"contained\"\n                                        className={classes.button}\n                                        startIcon={<CancelIcon />}\n                                        onClick={handleCancel}\n                                        style={{backgroundColor:'#992E62'}}\n                                    >\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\n                                    </MatButton>\n                            </>\n                            ):\"\"}\n                        </Form>\n                    </div>\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nexport default UserRegistration","import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './main/webapp/jsx/components/Home'\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/patient-dashboard\">\n            {/* This is the component to access patient dashboard */}\n            <PatientDetail />\n          </Route> \n          \n          <Route path=\"/update-patient\">\n            <UpdatePatientEnrollment />\n          </Route>\n\n          <Route path=\"/\">\n            {/* This is the entry point to the application */}\n            <Home />\n          </Route>       \n          \n        </Switch>\n      </div>\n </Router>\n  );\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let direction = 'ltr';\n\nexport const dezThemeSet = [\n\t{ /* Default */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_1\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"full\",\n\t\tdirection: direction\n\t},\n\t{ /* Demo Theme 1 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tprimary: \"color_5\",\n\t\theaderBg: \"color_5\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tdirection: direction\n\t},\n\t { /* Demo Theme 2 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_11\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_11\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_11\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 3 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"dark\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_3\",\n\t\tnavheaderBg: \"color_3\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 4 */\t\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t\t\n\t},\n\t{\n\t\t/* Demo Theme 5 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"horizontal\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_9\",\n\t\tsidebarStyle: \"modern\",\n\t\tsidebarPosition: \"static\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_9\",\n\t\tdirection: direction\n\t},\n\t/* {\n\t\t//Demo Theme 6\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_3\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"mini\",\n\t\tsidebarBg: \"color_10\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 7 \n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"compact\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_6\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 8 *\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"icon-hover\",\n\t\tsidebarBg: \"color_15\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t} */\n];\n\t","import React, { createContext, useEffect, useState } from \"react\";\nimport {dezThemeSet} from './ThemeDemo';\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\n\tconst [iconHover, setIconHover] = useState(false);\n\tconst [menuToggle, setMenuToggle] = useState(false);\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\n    const body = document.querySelector(\"body\");\n    const [windowWidth, setWindowWidth] = useState(0);\n    const [windowHeight, setWindowHeight] = useState(0);\n\n  // layout\n  const layoutOption = [\n    { value: \"vertical\", label: \"Vertical\" },\n    { value: \"horizontal\", label: \"Horizontal\" },\n  ];\n  const sideBarOption = [\n    { value: \"compact\", label: \"Compact\" },\n    { value: \"full\", label: \"Full\" },\n    { value: \"mini\", label: \"Mini\" },\n    { value: \"modern\", label: \"Modern\" },\n    { value: \"overlay\", label: \"Overlay\" },\n    { value: \"icon-hover\", label: \"Icon-hover\" },\n  ];\n  const backgroundOption = [\n    { value: \"light\", label: \"Light\" },\n    { value: \"dark\", label: \"Dark\" },\n  ];\n  const sidebarpositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const headerPositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const containerPosition = [\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\n    { value: \"boxed\", label: \"Boxed\" },\n    { value: \"wide\", label: \"Wide\" },\n  ];\n  const colors = [\n    \"color_1\",\n    \"color_2\",\n    \"color_3\",\n    \"color_4\",\n    \"color_5\",\n    \"color_6\",\n    \"color_7\",\n    \"color_8\",\n    \"color_9\",\n    \"color_10\",\n    \"color_11\",\n    \"color_12\",\n    \"color_13\",\n    \"color_14\",\n    \"color_15\",\n  ];\n  const directionPosition = [\n    { value: \"ltr\", label: \"LTR\" },\n    { value: \"rtl\", label: \"RTL\" },\n  ];\n  const fontFamily = [\n    { value: \"poppins\", label: \"Poppins\" },\n    { value: \"roboto\", label: \"Roboto\" },\n    { value: \"cairo\", label: \"Cairo\" },\n    { value: \"opensans\", label: \"Open Sans\" },\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\n  ];\n  const changePrimaryColor = (name) => {\n\tsetPrimaryColor(name);\n    body.setAttribute(\"data-primary\", name);\n  };\n  const changeNavigationHader = (name) => {\n    setNavigationHader(name);\n    body.setAttribute(\"data-nav-headerbg\", name);\n  };\n  const chnageHaderColor = (name) => {\n    setHaderColor(name);\n    body.setAttribute(\"data-headerbg\", name);\n  };\n  const chnageSidebarColor = (name) => {\n    setSidebarColor(name);\n    body.setAttribute(\"data-sibebarbg\", name);\n  };\n  const changeSideBarPostion = (name) => {\n    setSidebarposition(name);\n    body.setAttribute(\"data-sidebar-position\", name.value);\n  };\n  const changeDirectionLayout = (name) => {\n    setDirection(name);\n    body.setAttribute(\"direction\", name.value);\n    let html = document.querySelector(\"html\");\n    html.setAttribute(\"dir\", name.value);\n    html.className = name.value;\n  };\n  const changeSideBarLayout = (name) => {\n    if (name.value === \"horizontal\") {\n      if (sideBarStyle.value === \"overlay\") {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\n        body.setAttribute(\"data-sidebar-style\", \"full\");\n      } else {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n      }\n    } else {\n      setSidebarLayout(name);\n      body.setAttribute(\"data-layout\", name.value);\n    }\n  };\n  const changeSideBarStyle = (name) => {\n    if (sidebarLayout.value === \"horizontal\") {\n      if (name.value === \"overlay\") {\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\n      } else {\n        setSideBarStyle(name);\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n        body.setAttribute(\"data-sidebar-style\", name.value);\n      }\n    } else {\n      setSideBarStyle(name);\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n      body.setAttribute(\"data-sidebar-style\", name.value);\n    }\n  };\n\n  const changeHeaderPostion = (name) => {\n    setHeaderposition(name);\n    body.setAttribute(\"data-header-position\", name.value);\n  };\n\n  const openMenuToggle = () => {\n    sideBarStyle.value === \"overly\"\n      ? setMenuToggle(true)\n      : setMenuToggle(false);\n  };\n\n  const changeBackground = (name) => {\n    body.setAttribute(\"data-theme-version\", name.value);\n    setBackground(name);\n  };\n\n  const changeContainerPosition = (name) => {\n    setcontainerPosition_(name);\n    body.setAttribute(\"data-container\", name.value);\n    name.value === \"boxed\" &&\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\n  };\n  \n  const setDemoTheme = (theme,direction) => {\n\n\tvar setAttr = {};\t\n\t\n\t\n\tvar themeSettings = dezThemeSet[theme];\t\n\t\t\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\n \n\tsetAttr.value = themeSettings.version;\n\tchangeBackground(setAttr);\n\t\n\tsetAttr.value = themeSettings.layout;\n\tchangeSideBarLayout(setAttr);\n\t\n\t//setAttr.value = themeSettings.primary;\n\tchangePrimaryColor(themeSettings.primary);\n\t\n//setAttr.value = themeSettings.navheaderBg;\n\tchangeNavigationHader(themeSettings.navheaderBg);\n\t\n//setAttr.value = themeSettings.headerBg;\n\tchnageHaderColor(themeSettings.headerBg);\n\t\n\tsetAttr.value = themeSettings.sidebarStyle;\n\tchangeSideBarStyle(setAttr);\n\t\n\t//setAttr.value = themeSettings.sidebarBg;\n\tchnageSidebarColor(themeSettings.sidebarBg);\n\t\n\tsetAttr.value = themeSettings.sidebarPosition;\n\tchangeSideBarPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.headerPosition;\n\tchangeHeaderPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.containerLayout;\n\tchangeContainerPosition(setAttr);\n\t\n\t//setAttr.value = themeSettings.direction;\n\tsetAttr.value = direction;\n\tchangeDirectionLayout(setAttr); \n\t\n\t};\n\n  useEffect(() => {\n\tconst body = document.querySelector(\"body\");\n    body.setAttribute(\"data-typography\", \"poppins\");\n    body.setAttribute(\"data-theme-version\", \"light\");\n    body.setAttribute(\"data-layout\", \"vertical\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\n    body.setAttribute(\"data-headerbg\", \"color_1\");\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\n    body.setAttribute(\"data-header-position\", \"fixed\");\n    body.setAttribute(\"data-container\", \"wide\");\n    body.setAttribute(\"direction\", \"ltr\");\n\t\tlet resizeWindow = () => {\n\t\t\tsetWindowWidth(window.innerWidth);\n\t\t\tsetWindowHeight(window.innerHeight);\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\n\t\t\t: window.innerWidth <= 768\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\n\t\t};\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        body,\n        sideBarOption,\n        layoutOption,\n        backgroundOption,\n        sidebarposition,\n        headerPositions,\n        containerPosition,\n        directionPosition,\n        fontFamily,\n\t\tprimaryColor,\n        navigationHader,\n\t\twindowWidth,\n\t\twindowHeight,\n        changePrimaryColor,\n        changeNavigationHader,\n        changeSideBarStyle,\n        sideBarStyle,\n        changeSideBarPostion,\n        sidebarpositions,\n        changeHeaderPostion,\n        headerposition,\n        changeSideBarLayout,\n        sidebarLayout,\n        changeDirectionLayout,\n        changeContainerPosition,\n        direction,\n        colors,\n        haderColor,\n        chnageHaderColor,\n        chnageSidebarColor,\n        sidebarColor,\n        iconHover,\n        menuToggle,\n        openMenuToggle,\n        changeBackground,\n        background,\n        containerPosition_,\n\t\tsetDemoTheme,\n\t}}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}