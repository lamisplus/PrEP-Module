{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","_useState","useState","_useState2","_slicedToArray","setPatientList","_useState3","_useState4","setLoading","_useState5","_useState6","showPPI","setShowPPI","_patients","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","concat","baseUrl","headers","then","response","data","catch","error","stop","apply","arguments","useEffect","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","patientDetail","setpatientObj","ExpansionPanel","ExpansionPanelSummary","md","_Fragment","root2","personResponseDto","ButtonMui","startIcon","TiArrowBack","textTransform","identifier","find","obj","getHospitalNumber","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sex","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Typography","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","activeContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","_React$useState","React","_React$useState2","open","setOpen","_useState7","_useState8","record","setRecord","toggle","_useState9","_useState10","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","visitCount","encounterDate","nextAppointment","class","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","loading","PatientHistory","isLoading","position","item","viewable","Icon","editable","LoadModal","useStyles","makeStyles","card","margin","display","flexDirection","form","submit","cardBottom","Select","button","flexGrow","input","ClinicVisit","errors","setErrors","disabledField","setSisabledField","patientDto","setPatientDto","temp","adherenceLevel","setAdherenceLevel","_useState11","_useState12","sti","setSti","_useState13","_useState14","setPrepStatus","_useState15","_useState16","prepSideEffect","setPrepSideEffect","_useState17","_useState18","setHtsResult","_useState19","_useState20","prepRegimen","setprepRegimen","_useState21","_useState22","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","_useState23","_useState24","setLabTestOptions","_useState25","_useState26","urineTestResult","setUrineTestResult","_useState27","_useState28","otherTestResult","setOtherTestResult","_useState29","_useState30","sphylisTestResult","setSphylisTestResult","_useState31","_useState32","hepaTestResult","setHepaTestResult","_useState33","_useState34","familyPlanningMethod","setFamilyPlanningMethod","_useState35","_useState36","pregnant","setpregnant","_useState37","_useState38","prepEntryPoint","setPrepEntryPoints","_useState39","_useState40","prepType","setPrepType","_useState41","_useState42","populationType","setPopulationType","_useState43","_useState44","visitType","setVisitType","_useState45","_useState46","selectedPopulationType","setSelectedPopulationType","_useState47","_useState48","latestFromEligibility","setLatestFromEligibility","testsOptions","_useState49","_useState50","hivTestValue","setHivTestValue","_useState51","_useState52","hivTestResultDate","setHivTestResultDate","handleInputChange","_useState53","diastolic","systolic","pulse","temperature","respiratoryRate","_useState54","vitalClinicalSupport","setVitalClinicalSupport","_useState55","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","extra","hepatitis","notedSideEffects","otherTestsDone","prepEnrollmentUuid","referred","regimenId","riskReductionServices","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","hivTestResult","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","_useState56","objValues","setObjValues","_useState57","urinalysisTest","testDate","_useState58","setUrinalysisTest","_useState59","syphilisTest","others","_useState60","setSyphilisTest","_useState61","hepatitisTest","_useState62","setHepatitisTest","_useState63","_useState64","otherTest","setOtherTest","_AdherenceLevel","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_STATUS","HTS_RESULT","LAST_HIV_TEST_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","PrepRegimen","TestGroup","PREP_URINALYSIS_RESULT","PREP_OTHER_TEST","HEPATITIS_SCREENING_RESULT","SYPHILIS_RESULT","PREGANACY_STATUS","PREP_ENTRY_POINT","PREP_TYPE","POPULATION_TYPE","VISIT_TYPE","FAMILY_PLANNING_METHOD","GetPatientVisit","GetLatestFromEligibility","labTests","x2","push","label","labTestName","testGroupId","testGroupName","groupName","sampleType","_ref2","_callee2","_context2","_toConsumableArray","localId","otherTestName","_x","lastHivTest","undefined","test1","_populationType$find","_visitType$find","_pregnant$find","pregnancyStatus","autoPopulatePopulationType","code","_ref3","_callee4","_context4","_ref4","_callee3","latestEligibility","_context3","sort","a","b","visitDate","isBefore","length","_x2","autoPopulate","_ref5","_callee5","_context5","_callee6","_context6","_defineProperty","durationInDays","Number","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","emptyObjValues","handleSubmit","preventDefault","isFemale","Object","values","every","uuid","put","POSITION","BOTTOM_CENTER","activeTab","post","toLowerCase","Grid","Column","Segment","ribbon","FormGroup","FormLabelName","Input","min","dateEnrolled","max","InputGroup","onKeyUp","InputGroupText","addonType","for","_objValues$otherTests","defaultChecked","eachTest","component","MatButton","AddIcon","SaveIcon","ClinicVisitPage","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","liverFunctionTestResults","dateLiverFunctionTestResults","urinalysisTestResult","setUrinalysisTestResult","liverFunctionTestResult","setLiverFunctionTestResult","LiverFunctionTestResult","HistoryOfDrugToDrugInteraction","GetPatientCommercement","_ref","validate","PatientObject","CardBody","bodyWeight","breastFeeding","Spinner","demo","background","default","inline","PrEPEligibiltyScreeningForm","setDisabledField","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonStooped","setReasonStooped","setCauseOfDeath","PREP_STATUS_STOPPED_REASON","CAUSE_DEATH","GetPatientInterruption","linkToArt","required","reasonStoppedOther","dateLinkToArt","CancelIcon","BasicInfo","_servicesReceivedByCl","patientID","counselingType","setCounselingType","reasonForDecline","setReasonForDecline","setPregnancyStatus","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","score","CounselingType","VisitType","ReasonForDecline","PopulationType","PregnancyStatus","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","setAssessmentForPepIndication","assessmentForPepIndication","setAssessmentForAcuteHivInfection","assessmentForAcuteHivInfection","setServicesReceivedByClient","servicesReceivedByClient","setAssessmentForPrepEligibility","assessmentForPrepEligibility","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","handleInputChangeRiskAssessment","riskCount","filter","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","drugHistory","handleInputChangeDrugHistory","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","handleInputChangeAssessmentForPepIndication","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","handleInputChangeAssessmentForAcuteHivInfection","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","handleInputChangeAssessmentForPrepEligibility","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","handleInputChangeServicesReceivedByClient","getPrepEligibilityScore","is30AndAbove","getIndicationForPepResult","each","getAcuteHivResult","dateHivPositive","dateOfRegistration","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","placeholder","fluid","multiple","selection","one","PrEPVisit","useHistory","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","Authorization","_response$data","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","inputName","slice","checkPhoneNumberBasic","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","_React$useState3","_React$useState4","showCapture","setshowCapture","_React$useState5","_React$useState6","setTryAgain","_React$useState7","_React$useState8","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","sent","personCapturedFingers","biometricItems","_biometricItems","_","uniq","extend","captured","includes","console","log","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","_PatientObject","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","patientDTO","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","setCarePoints","sourceReferral","setSourceReferral","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","transferIn","ovcEnrolled","setOvcEnrolled","hideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","_useState65","_useState66","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","GetCountry","newConatctsInfo","contactInfo","identifiers","altphone","maritalStatus","employmentStatus","education","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","t0","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","_ref8","_callee8","hosiptalNumber","_context8","getRelationship","relationship","handleInputChangeRelatives","dateOfRegistration1","_ref9","_callee9","getSexId","patientForm","_context9","fullName","person","hivEnrollment","autoClose","hideProgressBar","Form","Math","floor","random","currentDate","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","relative","splice","handleEditRelative","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.48968f2d.chunk.js","sourcesContent":["export const token = new URLSearchParams(window.location.search).get(\"jwt\");\nexport const url = \"/api/v1/\";\n// export const url = \"http://localhost:8789/api/v1/\";\n// export const token =\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzEwMTcxODc4fQ.74IkgyBAtV4uwCL2WiPQBreLRw7IzTiBgrJ3Ox72Th0zpY9r2P33kIZae8TgRS9KoeMswitkV6n2dBqq5mhkAQ\"","import React, { useEffect, useState } from 'react'\nimport axios from \"axios\";\nimport MaterialTable, { MTableToolbar }  from 'material-table';\nimport { token as token, url as baseUrl } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Link } from 'react-router-dom'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { MdDashboard } from \"react-icons/md\";\nimport \"@reach/menu-button/styles.css\";\nimport { Label } from 'semantic-ui-react'\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\n\nconst Patients = (props) => {    \n    const [patientList, setPatientList] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [showPPI, setShowPPI] = useState(true)\n    useEffect(() => {\n        patients()\n      }, []);\n        ///GET LIST OF Patients\n        async function patients() {\n            setLoading(true)\n            axios\n                .get(`${baseUrl}prep/persons`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    setLoading(false)\n                    setPatientList(response.data);\n                   \n                })\n                .catch((error) => {  \n                    setLoading(false)  \n                });        \n        }\n    \n    const handleCheckBox =e =>{\n        if(e.target.checked){\n            setShowPPI(false)\n        }else{\n            setShowPPI(true)\n        }\n    }\n\n  return (\n    <div>\n        <MaterialTable\n        icons={tableIcons}\n            title=\"Find Patient \"\n            columns={[\n            // { title: \" ID\", field: \"Id\" },\n            {\n                title: \"Patient Name\",\n                field: \"name\",\n                hidden:showPPI\n            },\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\n            { title: \"Sex\", field: \"gender\", filtering: false },\n            { title: \"Age\", field: \"age\", filtering: false },\n            \n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\n            { title: \"PrEP Status\", field: \"status\", filtering: false },\n            { title: \"Actions\", field: \"actions\", filtering: false }, \n            ]}\n            //isLoading={loading}\n            data={query =>\n                new Promise((resolve, reject) =>\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\n                        .then(response => response)\n                        .then(result => {\n                            \n                            resolve({\n                                data: result.data.records.map((row) => ({\n                                    name:row.firstName + \" \" + row.surname,\n                                    hospital_number: row.hospitalNumber,\n                                    clientCode: row.uniqueId,\n                                    //phone_number:  row.phone,\n                                    gender:row && row.gender ? row.gender : \"\",\n                                    age: row.age,\n                                    \n                                    status: (<Label color=\"blue\" size=\"mini\">{row.prepStatus}</Label>),\n                                \n                                    actions:\n                                        <div>\n                                            <Link\n                                                to={{\n                                                    pathname: \"/patient-dashboard\",\n                                                    state: {patientObj: row}\n                                                }}\n                                                \n                                            >\n                                                <ButtonGroup variant=\"contained\" \n                                                    aria-label=\"split button\"\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\n                                                    size=\"large\"\n                                                >\n                                                <Button\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                aria-label=\"select merge strategy\"\n                                                aria-haspopup=\"menu\"\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\n                                                >\n                                                    <MdDashboard />\n                                                </Button>\n                                                <Button \n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\n                                                >\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\n                                                </Button>\n                                                \n                                                </ButtonGroup>\n                                            </Link> \n                                        </div>\n                                    })),\n                                page: query.page,\n                                totalCount: result.data.totalRecords,\n                                \n                            })\n                        })\n                        \n            )}\n            options={{\n                headerStyle: {\n                    backgroundColor: \"#014d88\",\n                    color: \"#fff\",\n                },\n                searchFieldStyle: {\n                    width : '200%',\n                    margingLeft: '250px',\n                },\n                filtering: false,\n                exportButton: true,\n                searchFieldAlignment: 'left',\n                pageSizeOptions:[10,20,100],\n                pageSize:10,\n                debounceInterval: 400\n            }}\n            components={{\n                Toolbar: props => (\n                <div >\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\n                        <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"                       \n                        name=\"showPP!\"\n                        id=\"showPP\"\n                        value=\"showPP\"\n                        checked={showPPI===true? false : true}\n                        onChange={handleCheckBox}\n                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                        />\n                        <label\n                        className=\"form-check-label\"\n                        htmlFor=\"basic_checkbox_1\"\n                        >\n                        <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\n                        </label>\n                    </div>\n                    <MTableToolbar {...props} />\n                </div>\n                ),\n            }}\n    />\n       \n    </div>\n  );\n}\n\nexport default Patients;\n\n\n","import React, {useState, Fragment } from \"react\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport PatientList from './Patient/PatientList'\n\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst Home = () => {\n    const [key, setKey] = useState('home');\n\n\n  return (\n    <Fragment>  \n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\n\t\t\t</ol>\n\t\t  </div>\n      {/* <Link to={\"register-patient\"}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className=\" float-end mb-10\"\n                startIcon={<FaUserPlus size=\"10\"/>}\n                style={{backgroundColor:'#014d88'}}\n            >\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\n            </Button>\n        </Link> */}\n        <br/><br/>\n\n      <Row>       \n        <Col xl={12}>\n          <Card style={divStyle}>            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                >\n                  \n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \n                    <PatientList />\n                  </Tab>\n                  {/* <Tab eventKey=\"prep-patient\" title=\"PrEP Patients\">                   \n                    <PrepPatients />\n                  </Tab>                     */}\n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Link } from 'react-router-dom'\nimport ButtonMui from \"@material-ui/core/Button\";\nimport { TiArrowBack } from 'react-icons/ti'\n//import Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\n//import { Button } from 'semantic-ui-react';\nimport {Label,} from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Col, Row } from \"reactstrap\";\nimport Moment from \"moment\";\nimport momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\n//import axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\nimport Typography from '@material-ui/core/Typography';\n// import CaptureBiometric from './CaptureBiometric';\n\n//Dtate Picker package\nMoment.locale(\"en\");\nmomentLocalizer();\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nfunction PatientCard(props) {\n  const { classes } = props;\n  //const patientObj = props.patientObj ? props.patientObj : {}\n  const [patientObj, setpatientObj] = useState(props.patientDetail)\n\n  useEffect(() => {\n    setpatientObj(props.patientDetail);\n  }, [props.patientDetail]);\n    const calculate_age = dob => {\n      var today = new Date();\n      var dateParts = dob.split(\"-\");\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n      var age_now = today.getFullYear() - birthDate.getFullYear();\n      var m = today.getMonth() - birthDate.getMonth();\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                  age_now--;\n              }\n          if (age_now === 0) {\n                  return m + \" month(s)\";\n              }\n              return age_now + \" year(s)\";\n    };\n    //console.log(patientObj)\n    const getHospitalNumber = (identifier) => {     \n      const identifiers = identifier;\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');       \n      return hospitalNumber ? hospitalNumber.value : '';\n    };\n    const getPhoneNumber = (identifier) => {     \n      const identifiers = identifier;\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type === 'phone');       \n      return phoneNumber ? phoneNumber.value : '';\n    };\n    const getAddress = (identifier) => {     \n      const identifiers = identifier;\n      const address = identifiers.address.find(obj => obj.city); \n      const houseAddress=address && address.line[0]!==null ? address.line[0] :\"\"      \n      const landMark=address && address.city && address.city!==null ? address.city :\"\"    \n      return address ? houseAddress + \" \" + landMark : '';\n    };\n\n  \n  return (\n    <div className={classes.root}>\n       <ExpansionPanel >\n                <ExpansionPanelSummary >                \n                <Row>                \n                    <Col md={12}>\n                    {patientObj && patientObj!==null ? (<>\n                    <Row className={\"mt-1\"}>\n                    <Col md={12} className={classes.root2}>\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\n                        {patientObj.personResponseDto.firstName + \" \" + patientObj.personResponseDto.surname }\n                        </b>\n                        <Link to={\"/\"} >\n                        <ButtonMui\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-end ms-2 mr-2 mt-2\"\n                            //startIcon={<FaUserPlus size=\"10\"/>}\n                            startIcon={<TiArrowBack  />}\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\n\n                        >\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\n                        </ButtonMui>\n                      </Link>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.personResponseDto.identifier) }</b>\n                    </span>\n                    </Col>\n\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto.dateOfBirth }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\n                    </span>\n                    </Col>\n                    <Col md={4}>\n                    <span>\n                        {\" \"}\n                        Gender :{\" \"}\n                        <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto && patientObj.personResponseDto.sex!==null ?  patientObj.personResponseDto.sex : '' }</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.personResponseDto.contactPoint)}</b>\n                    </span>\n                    </Col>\n                    <Col md={4} className={classes.root2}>\n                    <span>\n                        {\" \"}\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.personResponseDto.address)} </b>\n                    </span>\n                    </Col>\n                    {patientObj.prepStatus!==null && (\n                    <Col md={12}>\n                       <div >\n                            <Typography variant=\"caption\">\n                                <Label color={ \"teal\"} size={\"mini\"}>\n                                   STATUS : {patientObj && patientObj.prepStatus}    \n                                </Label>\n                              \n                            </Typography>\n                       </div>                 \n                    </Col> \n                    )}\n                    </Row>\n                    </>)\n                    :(\n                      <>\n                      <p>Loading please wait..</p>\n                      </>\n                    )\n                  }\n                    </Col>\n                </Row>\n                </ExpansionPanelSummary>\n                <Divider />\n        </ExpansionPanel>\n    \n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React, { useState, useEffect } from \"react\";\nimport { Menu, Popup } from \"semantic-ui-react\";\n\n\n\n\nfunction SubMenu(props) {\n\n    const patientObj = props.patientObj \n    useEffect(() => {\n        //Observation();\n    }, [props.patientObj]);\n\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\n    }\n    const loadPrEPRegistrationForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\n    }\n    const loadPrEPCommencementForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\n    }\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\n    }\n\n    const onClickConsultation = (row) =>{        \n        props.setActiveContent({...props.activeContent, route:'consultation'})\n    }\n    const onClickHome = (row) =>{        \n        props.setActiveContent({...props.activeContent, route:'recent-history'})\n    }\n    const loadPatientHistory = ()=>{\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\n    }\n\n    return (\n         <div>\n\n                <Menu size=\"large\" color={\"black\"} inverted >\n                { patientObj.createdBy!==\"ETL\"  ? //The menu will show if the patient is not migrated \n                (<>\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\n                                  \n                { patientObj.eligibilityCount<=0 || patientObj.eligibilityCount===null ?\n                (<>\n                    <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>\n                   \n                </>)\n                :\n                (<>\n                {/* check if the patient has done prep commencement */}\n                    {patientObj.prepCount==='0' || patientObj.commencementCount===null ? \n                    (<>\n                        {patientObj.prepCount==='0' && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                        \n                    </>) \n                    : (<>\n                       \n                        <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} > PrEP Eligibility Screening </Menu.Item>\n                        {(patientObj.prepCount===null || patientObj.prepCount<0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\n                    </>)\n                    }\n                    \n                </>)}\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>   \n                </>)\n                :\n\n                (<>\n                {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && patientObj.prepCount==='0' && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (patientObj.commencementCount===null || patientObj.commencementCount<=0) &&(<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>     \n                </>) }                \n                </Menu>\n                   \n        </div>\n    );\n}\n\n\n\nexport default SubMenu;\n","import React, { Fragment, useState, useEffect } from \"react\";\n// BS\nimport { Dropdown,} from \"react-bootstrap\";\n/// Scroll\nimport { makeStyles } from '@material-ui/core/styles';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n//import { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"../../../api\";\n//import { Alert } from \"react-bootstrap\";\nimport {  Card,Accordion } from \"react-bootstrap\";\nimport {  Modal } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport {Button } from 'semantic-ui-react'\n\nconst RecentHistory = (props) => {\n  //console.log(props.patientObj)\n  const [recentActivities, setRecentActivities] = useState([])\n  const [summary, setSummary] = useState(null)\n  const [saving, setSaving] = useState(false)\n  const [open, setOpen] = React.useState(false)\n  const [record, setRecord] = useState(null)\n  const toggle = () => setOpen(!open);\n  const [\n    activeAccordionHeaderShadow,\n    setActiveAccordionHeaderShadow,\n  ] = useState(0);\n\n  useEffect(() => {\n    Summary()\n    RecentActivities();\n  }, [props.patientObj.personId]);\n\n  const RecentActivities =()=>{\n    axios\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\n       )\n       .then((response) => {\n          setRecentActivities(response.data)\n       })\n       .catch((error) => {\n       //console.log(error);\n       });\n   \n  }\n  const Summary =()=>{\n    axios\n       .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\n       )\n       .then((response) => {\n          setSummary(response.data[0])\n       })\n       .catch((error) => {\n       //console.log(error);\n       });\n   \n  }\n\n\n  const ActivityName =(name)=> {\n      if(name==='HIV Enrollment'){\n        return \"HE\"\n      }else if(name==='Prep Clinic'){\n        return \"PC\"\n      }else if(name==='Prep Enrollment'){\n        return \"PE\"\n      }else if(name==='Prep Eligibility'){\n        return \"PE\"\n      }else if(name==='ART Commencement'){\n        return \"AC\"\n      }else {\n        return \"RA\"\n      }\n  }\n\n    const LoadViewPage =(row,action)=>{\n          \n      if(row.path==='prep-eligibility'){        \n          props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-enrollment'){\n          props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-clinic'){//prep-commencement \n          props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-commencement'){\n          props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\n\n      }else if(row.path==='prep-interruption'){\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\n\n      }else{\n\n      }\n      \n  }\n  const LoadModal =(row)=>{\n    toggle()\n    setRecord(row)\n  }\nconst LoadDeletePage =(row)=>{\n  if(row.path==='prep-eligibility'){ \n      setSaving(true)       \n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-eligibility/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });  \n  }else if(row.path==='prep-clinic'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-enrollment'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-commencement'){\n      setSaving(true)\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n      axios\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n      )\n      .then((response) => {\n          setSaving(false)\n          toast.success(\"Record Deleted Successfully\");\n          RecentActivities()\n          toggle()\n      })\n      .catch((error) => {\n          setSaving(false)\n          if(error.response && error.response.data){\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n              toast.error(errorMessage);\n            }\n            else{\n              toast.error(\"Something went wrong. Please try again...\");\n            }\n      });\n\n  }else if(row.path==='prep-interruption'){\n    setSaving(true)\n    //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n    axios\n    .delete(`${baseUrl}prep-interruption/${row.id}`,\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\n    )\n    .then((response) => {\n        setSaving(false)\n        toast.success(\"Record Deleted Successfully\");\n        RecentActivities()\n        toggle()\n    })\n    .catch((error) => {\n        setSaving(false)\n        if(error.response && error.response.data){\n            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n            toast.error(errorMessage);\n          }\n          else{\n            toast.error(\"Something went wrong. Please try again...\");\n          }\n    });\n\n}else{\n\n  }\n  \n}\n  // const redirectLink=()=>{\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\n  // }\n  //const index= 1\n\n  return (\n    <Fragment>\n      {/* <Ext /> */}\n     \n      <div className=\"row\">\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\n          <div className=\"card\">\n            <div className=\"card-header  border-0 pb-0\" >\n              <h4 className=\"card-title\"> Recent Activities</h4>\n            </div>\n            <div className=\"card-body\">\n              <PerfectScrollbar\n                style={{ height: \"370px\" }}\n                id=\"DZ_W_Todo1\"\n                className=\"widget-media dz-scroll ps ps--active-y\"\n              >\n                <Accordion\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\n                    defaultActiveKey=\"0\"\n                  >\n                    <>\n                    {recentActivities.map((data, i)=>\n                    <div className=\"accordion-item\" key={i}>\n                      <Accordion.Toggle\n                          as={Card.Text}\n                          eventKey={`${i}`}\n                          className={`accordion-header ${\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\n                          } accordion-header-info`}\n                          onClick={() =>\n                            setActiveAccordionHeaderShadow(\n                              activeAccordionHeaderShadow === 1 ? -1 : i\n                            )\n                          }\n                      >\n                      <span className=\"accordion-header-icon\"></span>\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\n                      <span className=\"accordion-header-indicator\"></span>\n                    </Accordion.Toggle>\n                    <Accordion.Collapse\n                      eventKey={`${i}`}\n                      className=\"accordion__body\"\n                    >\n                      <div className=\"accordion-body-text\">\n                      <ul className=\"timeline\">\n                      {data.activities && data.activities.map((activity,index) => ( \n                          \n                          <> \n                            <li>\n                              <div className=\"timeline-panel\">\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\n                              <div className=\"media-body\">\n                                <h5 className=\"mb-1\">{activity.name}</h5>\n                                <small className=\"d-block\">\n                                {activity.date}\n                                </small>\n                              </div>\n                              <Dropdown className=\"dropdown\">\n                                <Dropdown.Toggle\n                                variant=\" light\"\n                                className=\"i-false p-0 btn-info sharp\"\n                                >\n                                <svg\n                                  width=\"18px\"\n                                  height=\"18px\"\n                                  viewBox=\"0 0 24 24\"\n                                  version=\"1.1\"\n                                >\n                                  <g\n                                  stroke=\"none\"\n                                  strokeWidth=\"1\"\n                                  fill=\"none\"\n                                  fillRule=\"evenodd\"\n                                  >\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\n                                  </g>\n                                </svg>\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu className=\"dropdown-menu\">\n                                <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  onClick={()=>LoadViewPage(activity,'view')}\n                                  >\n                                  View\n                                  </Dropdown.Item>\n                               \n                               <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  onClick={()=>LoadViewPage(activity,'update')}\n                                  >\n                                  Update\n                                  </Dropdown.Item>\n                               \n                                 <Dropdown.Item\n                                  className=\"dropdown-item\"\n                                  to=\"/widget-basic\"\n                                  onClick={()=>LoadModal(activity)}\n                                  >\n                                  Delete\n                                  </Dropdown.Item>\n                                  \n                                </Dropdown.Menu>\n                              </Dropdown>\n                              </div>\n                            </li>\n                            </>\n                       ))}                       \n                      </ul>\n                      </div>\n                    </Accordion.Collapse>\n                  </div>\n                )}\n                </>\n                </Accordion>\n                \n              </PerfectScrollbar>\n            </div>\n          </div>\n      </div>\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\n        <div className=\"card\">\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\n            <h4 className=\"card-title\">Summary </h4>\n          </div>\n          <div className=\"row\">\n                {summary && summary!==null && (<>\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                <div className=\"card-body\">\n                  \n                  <div className=\"col-sm-12 col-md-12 col-lg-12\">\n                    <div className=\"card overflow-hidden\">\n                  <div className=\"social-graph-wrapper widget-facebook\">\n                    <span className=\"s-icon\">\n                      <span style={{fontSize:\"16px\"}}>Total Clinic Visit : {summary.visitCount}</span>\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-6 border-right\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\"><b>{summary.encounterDate}</b></span> \n                        </h4>\n                        <p className=\"m-0\"><b>Last Visit </b></p>\n                      </div>\n                    </div>\n                   \n                    <div className=\"col-6\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\"><b>{summary.nextAppointment}</b></span>\n                        </h4>\n                        <p className=\"m-0\"><b>Next Visit</b></p>\n                      </div>\n                    </div>\n                   \n                  </div>\n                </div>\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12 col-sm-12\">\n                  <div className=\"widget-stat card\">\n                    <div className=\"card-body p-4\" style={{backgroundColor:\"#fff\"}}>\n                      <h4 className=\"card-title\" style={{fontSize:\"15px\"}}><b>Current Regimen Given</b></h4>\n                      <h4 class=\"text-info \">{summary.regimen}</h4>\n                     \n                    </div>\n                  </div>\n                  </div>\n                </div>\n                </div>\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                <div className=\"card-body\">\n                    <div className=\"card overflow-hidden\">\n                  <div className=\"social-graph-wrapper widget-linkedin\">\n                    <span className=\"s-icon\">\n                    <span style={{fontSize:\"16px\", }}>BMI : {(summary.weight/((summary.height/100) * (summary.height/100))).toFixed(2)} kg/m<sup>2</sup></span>\n                    </span>\n                  </div>\n                  <div className=\"row\">\n\n                    <div className=\"col-6 border-right\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\">{summary.weight} Kg</span> \n                        </h4>\n                        <p className=\"m-0\"><b>Weight </b></p>\n                      </div>\n                    </div>\n                    <div className=\"col-6\">\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\n                        <h4 className=\"m-1\">\n                          <span className=\"counter\">{summary.height} cm</span>\n                        </h4>\n                        <p className=\"m-0\"><b>Height </b></p>\n                      </div>\n                    </div>\n                    \n                  </div>\n                </div>\n                </div>\n                </div>\n                </>)}\n          </div>\n        </div>\n      </div>\n    </div>\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>  \n    </Fragment>\n  );\n};\n\nexport default RecentHistory;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n\nconst PatientnHistory = (props) => {\n    const [recentActivities, setRecentActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [open, setOpen] = React.useState(false)\n    const [record, setRecord] = useState(null)\n     const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n      }, [props.patientObj.id]);\n        ///GET LIST OF Patients        \n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)                       \n                    setRecentActivities(response.data)\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadViewPage =(row,action)=>{\n        \n        if(row.path==='prep-eligibility'){        \n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-enrollment'){\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-clinic'){//prep-commencement \n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-commencement'){\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\n\n        }else if(row.path==='prep-interruption'){\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\n\n        }else{\n\n        }\n        \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n    const LoadDeletePage =(row)=>{\n        \n        if(row.path==='prep-eligibility'){ \n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        }else if(row.path==='prep-clinic'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-commencement'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-interruption'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else{\n\n        }\n        \n    }\n\n\n  return (\n    <div>\n        \n    <br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Patient History \"\n              columns={[\n                { title: \"Name\", field: \"name\" },\n                {\n                  title: \"Encounter Date\",\n                  field: \"date\",\n                },               \n                // { title: \"Status\", field: \"status\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={recentActivities && recentActivities.map((row) => ({\n                   name: row.name,\n                   date: row.date,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>    \n    </div>\n  );\n}\n    \nexport default PatientnHistory;\n\n\n","import React, {useState, useEffect} from \"react\";\nimport {Grid, Segment, Label, List, Card} from 'semantic-ui-react'\n// Page titie\nimport {\n    FormGroup, Label as FormLabelName, InputGroup,\n    InputGroupText,\n    Input,\n} from \"reactstrap\";\nimport {url as baseUrl, token} from \"../../../api\";\nimport MatButton from '@material-ui/core/Button'\nimport {makeStyles} from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport AddIcon from '@mui/icons-material/Add';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport {toast} from \"react-toastify\";\nimport Select from 'react-select'\nimport Divider from '@mui/material/Divider';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        flexGrow: 1,\n        \"& .card-title\": {\n            color: '#fff',\n            fontWeight: 'bold'\n        },\n        \"& .form-control\": {\n            borderRadius: '0.25rem',\n            height: '41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\": {\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\": {\n            color: 'red'\n        },\n        \"& label\": {\n            fontSize: '14px',\n            color: '#014d88',\n            fontWeight: 'bold'\n        },\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst ClinicVisit = (props) => {\n    //let patientObj = props.patientObj ? props.patientObj : {}\n    const [errors, setErrors] = useState({});\n    const [disabledField, setSisabledField] = useState(false);\n    const [patientDto, setPatientDto] = useState();\n    let temp = {...errors}\n    const classes = useStyles()\n    const [saving, setSaving] = useState(false);\n    const [adherenceLevel, setAdherenceLevel] = useState([]);\n    const [sti, setSti] = useState([]);\n    const [prepStatus, setPrepStatus] = useState([]);\n    const [prepSideEffect, setPrepSideEffect] = useState([]);\n    const [htsResult, setHtsResult] = useState([]);\n    const [prepRegimen, setprepRegimen] = useState([]);\n    const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\n    const [labTestOptions, setLabTestOptions] = useState([]);\n    const [urineTestResult, setUrineTestResult] = useState([]);\n    const [otherTestResult, setOtherTestResult] = useState([]);\n    const [sphylisTestResult, setSphylisTestResult] = useState([]);\n    const [hepaTestResult, setHepaTestResult] = useState([]);\n    const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\n    const [pregnant, setpregnant] = useState([]);\n    const [prepEntryPoint, setPrepEntryPoints] = useState([]);\n    const [prepType, setPrepType] = useState([]);\n    const [populationType, setPopulationType] = useState([]);\n    const [visitType, setVisitType] = useState([]);\n    // const [selectedPregnant, setSelectedPregnant] = useState(\"\");\n    const [selectedPopulationType, setSelectedPopulationType] = useState(\"\");\n    // const [selectedVisitType, setSelectedVisitType] = useState(\"\");\n    const [latestFromEligibility, setLatestFromEligibility] = useState(null);\n    let testsOptions = []\n    const [hivTestValue, setHivTestValue] = useState('');\n    const [hivTestResultDate, setHivTestResultDate] = useState('');\n\n\n    useEffect(() => {\n        handleInputChange({ target: { name: 'hivTestResult', value: hivTestValue } });\n        handleInputChange({ target: { name: 'hivTestResultDate', value: hivTestResultDate } });\n    }, [hivTestValue]);\n    //Vital signs clinical decision support\n    const [vitalClinicalSupport, setVitalClinicalSupport] =\n        useState({\n            weight: \"\",\n            diastolic: \"\",\n            height: \"\",\n            systolic: \"\",\n            pulse: \"\",\n            temperature: \"\",\n            respiratoryRate: \"\"\n        })\n\n    const [objValues, setObjValues] = useState({\n        adherenceLevel: \"\",\n        dateInitialAdherenceCounseling: \"\",\n        datePrepGiven: \"\",\n        datePrepStart: \"\",\n        dateReferre: \"\",\n        diastolic: \"\",\n        encounterDate: \"\",\n        extra: {},\n        height: \"\",\n        hepatitis: {},\n        nextAppointment: \"\",\n        notedSideEffects: \"\",\n        otherTestsDone: [],\n        personId: props.patientObj.personId,\n        pregnant: \"\",\n        prepEnrollmentUuid: \"\",\n        pulse: \"\",\n        referred: \"\",\n        regimenId: \"\",\n        respiratoryRate: \"\",\n        riskReductionServices: \"\",\n        stiScreening: \"\",\n        syndromicStiScreening: null,\n        syphilis: {},\n        systolic: \"\",\n        temperature: \"\",\n        urinalysis: {},\n        urinalysisResult: \"\",\n        weight: \"\",\n        why: \"\",\n        otherDrugs: \"\",\n        duration: \"\",\n        prepGiven: \"\",\n        hivTestResult: \"\",\n        hivTestResultDate:\"\",\n        prepType: \"\",\n        populationType: \"\",\n        prepDistributionSetting: \"\",\n        familyPlanning: \"\",\n        dateOfFamilyPlanning: \"\",\n        monthsOfRefill: \"\",\n        visitType: \"\"\n\n\n    });\n    const [urinalysisTest, setUrinalysisTest] = useState({\n        urinalysisTest: \"Yes\",\n        testDate: \"\",\n        result: \"\",\n    })\n\n    const [syphilisTest, setSyphilisTest] = useState({\n        syphilisTest: \"Yes\",\n        testDate: \"\",\n        result: \"\",\n        others: \"\"\n    })\n    const [hepatitisTest, setHepatitisTest] = useState({\n        hepatitisTest: \"Yes\",\n        testDate: \"\",\n        result: \"\",\n    })\n\n    const [otherTest, setOtherTest] = useState([])\n\n    useEffect(async () =>  {\n        \n        // Check if the fields exist in objValues first\n        if (objValues.urinalysis.testDate && objValues.urinalysis.result && objValues.urinalysis.urinalysisTest) {\n            setUrinalysisTest({\n                ...urinalysisTest, testDate: objValues.urinalysis.testDate,\n                result: objValues.urinalysis.result, urinalysisTest: objValues.urinalysis.urinalysisTest\n            });\n        }\n        if (objValues.syphilis.testDate && objValues.syphilis.result && objValues.syphilis.syphilisTest) {\n            setSyphilisTest({\n                ...syphilisTest,\n                testDate: objValues.syphilis.testDate,\n                result: objValues.syphilis.result,\n                syphilisTest: objValues.syphilis.syphilisTest,\n                others: objValues.syphilis.others\n            });\n        }\n        if (objValues.hepatitis.testDate && objValues.hepatitis.result && objValues.hepatitis.hepatitisTest) {\n            setHepatitisTest({\n                ...hepatitisTest, testDate: objValues.hepatitis.testDate,\n                result: objValues.hepatitis.result, hepatitisTest: objValues.hepatitis.hepatitisTest\n            });\n        }\n    }, [objValues]);\n\n    useEffect(() => {\n        AdherenceLevel();\n        SYNDROMIC_STI_SCREENING();\n        //PatientDetaild();\n        PREP_STATUS();\n        HTS_RESULT();\n        LAST_HIV_TEST_RESULT();\n        PREP_SIDE_EFFECTS();\n        GetPatientDTOObj();\n        WHY_POOR_FAIR_ADHERENCE();\n        PrepEligibilityObj();\n        PrepRegimen();\n        TestGroup();\n        PREP_URINALYSIS_RESULT();\n        PREP_OTHER_TEST();\n        HEPATITIS_SCREENING_RESULT();\n        SYPHILIS_RESULT();\n        PREGANACY_STATUS();\n        PREP_ENTRY_POINT();\n        PREP_TYPE();\n        POPULATION_TYPE();\n        VISIT_TYPE();\n        FAMILY_PLANNING_METHOD();\n        if (props.activeContent && props.activeContent.id !== \"\" && props.activeContent.id !== null) {\n            GetPatientVisit(props.activeContent.id)\n            setSisabledField(props.activeContent.actionType === 'view' ? true : false)\n        } \n        GetLatestFromEligibility();\n    }, [props.activeContent]);\n\n    const PREGANACY_STATUS = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setpregnant(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n\n    const PREP_ENTRY_POINT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepEntryPoints(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n\n    const PREP_TYPE = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepType(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n\n    //Get list of Test Group\n    const TestGroup = () => {\n        axios\n            .get(`${baseUrl}laboratory/labtestgroups`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                response.data.map((x) => {\n                    x.labTests.map((x2) => {\n                        testsOptions.push({\n                            value: x2.id,\n                            label: x2.labTestName,\n                            testGroupId: x.id,\n                            testGroupName: x.groupName,\n                            sampleType: x2.sampleType\n                        },)\n                    })\n                })\n                setLabTestOptions(testsOptions);\n\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n    const GetPatientVisit = async (id) => {\n        axios\n            .get(`${baseUrl}prep-clinic/${props.activeContent.id}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setObjValues(response.data);\n                if (response.data.otherTestsDone !== null) {\n                    setOtherTest([...response.data.otherTestsDone.map((x, index) => {\n                        return {\n                            localId: index+1,\n                            otherTest: \"Yes\",\n                            testDate: x.testDate,\n                            result: x.result,\n                            name: x.name,\n                            otherTestName: x.otherTestName\n                        }\n                    })]);\n                }\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const GetPatientDTOObj = () => {\n        axios\n            .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPatientDto(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const PrepEligibilityObj = () => {\n        axios\n            .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                //setPrepStatus(response.data);\n                objValues.prepEnrollmentUuid = \"\";\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const PrepRegimen = () => {\n        axios\n            .get(`${baseUrl}prep-regimen`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setprepRegimen(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const PREP_STATUS = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepStatus(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const PREP_SIDE_EFFECTS = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepSideEffect(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n\n    const HTS_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/HTS_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setHtsResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n    const LAST_HIV_TEST_RESULT = () => {\n        axios\n            .get(`${baseUrl}hts/persons/${objValues.personId}/current-hts`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                var lastHivTest= response.data.hivTestResult;\n\n                if (lastHivTest !== null && lastHivTest !== undefined) {\n                    setHivTestValue(response.data.hivTestResult);\n                    setHivTestResultDate(response.data.test1.date);\n                    objValues.hivTestResultDate=response.data.hivTestResult;\n                    objValues.hivTestResultDate=response.data.test1.date;\n\n                } else {\n                    setHivTestValue('NOT DONE');\n                }\n            })\n            .catch((error) => {\n\n            });\n    }\n\n    useEffect(() => {\n        if (latestFromEligibility !== null) {\n            setObjValues({...objValues, \n                populationType: latestFromEligibility !== null ? latestFromEligibility.populationType : \"\",\n                visitType: latestFromEligibility !== null ? latestFromEligibility.visitType : \"\",\n                pregnant: latestFromEligibility !== null ? latestFromEligibility.pregnancyStatus : \"\",\n            })\n            // await POPULATION_TYPE();\n            const autoPopulatePopulationType = populationType.find((type) => type.code === latestFromEligibility.populationType)?.display;\n            const autoPopulateVisitType = visitType.find((type) => type.code === latestFromEligibility.visitType)?.display;\n            const autoPopulatePregnant = pregnant.find((type) => type.code === latestFromEligibility.pregnancyStatus)?.display;\n            setSelectedPopulationType(autoPopulatePopulationType);\n            // setSelectedVisitType(autoPopulateVisitType)\n            // setSelectedPregnant(autoPopulatePregnant)\n        }\n\n    }, [latestFromEligibility])\n\n    const GetLatestFromEligibility = async () => {\n        axios\n            .get(`${baseUrl}prep-eligibility/person/${objValues.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then(async (response)  => {\n                const latestEligibility = response.data.sort(\n                    (a,b) => moment(a.visitDate).isBefore(moment(b.visitDate)))\n                    // (a,b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n                    [response.data.length - 1];\n\n                    setLatestFromEligibility(latestEligibility);\n            })\n            .catch((error) => {\n\n            });\n    }\n\n    useEffect(() => {\n        if (objValues.populationType !== null && objValues.populationType !== undefined){\n            const autoPopulate = populationType.find((type) => type.code === objValues.populationType);\n            \n            setSelectedPopulationType(autoPopulate ? autoPopulate.display : \"\");\n        }\n    }, [objValues.populationType])\n    const POPULATION_TYPE = async () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPopulationType(response.data);\n                \n            })\n            .catch((error) => {\n\n            });\n    }\n\n    const VISIT_TYPE =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setVisitType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const WHY_POOR_FAIR_ADHERENCE = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setWhyAdherenceLevelPoor(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n    ///GET LIST OF FUNCTIONAL%20_STATUS\n    // TB STATUS\n    const SYNDROMIC_STI_SCREENING = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setSti(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n    //PREP_URINALYSIS_RESULT\n    const PREP_URINALYSIS_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setUrineTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n    //PREP_OTHER_TEST\n    const PREP_OTHER_TEST = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setOtherTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n    //SYPHILIS_RESULT\n    const SYPHILIS_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setSphylisTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n    //HEPATITIS_SCREENING_RESULT\n    const HEPATITIS_SCREENING_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setHepaTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n\n    // FAMILY_PLANNING_METHOD\n    const FAMILY_PLANNING_METHOD = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setFamilyPlanningMethod(response.data);\n            })\n            .catch((error) => {\n                \n            });\n    }\n\n    ///Level of Adherence\n    async function AdherenceLevel() {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setAdherenceLevel(response.data);\n\n            })\n            .catch((error) => {\n            });\n    }\n\n    const handleInputChange = e => {\n\n        setErrors({ ...errors, [e.target.name]: \"\" })\n        if (e.target.name === 'monthsOfRefill') {\n            const asNumber = Number(e.target.value)\n            const durationInDays = (asNumber * 30)\n            setObjValues({ ...objValues, monthsOfRefill: e.target.value, duration: `${durationInDays}` })\n        } else {\n            // if the encounterDate is the same as the commencement date, the prep regimen id should be automatically populated from the commencement\n            setObjValues({ ...objValues, [e.target.name]: e.target.value });\n\n        }\n\n    }\n    const handleInputChangeUrinalysisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        setUrinalysisTest({...urinalysisTest, [e.target.name]: e.target.value});\n    }\n    const handleInputChangeOtherTest = (e, localId) => {\n        //find the test with the localId\n        let temp = [...otherTest];\n        let index = temp.findIndex(x => Number(x.localId) === Number(localId));\n\n        if (e.target.name === 'name' && e.target.value !== 'PREP_OTHER_TEST_OTHER_(SPECIFY)') {\n            temp[index].otherTestName = \"\";\n            temp[index][e.target.name] = e.target.value;\n            setOtherTest(temp);\n        } else {\n            temp[index][e.target.name] = e.target.value;\n            setOtherTest(temp);\n        }\n    }\n    const handleInputChangeHepatitisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        setHepatitisTest({...hepatitisTest, [e.target.name]: e.target.value});\n    }\n    const handleInputChangeSyphilisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        setSyphilisTest({...syphilisTest, [e.target.name]: e.target.value});\n        //Others\n        if (e.target.name === 'result' && e.target.value !== 'Others') {\n            syphilisTest.others = \"\"\n            setSyphilisTest({...syphilisTest, ['others']: \"\"});\n            setSyphilisTest({...syphilisTest, [e.target.name]: e.target.value});\n        }\n        setSyphilisTest({...syphilisTest, [e.target.name]: e.target.value});\n    }\n    //Handle CheckBox\n    const handleCheckBoxSyphilisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.checked) {\n            setSyphilisTest({...syphilisTest, [\"syphilisTest\"]: \"Yes\"})\n        } else {\n            setSyphilisTest({...syphilisTest, [\"syphilisTest\"]: \"No\"})\n        }\n    }\n    const handleCheckBoxHepatitisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.checked) {\n            setHepatitisTest({...hepatitisTest, [\"hepatitisTest\"]: \"Yes\"})\n        } else {\n            setHepatitisTest({...syphilisTest, [\"syphilisTest\"]: \"No\"})\n        }\n    }\n    const handleCheckBoxOtherTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.checked) {\n            setOtherTest([...otherTest, ...objValues.otherTestsDone, \n                {\n                    localId: objValues.otherTestsDone?.length || 0,\n                    otherTest: \"Yes\",\n                    testDate: \"\",\n                    result: \"\",\n                    name: \"\",\n                    otherTestName: \"\"\n                }])\n        } else {\n            // setOtherTest({...otherTest, [\"otherTest\"]: \"No\"})\n            setOtherTest([])\n        }\n    }\n\n    const handleCheckBoxUrinalysisTest = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.checked) {\n            setUrinalysisTest({...urinalysisTest, [\"urinalysisTest\"]: \"Yes\"})\n        } else {\n            setUrinalysisTest({...otherTest, [\"urinalysisTest\"]: \"No\"})\n        }\n    }\n    //to check the input value for clinical decision\n    const handleInputValueCheckHeight = (e) => {\n        if (e.target.name === \"height\" && (e.target.value < 48.26 || e.target.value > 216.408)) {\n            const message = \"Height cannot be greater than 216.408 and less than 48.26\"\n            setVitalClinicalSupport({...vitalClinicalSupport, height: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, height: \"\"})\n        }\n    }\n    const handleInputValueCheckweight = (e) => {\n        if (e.target.name === \"weight\" && (e.target.value < 3 || e.target.value > 150)) {\n            const message = \"Body weight must not be greater than 150 and less than 3\"\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: \"\"})\n        }\n    }\n    const handleInputValueCheckSystolic = (e) => {\n        if (e.target.name === \"systolic\" && (e.target.value < 90 || e.target.value > 240)) {\n            const message = \"Blood Pressure systolic must not be greater than 240 and less than 90\"\n            setVitalClinicalSupport({...vitalClinicalSupport, systolic: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, systolic: \"\"})\n        }\n    }\n    const handleInputValueCheckDiastolic = (e) => {\n        if (e.target.name === \"diastolic\" && (e.target.value < 60 || e.target.value > 140)) {\n            const message = \"Blood Pressure diastolic must not be greater than 140 and less than 60\"\n            setVitalClinicalSupport({...vitalClinicalSupport, diastolic: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, diastolic: \"\"})\n        }\n    }\n    const handleInputValueCheckPulse = (e) => {\n        if (e.target.name === \"pulse\" && (e.target.value < 40 || e.target.value > 120)) {\n            const message = \"Pulse must not be greater than 120 and less than 40\"\n            setVitalClinicalSupport({...vitalClinicalSupport, pulse: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, pulse: \"\"})\n        }\n    }\n    const handleInputValueCheckRespiratoryRate = (e) => {\n        if (e.target.name === \"respiratoryRate\" && (e.target.value < 10 || e.target.value > 70)) {\n            const message = \"Respiratory Rate must not be greater than 70 and less than 10\"\n            setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate: \"\"})\n        }\n    }\n    const handleInputValueCheckTemperature = (e) => {\n\n        if (e.target.name === \"temperature\" && (e.target.value < 35 || e.target.value > 47)) {\n            const message = \"Temperature must not be greater than 47 and less than 35\"\n            setVitalClinicalSupport({...vitalClinicalSupport, temperature: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, temperature: \"\"})\n        }\n    }\n\n    useEffect(()=> {\n        if(props.activeContent.actionType === \"\" || props.activeContent.actionType === null){\n            emptyObjValues()\n        }\n    },[props.activeContent.actionType])\n\n    const emptyObjValues = () => {\n        setObjValues({\n            adherenceLevel: \"\",\n            dateInitialAdherenceCounseling: \"\",\n            datePrepGiven: \"\",\n            datePrepStart: \"\",\n            dateReferre: \"\",\n            diastolic: \"\",\n            encounterDate: \"\",\n            extra: {},\n            height: \"\",\n            hepatitis: {},\n            nextAppointment: \"\",\n            notedSideEffects: \"\",\n            otherTestsDone: [],\n            personId: props.patientObj.personId,\n            pregnant: \"\",\n            prepEnrollmentUuid: \"\",\n            pulse: \"\",\n            referred: \"\",\n            regimenId: \"\",\n            respiratoryRate: \"\",\n            riskReductionServices: \"\",\n            stiScreening: \"\",\n            syndromicStiScreening: null,\n            syphilis: {},\n            systolic: \"\",\n            temperature: \"\",\n            urinalysis: {},\n            urinalysisResult: \"\",\n            weight: \"\",\n            why: \"\",\n            otherDrugs: \"\",\n            hivTestResult: \"\",\n            duration: \"\",\n            prepGiven: \"\",\n            prepDistributionSetting: \"\",\n            visitType: \"\"\n        });\n        setUrinalysisTest({});\n        setSyphilisTest({});\n        setHepatitisTest({});\n        setOtherTest([]);\n    }\n\n    //Validations of the forms\n    const validate = () => {\n        temp.encounterDate = objValues.encounterDate ? \"\" : \"This field is required\"\n        // temp.pregnant = (isFemale() && objValues.pregnant === null) ? \"\" : \"This field is required\"\n        if (isFemale()) {\n            temp.pregnant = objValues.pregnant ? \"\" : \"This field is required\";\n        }\n        temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\n        temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\n\n        //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\n        temp.height = objValues.height ? \"\" : \"This field is required\"\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\n        temp.urinalysisTest = urinalysisTest.urinalysisTest ? \"\" : \"This field is required\"\n        temp.testDate = urinalysisTest.testDate ? \"\" : \"This field is required\"\n        temp.result = urinalysisTest.result ? \"\" : \"This field is required\"\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\n        temp.duration = objValues.duration ? \"\" : \"This field is required\"\n        temp.prepDistributionSetting = objValues.prepDistributionSetting ? \"\" : \"This field is required\"\n        temp.populationType = objValues.populationType ? \"\" : \"This field is required\"\n        temp.visitType = objValues.visitType ? \"\" : \"This field is required\"\n        // temp.hivTestResult = objValues.hivTestResult ? \"\" : \"This field is required\"\n        // temp.hivTestResultDate = objValues.hivTestResultDate ? \"\" : \"This field is required\"\n        //temp.datePrepGiven = objValues.datePrepGiven ? \"\" : \"This field is required\"\n\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            setSaving(true)\n            //objValues.visitDate = vital.encounterDate\n            objValues.hivTestResultDate=hivTestResultDate;\n            objValues.hivTestResult= hivTestValue;\n            objValues.syphilis = syphilisTest\n            objValues.hepatitis = hepatitisTest\n            objValues.urinalysis = urinalysisTest\n            objValues.otherTestsDone = otherTest.map(x => {\n                            return {\n                                testDate: x.testDate,\n                                result: x.result,\n                                name: x.name,\n                                otherTestName: x.otherTestName\n                            }\n                        })\n            objValues.prepEnrollmentUuid = patientDto.uuid\n\n            if (props.activeContent && props.activeContent.actionType === 'update') {//Perform operation for updation action\n                axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                )\n                    .then(response => {\n                        //PatientDetaild();\n                        setSaving(false);\n                        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({\n                            ...props.activeContent,\n                            route: 'consultation',\n                            activeTab: \"history\",\n                            actionType: \"view\"\n                        })\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n\n                    });\n\n            } else {\n                axios.post(`${baseUrl}prep/clinic-visit`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                )\n                    .then(response => {\n                        //PatientDetaild();\n                        setSaving(false);\n                        emptyObjValues();\n                        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({\n                            ...props.activeContent,\n                            route: 'consultation',\n                            activeTab: \"history\",\n                            actionType: \"view\"\n                        })\n                    })\n                    .catch(error => {\n                        setSaving(false);\n\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n\n                    });\n            }\n        }\n    }\n    // const handleSubmit = ()=>{\n    //     if (validate()) {objValues.syphilis = syphilisTest\n    //     objValues.hepatitis = hepatitisTest\n    //     objValues.urinalysis = urinalysisTest\n    //     objValues.otherTestsDone = otherTest\n    //     objValues.prepEnrollmentUuid = patientDto.uuid\n    //     emptyObjValues();\n    //     props.setActiveContent({\n    //         ...props.activeContent,\n    //         id: \"\",\n    //         route: 'consultation',\n    //         activeTab: \"history\",\n    //         actionType: \"view\"\n    //     })}\n    // }\n\n    const handleCreateNewTest = () => {\n        setOtherTest([...otherTest, {\n            localId: otherTest.length + 1,\n            otherTest: \"Yes\",\n            testDate: \"\",\n            result: \"\",\n            name: \"\",\n            otherTestName: \"\"\n        }])\n    }\n\n    const isFemale = () => {\n        return props.patientObj.gender.toLowerCase() === \"female\";\n    }\n\n    const handlePrepTypeChange = (e) => {\n        setObjValues({...objValues, regimenId: \"\", prepType: e.target.value})\n        if (e.target.value === 'PREP_TYPE_OTHERS' || e.target.value === 'PREP_TYPE_ED_PREP') {\n            PrepRegimen();\n        } else {\n            axios\n                .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`,\n                    {headers: {\"Authorization\": `Bearer ${token}`}}\n                )\n                .then((response) => {\n                    setprepRegimen(response.data);\n                })\n                .catch((error) => {\n                    //console.log(error);\n                });\n        }\n\n        setErrors({...errors, [e.target.name]: \"\"})\n\n    }\n\n    return (\n        <div>\n            <div className=\"row\">\n\n                <div className=\"col-md-6\">\n                    <h2>Clinic Follow-up Visit</h2>\n                </div>\n            </div>\n            <Grid>\n\n                <Grid.Column>\n                    <Segment>\n                        <Label as='a' color='blue' style={{width: '106%', height: '35px'}} ribbon>\n                            <h4 style={{color: '#fff'}}>VITAL SIGNS</h4>\n                        </Label>\n                        <br/><br/>\n                        <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Date of Visit <span style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"encounterDate\"\n                                        id=\"encounterDate\"\n                                        value={objValues.encounterDate}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        onChange={handleInputChange}\n                                        //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.encounterDate !== \"\" ? (\n                                        <span className={classes.error}>{errors.encounterDate}</span>\n                                    ) : \"\"}\n\n                                </FormGroup>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\" mb-3 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName>Pulse</FormLabelName>\n                                        <InputGroup>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"pulse\"\n                                                id=\"pulse\"\n                                                onChange={handleInputChange}\n                                                min=\"40\"\n                                                max=\"120\"\n                                                value={objValues.pulse}\n                                                onKeyUp={handleInputValueCheckPulse}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                bmp\n                                            </InputGroupText>\n                                        </InputGroup>\n                                        {vitalClinicalSupport.pulse !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\n                                        ) : \"\"}\n                                        {errors.pulse !== \"\" ? (\n                                            <span className={classes.error}>{errors.pulse}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-3 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName>Respiratory Rate </FormLabelName>\n                                        <InputGroup>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"respiratoryRate\"\n                                                id=\"respiratoryRate\"\n                                                onChange={handleInputChange}\n                                                min=\"10\"\n                                                max=\"70\"\n                                                value={objValues.respiratoryRate}\n                                                onKeyUp={handleInputValueCheckRespiratoryRate}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                bmp\n                                            </InputGroupText>\n                                        </InputGroup>\n                                        {vitalClinicalSupport.respiratoryRate !== \"\" ? (\n                                            <span\n                                                className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\n                                        ) : \"\"}\n                                        {errors.respiratoryRate !== \"\" ? (\n                                            <span className={classes.error}>{errors.respiratoryRate}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-3 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName>Temperature </FormLabelName>\n                                        <InputGroup>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"temperature\"\n                                                id=\"temperature\"\n                                                onChange={handleInputChange}\n                                                min=\"35\"\n                                                max=\"47\"\n                                                value={objValues.temperature}\n                                                onKeyUp={handleInputValueCheckTemperature}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                <sup>o</sup>c\n                                            </InputGroupText>\n                                        </InputGroup>\n                                        {vitalClinicalSupport.temperature !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\n                                        ) : \"\"}\n                                        {errors.temperature !== \"\" ? (\n                                            <span className={classes.error}>{errors.temperature}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n\n                                <div className=\" mb-3 col-md-5\">\n                                    <FormGroup>\n                                        <FormLabelName>Body Weight <span\n                                            style={{color: \"red\"}}> *</span></FormLabelName>\n                                        <InputGroup>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"weight\"\n                                                id=\"weight\"\n                                                onChange={handleInputChange}\n                                                min=\"3\"\n                                                max=\"150\"\n                                                value={objValues.weight}\n                                                onKeyUp={handleInputValueCheckweight}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                kg\n                                            </InputGroupText>\n                                        </InputGroup>\n                                        {vitalClinicalSupport.weight !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.weight}</span>\n                                        ) : \"\"}\n                                        {errors.weight !== \"\" ? (\n                                            <span className={classes.error}>{errors.weight}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-5\">\n                                    <FormGroup>\n                                        <FormLabelName>Height <span style={{color: \"red\"}}> *</span></FormLabelName>\n                                        <InputGroup>\n                                            <InputGroupText\n                                                addonType=\"append\"\n                                                style={{\n                                                    backgroundColor: \"#014D88\",\n                                                    color: \"#fff\",\n                                                    border: \"1px solid #014D88\",\n                                                    borderRadius: \"0rem\"\n                                                }}\n                                            >\n                                                cm\n                                            </InputGroupText>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"height\"\n                                                id=\"height\"\n                                                onChange={handleInputChange}\n                                                value={objValues.height}\n                                                min=\"48.26\"\n                                                max=\"216.408\"\n                                                onKeyUp={handleInputValueCheckHeight}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n                                            <InputGroupText\n                                                addonType=\"append\"\n                                                style={{\n                                                    backgroundColor: \"#992E62\",\n                                                    color: \"#fff\",\n                                                    border: \"1px solid #992E62\",\n                                                    borderRadius: \"0rem\"\n                                                }}\n                                            >\n                                                {objValues.height !== '' ? (objValues.height / 100).toFixed(2) + \"m\" : \"m\"}\n                                            </InputGroupText>\n                                        </InputGroup>\n                                        {vitalClinicalSupport.height !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\n                                        ) : \"\"}\n                                        {errors.height !== \"\" ? (\n                                            <span className={classes.error}>{errors.height}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 mt-2 col-md-2\">\n                                    {objValues.weight !== \"\" && objValues.height !== '' && (\n                                        <FormGroup>\n                                            <Label> {\" \"}</Label>\n                                            <InputGroup>\n                                                <InputGroupText addonType=\"append\" style={{\n                                                    backgroundColor: \"#014D88\",\n                                                    color: \"#fff\",\n                                                    border: \"1px solid #014D88\",\n                                                    borderRadius: \"0rem\"\n                                                }}>\n                                                    BMI\n                                                    : {(objValues.weight / ((objValues.height / 100) * (objValues.height / 100))).toFixed(2)}\n                                                </InputGroupText>\n\n                                            </InputGroup>\n                                        </FormGroup>\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"form-group mb-3 col-md-8\">\n                                    <FormGroup>\n                                        <FormLabelName>Blood Pressure</FormLabelName>\n                                        <InputGroup>\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                systolic(mmHg)\n                                            </InputGroupText>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"systolic\"\n                                                id=\"systolic\"\n                                                min=\"90\"\n                                                max=\"240\"\n                                                onChange={handleInputChange}\n                                                value={objValues.systolic}\n                                                onKeyUp={handleInputValueCheckSystolic}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                diastolic(mmHg)\n                                            </InputGroupText>\n                                            <Input\n                                                type=\"number\"\n                                                name=\"diastolic\"\n                                                id=\"diastolic\"\n                                                min={0}\n                                                max={140}\n                                                onChange={handleInputChange}\n                                                value={objValues.diastolic}\n                                                onKeyUp={handleInputValueCheckDiastolic}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                                disabled={disabledField}\n                                            />\n\n\n                                        </InputGroup>\n                                        {vitalClinicalSupport.systolic !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\n                                        ) : \"\"}\n                                        {errors.systolic !== \"\" ? (\n                                            <span className={classes.error}>{errors.systolic}</span>\n                                        ) : \"\"}\n\n                                        {vitalClinicalSupport.diastolic !== \"\" ? (\n                                            <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\n                                        ) : \"\"}\n                                        {errors.diastolic !== \"\" ? (\n                                            <span className={classes.error}>{errors.diastolic}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                {isFemale() && <div className=\"form-group mb-3 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName>Pregnancy Status <span\n                                            style={{color: \"red\"}}> *</span></FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"pregnant\"\n                                            id=\"pregnant\"\n                                            onChange={handleInputChange}\n                                            value={objValues.pregnant}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select Pregnancy Status</option>\n                                            {pregnant.map((value) => (\n                                                <option key={value.id} value={value.code}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n\n                                        </Input>\n                                        {errors.pregnant !== \"\" ? (\n                                            <span className={classes.error}>{errors.pregnant}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>}\n\n                            </div>\n                        </div>\n                        <Label as='a' color='black' style={{width: '106%', height: '35px'}} ribbon>\n                            <h4 style={{color: '#fff'}}></h4>\n                        </Label>\n                        <br/><br/>\n\n                        <div className=\"row\">\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Result of Last HIV Test </FormLabelName>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"hivTestResult\"\n                                        id=\"hivTestResult\"\n                                        value={hivTestValue}\n                                        onChange={(e) => {\n                                            setHivTestValue(e.target.value);\n                                            handleInputChange(e);\n                                        }}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={true}\n                                    />\n\n\n                                </FormGroup>\n                            </div>\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Date of Last HIV Test </FormLabelName>\n                                    <Input\n                                        type=\"Date\"\n                                        name=\"hivTestResultDate\"\n                                        id=\"hivTestResultDate\"\n                                        value={hivTestResultDate}\n                                        onChange={(e) => {\n                                            setHivTestValue(e.target.value);\n                                            handleInputChange(e);\n                                        }}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={true}\n                                    />\n\n\n                                </FormGroup>\n                            </div>\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Noted Side Effects </FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"notedSideEffects\"\n                                        id=\"notedSideEffects\"\n                                        value={objValues.notedSideEffects}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        {prepSideEffect.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n\n                                </FormGroup>\n                            </div>\n                            {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"regimenStartPrep\"\n                    id=\"regimenStartPrep\"\n                    value={objValues.regimenStartPrep}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\n                  </Input>\n                 \n                </FormGroup>\n              </div>\n               */}\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>STI Screening</FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"stiScreening\"\n                                        id=\"stiScreening\"\n                                        value={objValues.stiScreening}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </Input>\n\n                                </FormGroup>\n                            </div>\n                            {objValues.stiScreening === 'true' && (\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Syndromic STI Screening </FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"syndromicStiScreening\"\n                                            id=\"syndromicStiScreening\"\n                                            value={objValues.syndromicStiScreening}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {sti.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n\n                                    </FormGroup>\n                                </div>\n                            )}\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Level of Adherence <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"adherenceLevel\"\n                                        id=\"adherenceLevel\"\n                                        value={objValues.adherenceLevel}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n\n                                        {adherenceLevel.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.adherenceLevel !== \"\" ? (\n                                        <span className={classes.error}>{errors.adherenceLevel}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            {objValues.adherenceLevel === 'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"whyAdherenceLevelPoor\"\n                                            id=\"whyAdherenceLevelPoor\"\n                                            value={objValues.whyAdherenceLevelPoor}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n\n                                            {whyAdherenceLevelPoor.map((value) => (\n                                                <option key={value.id} value={value.code}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n\n                                    </FormGroup>\n                                </div>\n                            )}\n                            {/* <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >PrEP Given</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepGiven\"\n                    id=\"prepGiven\"\n                    value={objValues.prepGiven}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select </option>\n                    <option value=\"Yes\">Yes </option>\n                    <option value=\"No\">No </option>\n                  </Input>\n                 \n                </FormGroup>\n              </div> */}\n\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Population Type <span\n                                        style={{ color: \"red\" }}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"populationType\"\n                                        id=\"populationType\"\n                                        disabled\n                                        value={selectedPopulationType}\n                                    // disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select Population Type</option>\n                                        {populationType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.populationType !== \"\" ? (\n                                        <span className={classes.error}>{errors.populationType}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Visit Type <span\n                                        style={{ color: \"red\" }}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"visitType\"\n                                        id=\"visitType\"\n                                        onChange={handleInputChange}\n                                        value={objValues.visitType}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select Visit Type</option>\n                                        {visitType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.visitType !== \"\" ? (\n                                        <span className={classes.error}>{errors.visitType}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Prep Type<span\n                                        style={{ color: \"red\" }}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepType\"\n                                        id=\"prepType\"\n                                        // disabled\n                                        onChange={handlePrepTypeChange}\n                                        value={objValues.prepType}\n                                    disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select Prep Type</option>\n                                        {prepType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepType !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepType}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">PrEP Regimen <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"regimenId\"\n                                        id=\"regimenId\"\n                                        onChange={handleInputChange}\n                                        value={objValues.regimenId}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select</option>\n                                        {prepRegimen.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.regimen}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.regimenId !== \"\" ? (\n                                        <span className={classes.error}>{errors.regimenId}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Prep Distribution Setting <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepDistributionSetting\"\n                                        id=\"prepDistributionSetting\"\n                                        onChange={handleInputChange}\n                                        value={objValues.prepDistributionSetting}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"></option>\n                                        {prepEntryPoint.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepDistributionSetting !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepDistributionSetting}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n\n                            {/* <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Duration <span style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"duration\"\n                                        id=\"duration\"\n                                        value={objValues.duration}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n\n                                        disabled={disabledField}\n                                    />\n                                    {errors.duration !== \"\" ? (\n                                        <span className={classes.error}>{errors.duration}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div> */}\n\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Months of Refill <span style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"monthsOfRefill\"\n                                        id=\"monthsOfRefill\"\n                                        value={objValues.monthsOfRefill}\n                                        min={0}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n\n                                        disabled={disabledField}\n                                    />\n                                    {errors.monthsOfRefill !== \"\" ? (\n                                        <span className={classes.error}>{errors.monthsOfRefill}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\n                  <Input\n                    type=\"date\"\n                    name=\"datePrepGiven\"\n                    id=\"datePrepGiven\"\n                    value={objValues.datePrepGiven}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.datePrepGiven !==\"\" ? (\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\n                  ) : \"\" }   \n                </FormGroup>\n              </div>  */}\n\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Other Drugs</FormLabelName>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"otherDrugs\"\n                                        id=\"otherDrugs\"\n                                        value={objValues.otherDrugs}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                            {/* <div className=\" mb-3 col-md-6\">\n                <FormGroup>\n                  <FormLabelName >PrEP Status</FormLabelName>\n                  <Input\n                    type=\"select\"\n                    name=\"prepStatus\"\n                    id=\"prepStatus\"\n                    value={objValues.prepStatus}\n                    onChange={handleInputChange}\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                    required\n                  >\n                    <option value=\"\">Select</option>\n                    {prepStatus.map((value) => (\n                            <option key={value.id} value={value.code}>\n                                {value.display}\n                            </option>\n                        ))}\n                  </Input>\n                 \n                </FormGroup>\n              </div> */}\n\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Family Planning</FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"familyPlanning\"\n                                        id=\"familyPlanning\"\n                                        onChange={handleInputChange}\n                                        value={objValues.familyPlanning}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"></option>\n                                        {familyPlanningMethod.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName>Date of Family Planning </FormLabelName>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"dateOfFamilyPlanning\"\n                                        id=\"dateOfFamilyPlanning\"\n                                        value={objValues.dateOfFamilyPlanning}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        onChange={handleInputChange}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.dateOfFamilyPlanning !== \"\" ? (\n                                        <span className={classes.error}>{errors.dateOfFamilyPlanning}</span>\n                                    ) : \"\"}\n\n                                </FormGroup>\n                            </div>\n                            \n                            <br/><br/>\n                            <Label as='a' color='teal' style={{width: '106%', height: '35px'}} ribbon>\n                                <h4 style={{color: '#fff'}}><input type=\"checkbox\" name=\"urinalysisTest\" value=\"Yes\"\n                                                                   onChange={handleCheckBoxUrinalysisTest}\n                                                                   checked={urinalysisTest.urinalysisTest == 'Yes' ? true : false}/> Urinalysis\n                                    Test</h4>\n                            </Label>\n                            <br/><br/>\n                            {urinalysisTest.urinalysisTest === 'Yes' && (<>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Urinalysis Test Date <span\n                                            style={{color: \"red\"}}> *</span></FormLabelName>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"testDate\"\n                                            id=\"testDate\"\n                                            value={urinalysisTest.testDate}\n                                            // defaultValue={objValues.urinalysis?.testDate}\n                                            onChange={handleInputChangeUrinalysisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            min={objValues.encounterDate}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                            disabled={disabledField}\n                                        />\n                                        {errors.testDate !== \"\" ? (\n                                            <span className={classes.error}>{errors.testDate}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Urinalysis Test Result <span\n                                            style={{color: \"red\"}}> *</span></FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"result\"\n                                            id=\"result\"\n                                            value={urinalysisTest.result}\n                                            onChange={handleInputChangeUrinalysisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {urineTestResult.map((value) => (\n                                                <option key={value.id} value={value.display}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n                                        {errors.result !== \"\" ? (\n                                            <span className={classes.error}>{errors.result}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n                                </div>\n                            </>)}\n                            <br/><br/>\n                            <Label as='a' color='blue' style={{width: '106%', height: '35px'}} ribbon>\n                                <h4 style={{color: '#fff'}}><input type=\"checkbox\" name=\"hepatitisTest\" value=\"Yes\"\n                                                                   onChange={handleCheckBoxHepatitisTest}\n                                                                   checked={hepatitisTest.hepatitisTest === 'Yes' ? true : false}/> Hepatitis\n                                    Test </h4>\n                            </Label>\n                            <br/><br/>\n                            {hepatitisTest.hepatitisTest === 'Yes' && (<>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Hepatitis Test Date</FormLabelName>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"testDate\"\n                                            id=\"testDate\"\n                                            value={hepatitisTest.testDate}\n                                            onChange={handleInputChangeHepatitisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            min={objValues.encounterDate}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                            disabled={disabledField}\n                                        />\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Hepatitis Test Result</FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"result\"\n                                            id=\"result\"\n                                            value={hepatitisTest.result}\n\n                                            onChange={handleInputChangeHepatitisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {hepaTestResult.map((value) => (\n                                                <option key={value.id} value={value.display}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n\n                                    </FormGroup>\n                                </div>\n                            </>)}\n                            <br/><br/>\n                            <Label as='a' color='red' style={{width: '106%', height: '35px'}} ribbon>\n                                <h4 style={{color: '#fff'}}><input type=\"checkbox\" name=\"syphilisTest\" value=\"Yes\"\n                                                                   onChange={handleCheckBoxSyphilisTest}\n                                                                   checked={syphilisTest.syphilisTest === 'Yes' ? true : false}/> Syphilis\n                                    Test </h4>\n                            </Label>\n                            <br/><br/>\n                            {syphilisTest.syphilisTest === 'Yes' && (<>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Syphilis Test Date</FormLabelName>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"testDate\"\n                                            id=\"testDate\"\n                                            value={syphilisTest.testDate}\n                                            onChange={handleInputChangeSyphilisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                            min={objValues.encounterDate}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        />\n\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <FormLabelName>Syphilis Test Result</FormLabelName>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"result\"\n                                            id=\"result\"\n                                            value={syphilisTest.result}\n                                            onChange={handleInputChangeSyphilisTest}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {sphylisTestResult.map((value) => (\n                                                <option key={value.id} value={value.display}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n\n                                    </FormGroup>\n                                </div>\n                                {syphilisTest.result === 'Others' && (\n                                    <div className=\" mb-3 col-md-6\">\n                                        <FormGroup>\n                                            <FormLabelName>Syphilis Test Result (Others)</FormLabelName>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"others\"\n                                                id=\"others\"\n                                                value={syphilisTest.others}\n                                                onChange={handleInputChangeSyphilisTest}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                                disabled={disabledField}\n                                            />\n\n                                        </FormGroup>\n                                    </div>\n                                )}\n                            </>)}\n                            <br/><br/>\n                            <Label as='a' color='black' style={{ width: '106%', height: '35px' }} ribbon>\n                                <h4 style={{ color: '#fff' }}>\n                                    <input type=\"checkbox\" name=\"otherTest\" value=\"Yes\"\n                                    onChange={handleCheckBoxOtherTest}\n                                    defaultChecked={true}\n                                    checked={otherTest.length > 0} /> \n                                    Other Test \n                                </h4>\n                            </Label>\n                            <br/><br/>\n                            {/* {otherTest.otherTest === 'Yes' && (<> */}\n                            {otherTest.length > 0 && otherTest.map((eachTest) => (\n                            <div className=\"row\" key={eachTest.localId}>\n                                <div className=\" mb-1 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName> Test Name</FormLabelName>\n                                        \n                                        <Input\n                                            type=\"select\"\n                                            name=\"name\"\n                                            id=\"name\"\n                                            value={eachTest.name}\n                                            onChange={(e) => handleInputChangeOtherTest(e, eachTest.localId)}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {otherTestResult.map((value) => (\n                                                <option key={value.id} value={value.code}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                        </Input>\n                                    </FormGroup>\n                                </div>\n                                {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\n                                    <div className=\" mb-1 col-md-4\">\n                                        <FormGroup>\n                                            <FormLabelName> Other Test Name</FormLabelName>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"otherTestName\"\n                                                id=\"otherTestName\"\n                                                value={eachTest.otherTestName}\n                                                onChange={(e) => handleInputChangeOtherTest(e, eachTest.localId)}\n                                                style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                                disabled={disabledField}\n\n                                            />\n\n                                        </FormGroup>\n                                    </div>\n                                )}\n                                <div className=\" mb-1 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName> Test Date</FormLabelName>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"testDate\"\n                                            id=\"testDate\"\n                                            value={eachTest.testDate}\n                                            onChange={(e) => handleInputChangeOtherTest(e, eachTest.localId)}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                            min={objValues.encounterDate}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        />\n\n                                    </FormGroup>\n                                </div>\n                                <div className=\" mb-1 col-md-4\">\n                                    <FormGroup>\n                                        <FormLabelName> Test Result</FormLabelName>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"result\"\n                                            id=\"result\"\n                                            value={eachTest.result}\n                                            onChange={(e) => handleInputChangeOtherTest(e, eachTest.localId)}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                            disabled={disabledField}\n                                        ></Input>\n\n                                    </FormGroup>\n                                </div>\n                                {/* add material ui divider  */}\n                                {otherTest.length > 1 && <Divider component=\"li\" style={{marginBottom: \"10px\"}} />}\n                            \n                            </div>))}\n                            {otherTest.length > 0 && <div>\n                                <MatButton\n                                    type=\"button\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={`${classes.button} col-md-4`}\n                                    startIcon={<AddIcon/>}\n                                    style={{backgroundColor: \"#014d88\"}}\n                                    onClick={handleCreateNewTest}\n                                    disabled={saving}\n                                >\n                                    <span style={{textTransform: \"capitalize\"}}>Add Test</span>\n                                </MatButton>\n                            </div>}\n\n                            <br/>\n                            <Label as='a' color='blue' style={{width: '106%', height: '35px'}} ribbon>\n                                <h4 style={{color: '#fff'}}>NEXT APPOINTMENT DATE </h4>\n                            </Label>\n                            <br/><br/><br/>\n                            <div className=\" mb-3 col-md-12\">\n                                <Input\n                                    type=\"date\"\n                                    name=\"nextAppointment\"\n                                    id=\"nextAppointment\"\n                                    className=\"col-md-6\"\n                                    value={objValues.nextAppointment}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                    min={objValues.encounterDate}\n                                    disabled={disabledField}\n                                />\n                                {errors.nextAppointment !== \"\" ? (\n                                    <span className={classes.error}>{errors.nextAppointment}</span>\n                                ) : \"\"}\n                            </div>\n                        </div>\n                        <br/>\n                        {props.activeContent && props.activeContent.actionType === \"update\" ? (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                hidden={disabledField}\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Update</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Updating...</span>\n                                )}\n                            </MatButton>\n                        </>) : (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Save</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Saving...</span>\n                                )}\n                            </MatButton>\n                        </>)}\n                    </Segment>\n                </Grid.Column>\n            </Grid>\n            {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\n\n        </div>\n    );\n};\n\nexport default ClinicVisit;\n","import React, { useEffect, useState } from 'react'\nimport MaterialTable from 'material-table';\nimport axios from \"axios\";\nimport { url as baseUrl } from \"./../../../api\";\nimport { token as token } from \"./../../../api\";\nimport { forwardRef } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { toast} from \"react-toastify\";\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { makeStyles } from '@material-ui/core/styles'\n//import { useHistory } from \"react-router-dom\";\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\nimport \"@reach/menu-button/styles.css\";\nimport {  Modal } from \"react-bootstrap\";\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\n\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    }, \n}))\n\n\n\nconst PatientnHistory = (props) => {\n    const [recentActivities, setRecentActivities] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [saving, setSaving] = useState(false)\n    const [open, setOpen] = React.useState(false)\n    const [record, setRecord] = useState(null)\n     const toggle = () => setOpen(!open);\n    useEffect(() => {\n        PatientHistory()\n        if(props.activeContent.actionType===\"view\"){\n            PatientHistory()\n        }\n      }, [props.patientObj.id, props.activeContent.actionType]);\n\n        ///GET LIST OF Patients\n        const PatientHistory =()=>{\n            setLoading(true)\n            axios\n               .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\n               )\n               .then((response) => {\n                setLoading(false)                       \n                    setRecentActivities(response.data)\n                })\n\n               .catch((error) => {\n               //console.log(error);\n               });\n           \n          }\n    \n    const LoadViewPage =(row,action)=>{\n               \n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action, activeTab:'home'})     \n    }\n    const LoadModal =(row)=>{\n        toggle()\n        setRecord(row)\n    }\n    const LoadDeletePage =(row)=>{\n        \n        if(row.path==='prep-eligibility'){ \n            setSaving(true)       \n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });  \n        }else if(row.path==='prep-clinic'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else if(row.path==='prep-enrollment2'){\n            setSaving(true)\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\n            axios\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setSaving(false)\n                toast.success(\"Record Deleted Successfully\");\n                PatientHistory()\n                toggle()\n            })\n            .catch((error) => {\n                setSaving(false)\n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage);\n                  }\n                  else{\n                    toast.error(\"Something went wrong. Please try again...\");\n                  }\n            });\n\n        }else{\n\n        }\n        \n    }\n\n\n  return (\n    <div>\n        \n    <br/>\n       \n            <MaterialTable\n            icons={tableIcons}\n              title=\"Patient Clinic Visit History \"\n              columns={[\n                { title: \"Visit Date\", field: \"date\" },\n                {\n                  title: \"Regimen Given\",\n                  field: \"regimen\",\n                },               \n                { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },        \n                { title: \"Actions\", field: \"actions\", filtering: false }, \n              ]}\n              isLoading={loading}\n              data={recentActivities && recentActivities.map((row) => ({\n                   date: row.encounterDate,\n                   regimen: row.regimen,\n                   nextAppointment: row.nextAppointment,\n                   actions:\n            \n                    <div>\n                        <Menu.Menu position='right'  >\n                        <Menu.Item >\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\n                            <Dropdown item text='Action'>\n\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\n                               <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\n                                <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\n                               <Dropdown.Item  onClick={()=>LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                            </Button>\n                        </Menu.Item>\n                        </Menu.Menu>\n                  </div>\n                  \n                  }))}\n            \n                        options={{\n                          headerStyle: {\n                              backgroundColor: \"#014d88\",\n                              color: \"#fff\",\n                          },\n                          searchFieldStyle: {\n                              width : '200%',\n                              margingLeft: '250px',\n                          },\n                          filtering: false,\n                          exportButton: false,\n                          searchFieldAlignment: 'left',\n                          pageSizeOptions:[10,20,100],\n                          pageSize:10,\n                          debounceInterval: 400\n                      }}\n            />\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered backdrop=\"static\">\n            <Modal.Header >\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n            Notification!\n        </Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\n                \n            </Modal.Body>\n        <Modal.Footer>\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\n            \n        </Modal.Footer>\n        </Modal>     \n    </div>\n  );\n}\n\nexport default PatientnHistory;\n\n\n","import React, {useState, Fragment, useEffect } from \"react\";\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\nimport ConsultationPage from './Home';\nimport ClinicHistoryPage from \"./ClinicHistory\";\n\nconst divStyle = {\n  borderRadius: \"2px\",\n  fontSize: 14,\n};\n\nconst ClinicVisitPage = (props) => {\n    const [key, setKey] = useState('home');\n    const patientObj = props.patientObj\n    \n    useEffect ( () => {\n      setKey(props.activeContent.activeTab)\n    }, [props.activeContent]);\n\n\n  return (\n    <Fragment>  \n      <Row>       \n        <Col xl={12}>\n          <Card style={divStyle}>            \n            <Card.Body>\n              {/* <!-- Nav tabs --> */}\n              <div className=\"custom-tab-1\">\n                <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={key}\n                    onSelect={(k) => setKey(k)}\n                    className=\"mb-3\"\n                >\n\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\n                  </Tab>  \n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\n                  </Tab>                   \n                </Tabs>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n        \n      </Row>\n    </Fragment>\n  );\n};\n\nexport default ClinicVisitPage;\n","import React, {useState, useEffect} from 'react';\nimport {\n    Card, CardBody, FormGroup, Label, Input, InputGroup,\n    InputGroupText, Label as FormLabelName,\n} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport {makeStyles} from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\nimport {url as baseUrl, token} from \"../../../api\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport {Spinner} from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    root: {\n        flexGrow: 1,\n        \"& .card-title\": {\n            color: '#fff',\n            fontWeight: 'bold'\n        },\n        \"& .form-control\": {\n            borderRadius: '0.25rem',\n            height: '41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\": {\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\": {\n            color: 'red'\n        },\n        \"& label\": {\n            fontSize: '14px',\n            color: '#014d88',\n            fontWeight: 'bold'\n        },\n    },\n    input: {\n        display: 'none'\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"11px\",\n    },\n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n}))\n\nconst PrEPCommencementForm = (props) => {\n\n    const patientObj = props.patientObj;\n    const classes = useStyles()\n    const [disabledField, setSisabledField] = useState(false);\n    const [prepRegimen, setprepRegimen] = useState([]);\n    const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] = useState([])\n    const [objValues, setObjValues] = useState({\n        dateInitialAdherenceCounseling: \"\",\n        datePrepStart: \"\",\n        height: \"\",\n        personId: patientObj.personId,\n        prepClientId: props.prepId,\n        regimenId: null,\n        urinalysisResult: \"\",\n        prepEligibilityUuid: \"\",\n        weight: \"\",\n        drugAllergies: \"\",\n        referred: \"\",\n        datereferred: \"\",\n        extra: {},\n        nextAppointment: \"\",\n        pregnant: true,\n        prepEnrollmentUuid: \"\",\n        duration: \"\",\n        prepDistributionSetting: \"\",\n        prepType: \"\",\n        monthsOfRefill: \"\",\n        liverFunctionTestResults: \"\",\n        dateLiverFunctionTestResults: \"\",\n        historyOfDrugToDrugInteraction: \"\"\n    });\n\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [pregnant, setpregnant] = useState([]);\n    const [patientDto, setPatientDto] = useState();\n    const [prepEntryPoint, setPrepEntryPoints] = useState([]);\n    const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\n    const [prepType, setPrepType] = useState([]);\n    const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\n\n    useEffect(() => {\n        PREGANACY_STATUS();\n        GetPatientDTOObj();\n        PrepRegimen();\n        PREP_ENTRY_POINT();\n        PREP_TYPE();\n        LiverFunctionTestResult();\n        HistoryOfDrugToDrugInteraction();\n        PREP_URINALYSIS_RESULT();\n        if (props.activeContent.id && props.activeContent.id !== \"\" && props.activeContent.id !== null) {\n            GetPatientCommercement(props.activeContent.id)\n            setSisabledField(props.activeContent.actionType === 'view' ? true : false)\n        }\n    }, []);\n    const PrepRegimen = async() => {\n        axios\n            .get(`${baseUrl}prep-regimen`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setprepRegimen(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n    const PREP_ENTRY_POINT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepEntryPoints(response.data);\n                // console.log(\"prep\", prepEntryPoint)\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n    const PREP_URINALYSIS_RESULT = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                \n                setUrinalysisTestResult(response.data);\n            })\n            .catch((error) => {\n                \n            });\n\n    }\n\n\n    const PREP_TYPE = async () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPrepType(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n\n\n    const LiverFunctionTestResult =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setLiverFunctionTestResult(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const HistoryOfDrugToDrugInteraction =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setHistoryOfDrugToDrugInteraction(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const GetPatientCommercement = (id) => {\n        axios\n            .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                //console.log(response.data.find((x)=> x.id===id));\n                setObjValues(response.data.find((x) => x.id === id));\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    const PREGANACY_STATUS = () => {\n        axios\n            .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setpregnant(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    const GetPatientDTOObj = () => {\n        axios\n            .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n                {headers: {\"Authorization\": `Bearer ${token}`}}\n            )\n            .then((response) => {\n                setPatientDto(response.data);\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n    }\n    //Vital signs clinical decision support\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\n        weight: \"\",\n        height: \"\",\n    })\n\n\n\n    const handleInputChange = e => {\n        setErrors({...errors, [e.target.name]: \"\"})\n\n        if (e.target.name === 'referred' && e.target.value === 'false') {\n            objValues.datereferred = ''\n            setObjValues({...objValues, ['datereferred']: ''});\n        } else if (e.target.name === 'monthsOfRefill') {\n            const durationInDays = (Number(e.target.value) * 30)\n            setObjValues({...objValues, monthsOfRefill: e.target.value, duration: durationInDays})\n\n        } \n        setObjValues({...objValues, [e.target.name]: e.target.value});\n    }\n\n    const validate = () => {\n        let temp = {...errors}\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\n        temp.prepType = objValues.prepType ? \"\" : \"This field is required\"\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\n        temp.height = objValues.height ? \"\" : \"This field is required\"\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\n        temp.referred = objValues.referred ? \"\" : \"This field is required\"\n        temp.prepDistributionSetting = objValues.prepDistributionSetting ? \"\" : \"This field is required\"\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    //to check the input value for clinical decision \n    const handleInputValueCheckHeight = (e) => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.name === \"height\" && (e.target.value < 48.26 || e.target.value > 216.408)) {\n            const message = \"Height cannot be greater than 216.408 and less than 48.26\"\n            setVitalClinicalSupport({...vitalClinicalSupport, height: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, height: \"\"})\n        }\n    }\n    const handleInputValueCheckBodyWeight = (e) => {\n        setErrors({...errors, [e.target.name]: \"\"})\n        if (e.target.name === \"weight\" && (e.target.value < 3 || e.target.value > 150)) {\n            const message = \"Body weight must not be greater than 150 and less than 3\"\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: message})\n        } else {\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: \"\"})\n        }\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (validate()) {\n            setSaving(true);\n            objValues.prepEnrollmentUuid = patientDto.uuid\n            if (props.activeContent && props.activeContent.actionType === \"update\") {//Perform operation for updation action\n                axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                ).then(response => {\n                    setSaving(false);\n                    patientObj.commencementCount = 1\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\n\n                })\n                    .catch(error => {\n                        setSaving(false);\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n            } else {\n                axios.post(`${baseUrl}prep/commencement`, objValues,\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\n                ).then(response => {\n                    setSaving(false);\n                    patientObj.commencementCount = 1\n                    props.PatientObject();\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\n\n                })\n                    .catch(error => {\n                        setSaving(false);\n                        if (error.response && error.response.data) {\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\n                            if (error.response.data.apierror) {\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n            }\n\n        }\n    }\n\n    // console.log(props.patientObj.gender)\n\n    const handlePrepTypeChange = (e) => {\n        // check the prep type. if it is ed prep or others, fetch all prep types instead\n        \n        setObjValues({...objValues, regimenId: \"\", prepType: e.target.value})\n        if (e.target.value === 'PREP_TYPE_OTHERS' || e.target.value === 'PREP_TYPE_ED_PREP') {\n            PrepRegimen();\n        } else {\n            axios\n                .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`,\n                    {headers: {\"Authorization\": `Bearer ${token}`}}\n                )\n                .then((response) => {\n                    setprepRegimen(response.data);\n                })\n                .catch((error) => {\n                    //console.log(error);\n                });\n        }\n\n        setErrors({...errors, [e.target.name]: \"\"})\n\n    }\n\n    return (\n        <div>\n            <Card className={classes.root}>\n                <CardBody>\n                    <form>\n                        <div className=\"row\">\n                            <h2> PrEP Commencement </h2>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"uniqueId\">Date of Initial Adherence Counseling <span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dateInitialAdherenceCounseling\"\n                                        id=\"dateInitialAdherenceCounseling\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.dateInitialAdherenceCounseling}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.dateInitialAdherenceCounseling !== \"\" ? (\n                                        <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Date PrEP started <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"datePrepStart\"\n                                        id=\"datePrepStart\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.datePrepStart}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.datePrepStart !== \"\" ? (\n                                        <span className={classes.error}>{errors.datePrepStart}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\" mb-3 col-md-4\">\n                                <FormGroup>\n                                    <Label>Body Weight <span style={{color: \"red\"}}> *</span></Label>\n                                    <InputGroup>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"weight\"\n                                            id=\"weight\"\n                                            onChange={handleInputChange}\n                                            min=\"3\"\n                                            max=\"150\"\n                                            value={objValues.weight}\n                                            onKeyUp={handleInputValueCheckBodyWeight}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                            disabled={disabledField}\n                                        />\n                                        <InputGroupText addonType=\"append\" style={{\n                                            backgroundColor: \"#014D88\",\n                                            color: \"#fff\",\n                                            border: \"1px solid #014D88\",\n                                            borderRadius: \"0rem\"\n                                        }}>\n                                            kg\n                                        </InputGroupText>\n                                    </InputGroup>\n                                    {vitalClinicalSupport.bodyWeight !== \"\" ? (\n                                        <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\n                                    ) : \"\"}\n                                    {errors.weight !== \"\" ? (\n                                        <span className={classes.error}>{errors.weight}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-4\">\n                                <FormGroup>\n                                    <Label>Height <span style={{color: \"red\"}}> *</span></Label>\n                                    <InputGroup>\n                                        <InputGroupText\n                                            addonType=\"append\"\n                                            style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}\n                                        >\n                                            cm\n                                        </InputGroupText>\n                                        <Input\n                                            type=\"number\"\n                                            name=\"height\"\n                                            id=\"height\"\n                                            onChange={handleInputChange}\n                                            value={objValues.height}\n                                            min=\"48.26\"\n                                            max=\"216.408\"\n                                            disabled={disabledField}\n                                            onKeyUp={handleInputValueCheckHeight}\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\n                                        />\n                                        <InputGroupText\n                                            addonType=\"append\"\n\n                                            style={{\n                                                backgroundColor: \"#992E62\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #992E62\",\n                                                borderRadius: \"0rem\"\n                                            }}\n                                        >\n                                            {objValues.height !== '' ? (objValues.height / 100).toFixed(2) + \"m\" : \"m\"}\n                                        </InputGroupText>\n                                    </InputGroup>\n                                    {vitalClinicalSupport.height !== \"\" ? (\n                                        <span className={classes.error}>{vitalClinicalSupport.height}</span>\n                                    ) : \"\"}\n                                    {errors.height !== \"\" ? (\n                                        <span className={classes.error}>{errors.height}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 mt-2 col-md-4\">\n                                {objValues.weight !== \"\" && objValues.height !== '' && (\n                                    <FormGroup>\n                                        <Label> {\" \"}</Label>\n                                        <InputGroup>\n                                            <InputGroupText addonType=\"append\" style={{\n                                                backgroundColor: \"#014D88\",\n                                                color: \"#fff\",\n                                                border: \"1px solid #014D88\",\n                                                borderRadius: \"0rem\"\n                                            }}>\n                                                BMI\n                                                : {(objValues.weight / ((objValues.height / 100) * (objValues.height / 100))).toFixed(2)}\n                                            </InputGroupText>\n\n                                        </InputGroup>\n                                    </FormGroup>\n                                )}\n                            </div>\n                            {(props.patientObj.gender === 'Female' || props.patientObj.gender === 'female' || props.patientObj.gender === 'FEMALE') && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"\">Pregnancy Status</Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"pregnant\"\n                                            id=\"pregnant\"\n                                            onChange={handleInputChange}\n                                            value={objValues.pregnant}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\"></option>\n                                            {pregnant.map((value) => (\n                                                <option key={value.id} value={value.code}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n\n                                        </Input>\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"\">Breast Feeding</Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"breastFeeding\"\n                                            id=\"breastFeeding\"\n                                            onChange={handleInputChange}\n                                            value={objValues.breastFeeding}\n                                            disabled={disabledField}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"Yes\"> Yes</option>\n                                            <option value=\"No\"> No</option>\n                                        </Input>\n\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"\">History of drug Allergies</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"drugAllergies\"\n                                        id=\"drugAllergies\"\n                                        onChange={handleInputChange}\n                                        value={objValues.drugAllergies}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                    </Input>\n\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"urinalysisResult\">Urinalysis Result</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"urinalysisResult\"\n                                        id=\"urinalysisResult\"\n                                        onChange={handleInputChange}\n                                        value={objValues.urinalysisResult}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                            {urinalysisTestResult.map((value) => (\n                                                <option key={value.id} value={value.display}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"historyOfDrugToDrugInteraction\">History of Drug-Drug Interactions<span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"select\"\n                                        name=\"historyOfDrugToDrugInteraction\"\n                                        id=\"historyOfDrugToDrugInteraction\"\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.historyOfDrugToDrugInteraction}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select </option>\n                                        {historyOfDrugToDrugInteraction.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.historyOfDrugToDrugInteraction !== \"\" ? (\n                                        <span className={classes.error}>{errors.historyOfDrugToDrugInteraction}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"liverFunctionTestResults\">Liver Function Tests Result<span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"select\"\n                                        name=\"liverFunctionTestResults\"\n                                        id=\"liverFunctionTestResults\"\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.liverFunctionTestResults}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select Result</option>\n                                        {liverFunctionTestResult.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                    </Input>\n                                    {errors.liverFunctionTestResults !== \"\" ? (\n                                        <span className={classes.error}>{errors.liverFunctionTestResults}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"dateLiverFunctionTestResults\">Date of Liver Function Tests Result  <span\n                                        style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        type=\"date\"\n                                        name=\"dateLiverFunctionTestResults\"\n                                        id=\"dateLiverFunctionTestResults\"\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                        value={objValues.dateLiverFunctionTestResults}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n                                    {errors.dateLiverFunctionTestResults !== \"\" ? (\n                                        <span className={classes.error}>{errors.dateLiverFunctionTestResults}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"\">Referred <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"referred\"\n                                        id=\"referred\"\n                                        onChange={handleInputChange}\n                                        value={objValues.referred}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select</option>\n                                        <option value=\"true\"> Yes</option>\n                                        <option value=\"false\"> No</option>\n                                    </Input>\n                                    {errors.referred !== \"\" ? (\n                                        <span className={classes.error}>{errors.referred}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            {objValues.referred === 'true' && (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                        <Label for=\"datereferred\">Date referred</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"datereferred\"\n                                            id=\"datereferred\"\n                                            onChange={handleInputChange}\n                                            value={objValues.datereferred}\n                                            min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                                            disabled={disabledField}\n                                        />\n                                        {errors.datereferred !== \"\" ? (\n                                            <span className={classes.error}>{errors.datereferred}</span>\n                                        ) : \"\"}\n                                    </FormGroup>\n\n                                </div>\n                            )}\n                            \n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"prepType\">Prep Type At Start <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepType\"\n                                        id=\"prepType\"\n                                        // disabled\n                                        onChange={handlePrepTypeChange}\n                                        value={objValues.prepType}\n                                        // disabled={disabledField}\n                                    >\n                                        <option value=\"\">Select Prep Type</option>\n                                        {prepType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepType !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepType}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label for=\"regimenId\">PrEP Regimen <span style={{color: \"red\"}}> *</span></Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"regimenId\"\n                                        id=\"regimenId\"\n                                        onChange={handleInputChange}\n                                        value={objValues.regimenId}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"> Select</option>\n                                        {prepRegimen.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.regimen}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.regimenId !== \"\" ? (\n                                        <span className={classes.error}>{errors.regimenId}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n\n                            </div>\n                            <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                    <FormLabelName for=\"\">Prep Distribution Setting <span\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"prepDistributionSetting\"\n                                        id=\"prepDistributionSetting\"\n                                        onChange={handleInputChange}\n                                        value={objValues.prepDistributionSetting}\n                                        disabled={disabledField}\n                                    >\n                                        <option value=\"\"></option>\n                                        {prepEntryPoint.map((value) => (\n                                            <option key={value.code} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.prepDistributionSetting !== \"\" ? (\n                                        <span className={classes.error}>{errors.prepDistributionSetting}</span>\n                                    ) : \"\"}\n                                </FormGroup>\n                            </div>\n\n                            {/* <div className=\" mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Date PrEP Given</Label>\n                            <Input\n                                type=\"date\"\n                                name=\"datePrepGiven\"\n                                id=\"datePrepGiven\"\n                                value={objValues.datePrepGiven}\n                                onChange={handleInputChange}\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                disabled={disabledField}\n                            />\n                                \n                            </FormGroup>\n                        </div>  */}\n                            {/* <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Duration</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"duration\"\n                                        id=\"duration\"\n                                        value={objValues.duration}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                </FormGroup>\n                            </div> */}\n                            <div className=\" mb-3 col-md-6\">\n                                <FormGroup>\n                                    <Label>Months Of Refill</Label>\n                                    <Input\n                                        type=\"number\"\n                                        name=\"monthsOfRefill\"\n                                        id=\"monthsOfRefill\"\n                                        value={objValues.monthsOfRefill}\n                                        min={0}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                </FormGroup>\n                            </div>\n                        </div>\n\n                        {saving ? <Spinner/> : \"\"}\n                        <br/>\n\n                        {props.activeContent && props.activeContent.actionType ? (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                hidden={disabledField}\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Update</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Updating...</span>\n                                )}\n                            </MatButton>\n                        </>) : (<>\n                            <MatButton\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.button}\n                                startIcon={<SaveIcon/>}\n                                style={{backgroundColor: \"#014d88\"}}\n                                onClick={handleSubmit}\n                                disabled={saving}\n                            >\n                                {!saving ? (\n                                    <span style={{textTransform: \"capitalize\"}}>Save</span>\n                                ) : (\n                                    <span style={{textTransform: \"capitalize\"}}>Saving...</span>\n                                )}\n                            </MatButton>\n                        </>)}\n                    </form>\n                </CardBody>\n            </Card>\n        </div>\n    );\n}\n\nexport default PrEPCommencementForm;\n","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\n// import { useHistory } from \"react-router-dom\";\n// import {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import { DateTimePicker } from \"react-widgets\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        //maxWidth: 752,\n        //flexGrow: 1,\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    },  \n    success: {\n        color: \"#4BB543 \",\n        fontSize: \"11px\",\n    },\n    \n}));\n\nconst PrEPEligibiltyScreeningForm = (props) => {\n\n    const patientObj = props.patientObj;\n    //let history = useHistory();\n    const classes = useStyles()\n    const [disabledField, setDisabledField] = useState(false);\n    const [objValues, setObjValues] = useState({\n        dateInterruption: \"\",\n        why: \"\",\n        interruptionType: \"\",\n        dateRestartPlacedBackMedication: \"\",\n        personId: patientObj.personId,\n        causeOfDeath: \"\",\n        dateClientDied: \"\",\n        dateClientReferredOut: \"\",\n        facilityReferredTo: \"\",\n        interruptionDate: \"\",\n        interruptionReason: \"\",\n        sourceOfDeathInfo: \"\",\n        dateSeroconverted:\"\",\n        reasonStopped:\"\",\n        reasonStoppedOthers:\"\"\n      });\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [prepStatus, setPrepStatus] = useState([]);\n    const [reasonStooped, setReasonStooped] = useState([]);\n    const [causeOfDeath, setCauseOfDeath] = useState([]);\n    const [patientDto, setPatientDto] = useState();\n    useEffect(() => {         \n        PREP_STATUS();\n        PREP_STATUS_STOPPED_REASON();\n        GetPatientDTOObj();\n        CAUSE_DEATH();\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\n            GetPatientInterruption(props.activeContent.id)\n            setDisabledField(props.activeContent.actionType==='view'? true : false)\n        }\n    }, []);\n    const GetPatientDTOObj =()=>{\n        axios\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n               setPatientDto(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    }\n    const GetPatientInterruption =(id)=>{\n        axios\n           .get(`${baseUrl}prep-interruption/${props.activeContent.id}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n            //    setObjValues(response.data.find((x)=> x.id===id));\n               setObjValues(response.data);\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    }\n    const PREP_STATUS =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPrepStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const CAUSE_DEATH =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCauseOfDeath(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //\n    const PREP_STATUS_STOPPED_REASON =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setReasonStooped(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => { \n        setErrors({...errors, [e.target.name]: \"\"}) \n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_STOPPED'){\n            objValues.reasonStopped=\"\"\n            objValues.reasonStoppedOthers=\"\"\n            setObjValues ({...objValues,  ['reasonStopped']: \"\"});\n            setObjValues ({...objValues,  ['reasonStoppedOthers']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        } \n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_DEAD'){\n            objValues.causeOfDeath=\"\"\n            objValues.sourceOfDeathInfo=\"\"\n            objValues.dateClientDied=\"\"\n            //objValues.dateClientDied\n            setObjValues ({...objValues,  ['causeOfDeath']: \"\"});\n            setObjValues ({...objValues,  ['sourceOfDeathInfo']: \"\"});\n            setObjValues ({...objValues,  ['dateClientDied']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_RESTART'){\n            objValues.dateRestartPlacedBackMedication=\"\"\n            setObjValues ({...objValues,  ['dateRestartPlacedBackMedication']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_TRANSFER_OUT'){\n            objValues.dateClientReferredOut=\"\"\n            objValues.facilityReferredTo=\"\"\n            setObjValues ({...objValues,  ['facilityReferredTo']: \"\"});\n            setObjValues ({...objValues,  ['dateClientReferredOut']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_SEROCONVERTED'){\n            objValues.linkToArt=\"\"\n            objValues.dateSeroconverted=\"\"\n            setObjValues ({...objValues,  ['dateSeroconverted']: \"\"});\n            setObjValues ({...objValues,  ['linkToArt']: \"\"});\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        }     \n        //     \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n\n    }\n    const validate = () => {\n        let temp = { ...errors }\n        //temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n         //console.log(objValues.interruptionDate)\n         //objValues.interruptionDate =  objValues.interruptionDate!==\"\" ? objValues.interruptionDate : objValues.dateSeroconverted\n         if(objValues.interruptionDate===\"\" && objValues.dateSeroconverted!==\"\"){\n            objValues.interruptionDate =  objValues.dateSeroconverted\n         }else if(objValues.interruptionDate===\"\" && objValues.dateRestartPlacedBackMedication!==\"\"){\n            objValues.interruptionDate =  objValues.dateRestartPlacedBackMedication\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientReferredOut!==\"\"){\n            objValues.interruptionDate =  objValues.dateClientReferredOut\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientDied!==\"\"){\n            objValues.interruptionDate =  objValues.dateClientDied\n         }else{\n            //objValues.interruptionDate = objValues.interruptionDate\n         }\n         if(validate()){\n          setSaving(true);\n          if(props.activeContent && props.activeContent.actionType===\"update\"){\n          axios.put(`${baseUrl}prep-interruption/${props.activeContent.id}`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          ).then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.PatientObject();\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  if(error.response && error.response.data){\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    if(error.response.data.apierror){\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                    }else{\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                    }\n                }else{\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                }\n              });\n            }else{\n                axios.post(`${baseUrl}prep/interruption`,objValues,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n                \n                ).then(response => {\n                        setSaving(false);\n                        toast.success(\"Record save successful\");\n                        props.PatientObject();\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n\n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                            toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            }else{\n                            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        }else{\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n\n            }\n        }\n          \n    }\n\n\n  return (      \n      <div>                   \n        <Card className={classes.root}>\n            <CardBody>\n            <form >\n                <div className=\"row\">\n                    <h2> PrEP Discontinuations & Interruptions</h2>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">PrEP Interruptions <span style={{ color:\"red\"}}> *</span></Label>\n                        <Input\n                            type=\"select\"\n                            name=\"interruptionType\"\n                            id=\"interruptionType\"\n                            onChange={handleInputChange}\n                            value={objValues.interruptionType}\n                            required\n                        >\n                        <option value=\"\">Select</option>\n                        {prepStatus.map((value) => (\n                            <option key={value.id} value={value.code}>\n                                {value.display}\n                            </option>\n                        ))}\n                        </Input>\n                        {errors.interruptionType !==\"\" ? (\n                                <span className={classes.error}>{errors.interruptionType}</span>\n                            ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Date of Interruption <span style={{ color:\"red\"}}> *</span></Label>\n                            <Input\n                                type=\"date\"\n                                name=\"interruptionDate\"\n                                id=\"interruptionDate\"\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.interruptionDate}\n                                required\n                            />\n                            {errors.interruptionDate !==\"\" ? (\n                                <span className={classes.error}>{errors.interruptionDate}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                    )}\n                     {objValues.interruptionType==='PREP_STATUS_STOPPED' && (\n                        <>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Reason Stopped </Label>\n                            <Input\n                                type=\"select\"\n                                name=\"reasonStopped\"\n                                id=\"reasonStopped\"\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.reasonStopped}\n                                \n                            >\n                                <option value=\"\">Select</option>\n                                {reasonStooped.map((value) => (\n                                    <option key={value.id} value={value.display}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                            </Input>\n                            {errors.reasonStopped !==\"\" ? (\n                                <span className={classes.error}>{errors.reasonStopped}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                        {objValues.reasonStopped ==='Others (Pls specify)' && (\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Other Reason Stopped </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"reasonStoppedOthers\"\n                                id=\"reasonStoppedOthers\"\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                onChange={handleInputChange}\n                                value={objValues.reasonStoppedOthers}\n                                \n                            ></Input>\n                            {errors.reasonStoppedOther !==\"\" ? (\n                                <span className={classes.error}>{errors.reasonStopped}</span>\n                            ) : \"\" } \n                            </FormGroup>\n                        </div>\n                        )}\n                        </>\n                     )}\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\n                    <>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateClientReferredOut\"\n                            id=\"dateClientReferredOut\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateClientReferredOut}\n                            required\n                        />\n                        {errors.dateClientReferredOut !==\"\" ? (\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Facility referred to </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"facilityReferredTo\"\n                            id=\"facilityReferredTo\"\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.facilityReferredTo}\n                            required\n                        />\n                        {errors.facilityReferredTo !==\"\" ? (\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                    </>\n                    )}\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\n                    <>\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date of client died </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateClientDied\"\n                            id=\"dateClientDied\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateClientDied}\n                            required\n                        />\n                        {errors.dateClientDied !==\"\" ? (\n                            <span className={classes.error}>{errors.dateClientDied}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Cause of death</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"causeOfDeath\"\n                            id=\"causeOfDeath\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.causeOfDeath}\n                            required\n                        >\n                            <option value=\"\">Select</option>\n                                {causeOfDeath.map((value) => (\n                                    <option key={value.id} value={value.display}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                        </Input>\n                        {errors.causeOfDeath !==\"\" ? (\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\n                        ) : \"\" } \n                        </FormGroup>\n                    </div>\n                   \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Source of death information  </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"sourceOfDeathInfo\"\n                            id=\"sourceOfDeathInfo\"\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.sourceOfDeathInfo}\n                            required\n                        />\n                        {errors.sourceOfDeathInfo !==\"\" ? (\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    </>\n                    )}\n                    {/* <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\n                        <Input\n                            type=\"text\"\n                            name=\"why\"\n                            id=\"why\"\n                            onChange={handleInputChange}\n                            value={objValues.why}\n                            required\n                        />\n                        \n                        </FormGroup>\n                    </div> */}\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Date of restart if placed back on medication</Label>\n                        <Input\n                            className=\"form-control\"\n                            type=\"date\"\n                            name=\"dateRestartPlacedBackMedication\"\n                            id=\"dateRestartPlacedBackMedication\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            value={objValues.dateRestartPlacedBackMedication}\n                            onChange={handleInputChange}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                        />\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\n                        ) : \"\" }    \n                        </FormGroup>\n                    </div>\n                     )}\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\n                    <>\n                     <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\n                        <Input\n                            type=\"date\"\n                            name=\"dateSeroconverted\"\n                            id=\"dateSeroconverted\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            onChange={handleInputChange}\n                            value={objValues.dateSeroconverted}\n                            required\n                        />\n                        {errors.dateSeroconverted !==\"\" ? (\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div> \n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Link to ART</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"linkToArt\"\n                            id=\"linkToArt\"\n                            onChange={handleInputChange}\n                            value={objValues.linkToArt}  \n                        >\n                        <option value=\"\"> Select</option>\n                        <option value=\"true\">Yes </option>\n                        <option value=\"false\"> No</option>\n                        </Input>\n                        {errors.linkToArt !==\"\" ? (\n                            <span className={classes.error}>{errors.linkToArt}</span>\n                        ) : \"\" }\n                        </FormGroup>\n                    </div>\n                    {objValues.linkToArt==='true' && (\n                    <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Date link to ART</Label>\n                        <Input\n                            className=\"form-control\"\n                            type=\"date\"\n                            name=\"dateLinkToArt\"\n                            id=\"dateLinkToArt\"\n                            //min=\"1983-12-31\"\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                            value={objValues.dateLinkToArt}\n                            onChange={handleInputChange}\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                        />\n                        {errors.dateLinkToArt !==\"\" ? (\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\n                        ) : \"\" }    \n                        </FormGroup>\n                    </div>\n                    )}\n                    </>)}\n                    \n                </div>\n\n                {saving ? <Spinner /> : \"\"}\n                <br />\n            \n                <MatButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    startIcon={<SaveIcon />}\n                    onClick={handleSubmit}\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                    >\n                    {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                    ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                    )}\n                </MatButton>\n            \n                <MatButton\n                    variant=\"contained\"\n                    className={classes.button}\n                    startIcon={<CancelIcon />}\n                    onClick={props.toggle}\n                    style={{backgroundColor:'#992E62'}}\n                    \n                >\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\n                </MatButton>\n            \n                </form>\n            </CardBody>\n        </Card>                    \n    </div>\n  );\n}\n\nexport default PrEPEligibiltyScreeningForm;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, Checkbox, FormControl, FormControlLabel, FormLabel, } from \"@material-ui/core\";\nimport MatButton from '@material-ui/core/Button'\nimport {toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\n// import {TiArrowBack} from 'react-icons/ti'\nimport {token, url as baseUrl } from \"../../../api\";\nimport 'react-phone-input-2/lib/style.css'\nimport {Label as LabelRibbon, Button, Message, Select, Dropdown} from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport * as moment from 'moment';\nimport SaveIcon from '@material-ui/icons/Save'\n\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        \"& .card-title\":{\n            color:'#fff',\n            fontWeight:'bold'\n        },\n        \"& .form-control\":{\n            borderRadius:'0.25rem',\n            height:'41px'\n        },\n        \"& .card-header:first-child\": {\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\n        },\n        \"& .dropdown-toggle::after\": {\n            display: \" block !important\"\n        },\n        \"& select\":{\n            \"-webkit-appearance\": \"listbox !important\"\n        },\n        \"& p\":{\n            color:'red'\n        },\n        \"& label\":{\n            fontSize:'14px',\n            color:'#014d88',\n            fontWeight:'bold'\n        }\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst BasicInfo = (props) => {\n    const classes = useStyles();\n    const [disabledField, setSisabledField] = useState(false);\n    const patientID= props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [counselingType, setCounselingType] = useState([]);\n    const [visitType, setVisitType] = useState([]);\n    const [reasonForDecline, setReasonForDecline] = useState([]);\n    const [populationType, setPopulationType] = useState([]);\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\n    let temp = { ...errors }\n\n    const [objValues, setObjValues]= useState(\n            {\n                counselingType: \"\",\n                drugUseHistory: {},\n                extra: {},\n                firstTimeVisit: true,\n                hivRisk: {},\n                numChildrenLessThanFive: \"\",\n                numWives: \"\",\n                personId: \"\",\n                personalHivRiskAssessment: {},\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\n                sexPartnerRisk: {},\n                stiScreening: {},\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\n                uniqueId: \"\",\n                visitDate:\"\",\n                visitType:\"\",\n                populationType: \"\",\n                pregnancyStatus: \"\",\n                score: 0\n            }\n    )\n    useEffect( async () => { \n        \n        CounselingType();\n        VisitType();\n        await ReasonForDecline();\n        PopulationType();\n        PregnancyStatus();\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\n            GetPatientPrepEligibility(props.activeContent.id)\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\n        }\n    }, [props.patientObj]);\n    const GetPatientPrepEligibility =(id)=>{\n        axios\n           .get(`${baseUrl}prep/eligibility/${id}`,\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\n           )\n           .then((response) => {\n                // console.log(response.data);\n               setObjValues(response.data);\n               setRiskAssessment(response.data.personalHivRiskAssessment)\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\n               setStiScreening(response.data.stiScreening)\n               setDrugHistory(response.data.drugUseHistory)\n               setAssessmentForPepIndication(response.data.assessmentForPepIndication)\n               setAssessmentForAcuteHivInfection(response.data.assessmentForAcuteHivInfection)\n               setServicesReceivedByClient(response.data.servicesReceivedByClient)\n               setAssessmentForPrepEligibility(response.data.assessmentForPrepEligibility)\n           })\n           .catch((error) => {\n           //console.log(error);\n           });          \n    } \n    const CounselingType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCounselingType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const VisitType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setVisitType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const ReasonForDecline = async ()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setReasonForDecline(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PopulationType =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPopulationType(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n\n    const handleInputChange = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \n    }\n    const [riskAssessment, setRiskAssessment]= useState(\n        {\n            unprotectedVaginalSexCasual:\"\",\n            unprotectedVaginalSexRegular:\"\",\n            uprotectedAnalSexWithCasual:\"\",\n            uprotectedAnalSexWithRegular:\"\", \n            stiHistory:\"\",  \n            sharedNeedles:\"\",   \n            moreThan1SexPartner:\"\",\n            analSexWithPartner :\"\",\n            unprotectedAnalSexWithPartner:\"\",\n            haveYouPaidForSex:\"\",\n            haveSexWithoutCondom:\"\",\n            experienceCondomBreakage:\"\",\n            takenPartInSexualOrgy:\"\",\n                          \n        }\n    )\n    const handleInputChangeRiskAssessment = e => { \n        //setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \n    }\n    // Getting the number count of riskAssessment True\n    const actualRiskCountTrue=Object.values(riskAssessment)\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\n        {\n            haveSexWithHIVPositive:\"\",\n            haveSexWithPartnerInjectDrug:\"\",\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\n            haveSexWithPartnerTransgender :\"\",\n            sexWithPartnersWithoutCondoms:\"\",             \n        }\n    )\n    const handleInputChangeRiskAssessmentPartner = e => { \n        setErrors({...temp, [e.target.name]:\"\"}) \n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\n                    \n    }\n    // Getting the number count of sexPartRiskCount True\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\n    const [stiScreening, setStiScreening]= useState(\n        {\n            vaginalDischarge:\"\",\n            lowerAbdominalPains :\"\",\n            urethralDischarge :\"\",\n            complaintsOfScrotal:\"\", \n            complaintsGenitalSore  :\"\",\n            analDischarge:\"\",\n            analItching:\"\",\n            analpain:\"\",\n            swollenIguinal:\"\", \n            genitalScore:\"\",\n                \n        }\n    )\n    const handleInputChangeStiScreening = e => { \n        setErrors({...errors, [e.target.name]: \"\"}) \n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \n                \n    }\n    // Getting the number count of STI True\n    const actualStiTrue=Object.values(stiScreening)\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\n    const [drugHistory, setDrugHistory]= useState(\n        {\n            useAnyOfTheseDrugs:\"\",\n            inject:\"\",\n            sniff:\"\", \n            smoke:\"\", \n            Snort:\"\", \n            useDrugSexualPerformance:\"\",\n            hivTestedBefore:\"\",\n            recommendHivRetest:\"\",\n            clinicalSetting:\"\", \n            reportHivRisk:\"\",\n            hivExposure:\"\",\n            hivTestResultAtvisit:\"\", //\n            lastTest:\"\"\n        }\n    )\n    const handleInputChangeDrugHistory = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        if(drugHistory.hivTestedBefore===\"true\"){\n            drugHistory.lastTest=\"\"\n            setDrugHistory ({...drugHistory,  ['lastTest']: ''}); \n        } \n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForPepIndication, setAssessmentForPepIndication]= useState(\n        {\n            unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours:\"\",\n            sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours:\"\",\n        }\n    )\n    const handleInputChangeAssessmentForPepIndication = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForPepIndication ({...assessmentForPepIndication,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection]= useState(\n        {\n            acuteHivSymptomsLasttwoWeeks:\"\",\n            unprotectedAnalOrVaginalOrSharedNeedlesLast28Days:\"\",\n        }\n    )\n    const handleInputChangeAssessmentForAcuteHivInfection = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForAcuteHivInfection ({...assessmentForAcuteHivInfection,  [e.target.name]: e.target.value});         \n    }\n    const [assessmentForPrepEligibility, setAssessmentForPrepEligibility]= useState(\n        {\n            hivNegative:\"\",\n            hivRiskScore:\"\",\n            noIndicationForPep: \"\",\n            hasNoProteinuria: \"\",\n            noHistoryOrSignsOfLiverAbnormalitiesCabLa: \"\",\n            noHistoryOfDrugToDrugInteractionCabLa: \"\",\n            noHistoryOfDrugHypersensitivityCabLa: \"\",\n\n        }\n    )\n    const handleInputChangeAssessmentForPrepEligibility = e => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        setAssessmentForPrepEligibility ({...assessmentForPrepEligibility,  [e.target.name]: e.target.value});         \n    }\n    const [servicesReceivedByClient, setServicesReceivedByClient]= useState(\n        {\n            willingToCommencePrep:\"\",\n            reasonsForDecline:[],\n            otherReasonsForDecline: \"\",\n\n        }\n    )\n    const handleInputChangeServicesReceivedByClient = (e, data) => { \n        setErrors({...temp, [e.target.name]:\"\"})\n        \n        setServicesReceivedByClient ({...servicesReceivedByClient,  [e.target.name]: e.target.value});         \n    }\n\n    const handleInputReasonsForDecline = (e, data) => {\n        setServicesReceivedByClient({...servicesReceivedByClient, reasonsForDecline: data.value})\n    }\n\n    const [assessmentScore, setAssessmentScore] = useState(0);\n   \n\n    /*****  Validation  */\n     const validate = () => {\n        //PREP FORM VALIDATION\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\n           temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\n           temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\n           \n            setErrors({ ...temp })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    const handleSubmit =(e)=>{\n        e.preventDefault();\n            \n            if(validate()){\n                setSaving(true);\n            //objValues.htsClientId= clientId\n            objValues.drugUseHistory= drugHistory\n            objValues.personalHivRiskAssessment= riskAssessment\n            objValues.sexPartnerRisk= riskAssessmentPartner\n            objValues.stiScreening= stiScreening\n            objValues.personId= patientID\n            objValues.uniqueId= patientID\n            objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection\n            objValues.assessmentForPepIndication = assessmentForPepIndication\n            objValues.assessmentForPrepEligibility = assessmentForPrepEligibility\n            objValues.servicesReceivedByClient = servicesReceivedByClient\n            objValues.score = getPrepEligibilityScore();\n                if(props.activeContent && props.activeContent.actionType===\"update\"){//Perform operation for updation action\n                    axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.eligibilityCount= 1\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\n                        props.PatientObject();\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n        \n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            }else{\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        }else{\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }else{\n                    axios.post(`${baseUrl}prep/eligibility`,objValues,\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\n                    .then(response => {\n                        setSaving(false);\n                        props.patientObj.eligibilityCount= 1\n                        //props.setPatientObj(response.data)\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\n        \n                    })\n                    .catch(error => {\n                        setSaving(false);\n                        if(error.response && error.response.data){\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                            if(error.response.data.apierror){\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\n                            } else {\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\n                            }\n                        } else {\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\n                        }\n                    });\n                }\n           \n            }else{\n                setSaving(false);\n                toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\n            }   \n    }\n\n    const isFemale = () => {\n        return props.patientObj.gender.toLowerCase() === \"female\";\n    }\n    \n    const is30AndAbove = () => {\n        return Number(props.patientObj.age) >= 30;\n    }\n\n    const getIndicationForPepResult = () => {\n        if (assessmentForPepIndication !== null && assessmentForPepIndication !== undefined){\n            return Object.values(assessmentForPepIndication).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\n        }\n    }\n\n    const getAcuteHivResult = () => {\n        if (assessmentForAcuteHivInfection !== null && assessmentForAcuteHivInfection !== undefined){\n            return Object.values(assessmentForAcuteHivInfection).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\n        }\n    }\n\n    const getPrepEligibilityScore = () => {\n        var score = 0;\n        score += drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0\n        score += riskCount.length > 0 ? 1 : 0\n        score += getAcuteHivResult()\n        score += getIndicationForPepResult()\n        if (is30AndAbove() && isFemale() === false) {\n            score += assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0;\n        }\n        score += assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0;\n        score += assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0;\n        score += assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0;\n\n        if (is30AndAbove() && isFemale() === false) {\n            return score >= 8 ? 1 : 0;\n        } else {\n            return score >= 7 ? 1 : 0;\n        }\n    }\n\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardBody>\n                <h2>PrEP Eligibilty Screening Form</h2>\n                    <form >\n                        <div className=\"row\">\n                        <div className=\"row\">\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Visit Date <span style={{ color:\"red\"}}> *</span></Label>\n                                <input\n                                    type=\"date\"\n                                    className=\"form-control\"\n                                    name=\"visitDate\"\n                                    id=\"visitDate\"\n                                    value={objValues.visitDate}\n                                    onChange={handleInputChange}\n                                    min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                />\n                                   \n                                {errors.visitDate !==\"\" ? (\n                                <span className={classes.error}>{errors.visitDate}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Visit type <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"visitType\"\n                                    id=\"visitType\"\n                                    value={objValues.visitType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {visitType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.visitType !==\"\" ? (\n                                <span className={classes.error}>{errors.visitType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Population type <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"populationType\"\n                                    id=\"populationType\"\n                                    value={objValues.populationType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {populationType.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.populationType !==\"\" ? (\n                                <span className={classes.error}>{errors.populationType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        {isFemale() && <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Pregnancy Status <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"pregnancyStatus\"\n                                    id=\"pregnancyStatus\"\n                                    value={objValues.pregnancyStatus}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {pregnancyStatus.map((value) => (\n                                            <option key={value.id} value={value.code}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.pregnancyStatus !==\"\" ? (\n                                <span className={classes.error}>{errors.pregnancyStatus}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>}\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Sex partners <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"sexPartner\"\n                                    id=\"sexPartner\"\n                                    value={objValues.sexPartner}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                    <option value={\"\"}></option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Both\">Both</option>\n                                </select>\n                                {errors.sexPartner !==\"\" ? (\n                                <span className={classes.error}>{errors.sexPartner}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        {/* {props.patientDetail!==null && props.patientDetail.personResponseDto.maritalStatus.display==='Married'   && (\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label> Number of own children {\"<\"}5 years</Label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"numChildrenLessThanFive\"\n                                    id=\"numChildrenLessThanFive\"\n                                    value={objValues.numChildrenLessThanFive}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                />\n                                   \n                                {errors.numChildrenLessThanFive !==\"\" ? (\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        )} */}\n                        {props.patientObj.gender==='Male' || props.patientObj.gender==='male'  && (\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Number of wives </Label>\n                                <input\n                                    className=\"form-control\"\n                                    name=\"numWives\"\n                                    id=\"numWives\"\n                                    value={objValues.numWives}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                />\n                                {errors.numWives !==\"\" ? (\n                                <span className={classes.error}>{errors.numWives}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        )}\n                        <div className=\"form-group  col-md-4\">\n                            <FormGroup>\n                                <Label>Type of counseling <span style={{ color:\"red\"}}> *</span></Label>\n                                <select\n                                    className=\"form-control\"\n                                    name=\"counselingType\"\n                                    id=\"counselingType\"\n                                    value={objValues.counselingType}\n                                    onChange={handleInputChange}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    disabled={disabledField}\n                                >\n                                     <option value={\"\"}>Select</option>\n                                        {counselingType.map((value) => (\n                                            <option key={value.id} value={value.id}>\n                                                {value.display}\n                                            </option>\n                                        ))}\n                                </select>\n                                {errors.counselingType !==\"\" ? (\n                                <span className={classes.error}>{errors.counselingType}</span>\n                                ) : \"\" }\n                            </FormGroup>\n                        </div>\n                        </div>\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSexCasual\"\n                                        id=\"unprotectedVaginalSexCasual\"\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedVaginalSexRegular\"\n                                        id=\"unprotectedVaginalSexRegular\"\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with casual partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSexWithCasual\"\n                                        id=\"uprotectedAnalSexWithCasual\"\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"uprotectedAnalSexWithRegular\"\n                                        id=\"uprotectedAnalSexWithRegular\"\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>History of STI</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"stiHistory\"\n                                        id=\"stiHistory\"\n                                        value={riskAssessment.stiHistory}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.stiHistory !==\"\" ? (\n                                    <span className={classes.error}>{errors.stiHistory}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Shared needles/injecting materials</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sharedNeedles\"\n                                        id=\"sharedNeedles\"\n                                        value={riskAssessment.sharedNeedles}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sharedNeedles !==\"\" ? (\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>           \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>More than 1 sex partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThan1SexPartner\"\n                                        id=\"moreThan1SexPartner\"\n                                        value={riskAssessment.moreThan1SexPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThan1SexPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal sex with Male/Female partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analSexWithPartner\"\n                                        id=\"analSexWithPartner\"\n                                        value={riskAssessment.analSexWithPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analSexWithPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedAnalSexWithPartner\"\n                                        id=\"unprotectedAnalSexWithPartner\"\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveYouPaidForSex\"\n                                        id=\"haveYouPaidForSex\"\n                                        value={riskAssessment.haveYouPaidForSex}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveYouPaidForSex !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you experience condom breakage </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"experienceCondomBreakage\"\n                                        id=\"experienceCondomBreakage\"\n                                        value={riskAssessment.experienceCondomBreakage}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.experienceCondomBreakage !==\"\" ? (\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you taken part in sexual orgy </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"takenPartInSexualOrgy\"\n                                        id=\"takenPartInSexualOrgy\"\n                                        value={riskAssessment.takenPartInSexualOrgy}\n                                        onChange={handleInputChangeRiskAssessment}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\n                                <b>Score : {riskCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            \n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithHIVPositive\"\n                                        id=\"haveSexWithHIVPositive\"\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerInjectDrug\"\n                                        id=\"haveSexWithPartnerInjectDrug\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"haveSexWithPartnerTransgender\"\n                                        id=\"haveSexWithPartnerTransgender\"\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sexWithPartnersWithoutCondoms\"\n                                        id=\"sexWithPartnersWithoutCondoms\"\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\n                                        onChange={handleInputChangeRiskAssessmentPartner}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                         \n                            {/* </>)} */}\n                            <Message warning>\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\n                                <b>Score :{sexPartRiskCount.length}</b>\n                            </Message>        \n                            \n                            <hr/>\n                            <br/>\n\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PEP Indication</div>        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>In the past 72 hours, have you had sex without a condom with someone whose HIV status is positive or not known to you?  </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        value={assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}\n                                        onChange={handleInputChangeAssessmentForPepIndication}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Have you shared injection equipment like needles with someone whose HIV status is positive or unknown to you? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\n                                        value={assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}\n                                        onChange={handleInputChangeAssessmentForPepIndication}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\n                                    <span className={classes.error}>{errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}}  >Assessment for Acute HIV Infection</div>        \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>In the past 2 weeks: Have you had a cold or flu such as fever, sore throat, abnormal sweats, swollen lymph nodes, mouth sores, headache or rash?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"acuteHivSymptomsLasttwoWeeks\"\n                                        id=\"acuteHivSymptomsLasttwoWeeks\"\n                                        value={assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks}\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.acuteHivSymptomsLasttwoWeeks !==\"\" ? (\n                                    <span className={classes.error}>{errors.acuteHivSymptomsLasttwoWeeks}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-6\">\n                                <FormGroup>\n                                    <Label>Have you had condomless anal or vaginal sex or shared injection materials and/or equipment in the past 28 days?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\n                                        id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\n                                        value={assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\"\" ? (\n                                    <span className={classes.error}>{errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\n                            \n                            <hr/>\n                            <h3>Route of Administration</h3>\n                            <h4>Do you use any of these drugs/substances ?</h4>\n                            <br/>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Inject </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"inject\"\n                                        id=\"inject\"\n                                        value={drugHistory.inject}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.inject !==\"\" ? (\n                                    <span className={classes.error}>{errors.inject}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Sniff </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"sniff\"\n                                        id=\"sniff\"\n                                        value={drugHistory.sniff}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.sniff !==\"\" ? (\n                                    <span className={classes.error}>{errors.sniff}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Snort</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"Snort\"\n                                        id=\"Snort\"\n                                        value={drugHistory.fever}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.Snort !==\"\" ? (\n                                    <span className={classes.error}>{errors.Snort}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Smoke</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"smoke\"\n                                        id=\"smoke\"\n                                        value={drugHistory.smoke}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.smoke !==\"\" ? (\n                                    <span className={classes.error}>{errors.smoke}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"row\">\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"useDrugSexualPerformance\"\n                                        id=\"useDrugSexualPerformance\"\n                                        value={drugHistory.useDrugSexualPerformance}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Have you had HIV testing before ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestedBefore\"\n                                        id=\"hivTestedBefore\"\n                                        value={drugHistory.hivTestedBefore}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hivTestedBefore !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            {drugHistory.hivTestedBefore===\"true\" && (\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>When was your last test?    </Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lastTest\"\n                                        id=\"lastTest\"\n                                        value={drugHistory.lastTest}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"1 Month\">{\"<\"}1 Month</option>\n                                        <option value=\"1-3 Months\">1-3 Months</option>\n                                        <option value=\"4-6Months\">4-6 Months</option>\n                                        <option value=\"6Months\">{\">\"}6 months</option>\n                                        \n                                    </select>\n                                    {errors.lastTest !==\"\" ? (\n                                    <span className={classes.error}>{errors.lastTest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            )}\n                            </div>\n                            \n                            <div className=\"row\">\n\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>HIV test result at visit <span style={{ color:\"red\"}}> *</span></Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivTestResultAtvisit\"\n                                        id=\"hivTestResultAtvisit\"\n                                        value={drugHistory.hivTestResultAtvisit}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"Positive\">Positive</option>\n                                        <option value=\"Negative\">Negative</option>\n                                        \n                                    </select>\n                                    {errors.hivTestResultAtvisit !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Recommended for HIV Retest ?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"recommendHivRetest\"\n                                        id=\"recommendHivRetest\"\n                                        value={drugHistory.recommendHivRetest}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.recommendHivRetest !==\"\" ? (\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"clinicalSetting\"\n                                        id=\"clinicalSetting\"\n                                        value={drugHistory.clinicalSetting}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.clinicalSetting !==\"\" ? (\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"reportHivRisk\"\n                                        id=\"reportHivRisk\"\n                                        value={drugHistory.reportHivRisk}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.reportHivRisk !==\"\" ? (\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-3\">\n                                <FormGroup>\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hivExposure\"\n                                        id=\"hivExposure\"\n                                        value={drugHistory.hivExposure}\n                                        onChange={handleInputChangeDrugHistory}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hivExposure !==\"\" ? (\n                                    <span className={classes.error}>{errors.hivExposure}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex==='Female' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"vaginalDischarge\"\n                                        id=\"vaginalDischarge\"\n                                        value={stiScreening.vaginalDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.vaginalDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"lowerAbdominalPains\"\n                                        id=\"lowerAbdominalPains\"\n                                        value={stiScreening.lowerAbdominalPains}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.lowerAbdominalPains !==\"\" ? (\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)}\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex==='Male' && (\n                            <>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"urethralDischarge\"\n                                        id=\"urethralDischarge\"\n                                        value={stiScreening.urethralDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.urethralDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of scrotal swelling and pain</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsOfScrotal\"\n                                        id=\"complaintsOfScrotal\"\n                                        value={stiScreening.complaintsOfScrotal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsOfScrotal !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div> \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"complaintsGenitalSore\"\n                                        id=\"complaintsGenitalSore\"\n                                        value={stiScreening.complaintsGenitalSore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.complaintsGenitalSore !==\"\" ? (\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            </>)} \n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Genital score +/-pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"genitalScore\"\n                                        id=\"genitalScore\"\n                                        value={stiScreening.genitalScore}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.genitalScore !==\"\" ? (\n                                    <span className={classes.error}>{errors.genitalScore}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"swollenIguinal\"\n                                        id=\"swollenIguinal\"\n                                        value={stiScreening.swollenIguinal}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.swollenIguinal !==\"\" ? (\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal pain on stooling?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analpain\"\n                                        id=\"analpain\"\n                                        value={stiScreening.analpain}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analpain !==\"\" ? (\n                                    <span className={classes.error}>{errors.analpain}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal itching?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analItching\"\n                                        id=\"analItching\"\n                                        value={stiScreening.analItching}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analItching !==\"\" ? (\n                                    <span className={classes.error}>{errors.analItching}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>Anal discharge?</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"analDischarge\"\n                                        id=\"analDischarge\"\n                                        value={stiScreening.analDischarge}\n                                        onChange={handleInputChangeStiScreening}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.analDischarge !==\"\" ? (\n                                    <span className={classes.error}>{errors.analDischarge}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\n                                <b>Score :{stiCount.length}</b>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PrEP Eligibilty</div>\n                            <div>\n                                <FormGroup>\n                                    <Label>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</Label>\n                                </FormGroup>\n                            </div>\n                            <div>\n                                <FormGroup>\n                                    <Label>{`HIV Risk Score > 1: ${riskCount.length > 0 ? 1 : 0}`}</Label>\n                                </FormGroup>\n                            </div>\n                            {(is30AndAbove() && isFemale() === false) && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Has no proteinuria (>30 Years)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"hasNoProteinuria\"\n                                        id=\"hasNoProteinuria\"\n                                        value={assessmentForPrepEligibility?.hasNoProteinuria}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.hasNoProteinuria !==\"\" ? (\n                                    <span className={classes.error}>{errors.hasNoProteinuria}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history / signs & symptoms of Liver abnormalities (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\n                                        id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history of drug-drug interaction (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOfDrugToDrugInteractionCabLa\"\n                                        id=\"noHistoryOfDrugToDrugInteractionCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOfDrugToDrugInteractionCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOfDrugToDrugInteractionCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"noHistoryOfDrugHypersensitivityCabLa\"\n                                        id=\"noHistoryOfDrugHypersensitivityCabLa\"\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa}\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.noHistoryOfDrugHypersensitivityCabLa !==\"\" ? (\n                                    <span className={classes.error}>{errors.noHistoryOfDrugHypersensitivityCabLa}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                            <Message warning>\n                                <h4>Calculate the sum of PrEP Eligibility. If {\"<= \"}1 client is Eligible for PrEP.  (Score: Count Yes=1, No=0).</h4>\n                                {/* <b>Score :{stiCount.length}</b> */}\n                                <h5>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</h5>\n                                <h5>{`HIV risk score >=1 : ${riskCount.length > 0 ? 1 : 0}`}</h5>\n                                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult() }`}</h5>\n                                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\n                                {(is30AndAbove() && isFemale() === false) && <h5>{`Has no proteinuria: ${assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0}`}</h5>}\n\n                            </Message>\n                            <Message warning>\n                                <h4>Calculate the sum of PrEP Eligibility for CAB-LA regimen. If the following below =1 client is Eligible for CAB-LA. {`(Score: Count Yes=1, No=0)`}</h4>\n                                {/* <b>Score :{stiCount.length}</b> */}\n                                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0}`}</h5>\n                                <h5>{`No history of drug-drug interaction (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0}`}</h5>\n                                <h5>{`No history of drug hypersensitivity (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0}`}</h5>\n\n                            </Message>\n                            <Message warning>\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\n                            </Message>\n                            <hr/>\n                            <br/>\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Services Received by Client</div>\n                            <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Willing to commence PrEP`}</Label>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"willingToCommencePrep\"\n                                        id=\"willingToCommencePrep\"\n                                        value={servicesReceivedByClient?.willingToCommencePrep}\n                                        onChange={handleInputChangeServicesReceivedByClient}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    >\n                                        <option value={\"\"}></option>\n                                        <option value=\"true\">Yes</option>\n                                        <option value=\"false\">No</option>\n                                        \n                                    </select>\n                                    {errors.willingToCommencePrep !==\"\" ? (\n                                    <span className={classes.error}>{errors.willingToCommencePrep}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>\n                                     \n                                        \n                                        {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\n                            {servicesReceivedByClient?.willingToCommencePrep === 'false' && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Reasons for Declining PrEP`}</Label>\n                                    <Dropdown value={servicesReceivedByClient?.reasonsForDecline} placeholder='select reasons for decline' onChange={handleInputReasonsForDecline} fluid multiple selection options={reasonForDecline.map((each) => {\n                                            return {key: each.code, text:each.display, value:each.code}})} />\n                                    {errors.reasonsForDecline !==\"\" ? (\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                            {(servicesReceivedByClient?.reasonsForDecline?.find((one)=> one === \"REASON_PREP_DECLINED_OTHERS_(SPECIFY)\") !== (null || undefined)) && <div className=\"form-group  col-md-4\">\n                                <FormGroup>\n                                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\n                                    <Input\n                                        className=\"form-control\"\n                                        name=\"otherReasonsForDecline\"\n                                        id=\"otherReasonsForDecline\"\n                                        value={servicesReceivedByClient?.otherReasonsForDecline}\n                                        onChange={handleInputChangeServicesReceivedByClient}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled={disabledField}\n                                    />\n\n                                    {errors.reasonsForDecline !==\"\" ? (\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </div>}\n                         \n                           \n                            {saving ? <Spinner /> : \"\"}\n                            <br />\n                            <div className=\"row\">\n                            <div className=\"form-group mb-3 col-md-12\">\n                            {props.activeContent && props.activeContent.actionType ===\"update\"? (<>\n                        <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        hidden={disabledField}\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        style={{backgroundColor:\"#014d88\"}}\n                        onClick={handleSubmit}\n                        disabled={saving}\n                        >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                            )}\n                    </MatButton>\n                    </>):(<>\n                    <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        style={{backgroundColor:\"#014d88\"}}\n                        onClick={handleSubmit}\n                        disabled={saving}\n                        >\n                            {!saving ? (\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                            ) : (\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                            )}\n                    </MatButton>\n                    </>)}\n                           \n                            </div>\n                            </div>\n                        </div>\n                    </form>\n                </CardBody>\n            </Card>                                 \n        </>\n    );\n};\n\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\nimport MatButton from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SaveIcon from '@material-ui/icons/Save'\nimport CancelIcon from '@material-ui/icons/Cancel'\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast} from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport { useHistory } from \"react-router-dom\";\nimport {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport { DateTimePicker } from \"react-widgets\";\n// import Moment from \"moment\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        margin: theme.spacing(20),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    cardBottom: {\n        marginBottom: 20\n    },\n    Select: {\n        height: 45,\n        width: 350\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    input: {\n        display: 'none'\n    } \n}))\n\nconst PrEPVisit = (props) => {\n\n    const patientObj = props.patientObj;\n    let history = useHistory();\n    const classes = useStyles()\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\n    const [saving, setSaving] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [carePoints, setCarePoints] = useState([]);\n    const [hivStatus, setHivStatus] = useState([]);\n    //set ro show the facility name field if is transfer in \n    const [transferIn, setTransferIn] = useState(false);\n    // display the OVC number if patient is enrolled into OVC \n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\n\n    useEffect(() => {         \n\n      }, []);\n\n    const handleInputChange = e => {\n        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        if(e.target.name ===\"entryPointId\" ){\n            if(e.target.value===\"21\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }\n\n    }\n          \n    //Handle CheckBox \n    const handleCheckBox =e =>{\n        if(e.target.checked){\n            setOvcEnrolled(true)\n        }else{\n            setOvcEnrolled(false)\n        }\n    }  \n    \n    const validate = () => {\n        let temp = { ...errors }\n        //temp.name = details.name ? \"\" : \"This field is required\"\n        //temp.description = details.description ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n            })    \n        return Object.values(temp).every(x => x == \"\")\n    }\n    /**** Submit Button Processing  */\n    const handleSubmit = (e) => {        \n        e.preventDefault();\n        \n          objValues.personId= patientObj.id\n          patientObj.enrolled=true\n          delete objValues['tableData'];\n          setSaving(true);\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\n          \n          )\n              .then(response => {\n                  setSaving(false);\n                  toast.success(\"Record save successful\");\n                  props.toggle()\n                  props.patientObj.enrolled=true\n                  props.PatientCurrentStatus()\n\n              })\n              .catch(error => {\n                  setSaving(false);\n                  toast.error(\"Something went wrong\");\n              });\n          \n    }\n\n  return (      \n        <div>                  \n            <Card >\n                <CardBody>\n                <form >\n                    <div className=\"row\">\n                        <h2>PrEP Visit</h2>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\n                            <Input\n                                type=\"text\"\n                                name=\"uniqueId\"\n                                id=\"uniqueId\"\n                                onChange={handleInputChange}\n                                value={objValues.uniqueId}\n                                required\n                            />\n                            \n                            </FormGroup>\n                        </div>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Noted Side Effects</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"entryPointId\"\n                                id=\"entryPointId\"\n                                onChange={handleInputChange}\n                                value={objValues.entryPointId}\n                                required\n                            >\n                                <option value=\"\">Select </option>\n                \n                                {carePoints.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                {errors.entryPointId !==\"\" ? (\n                                        <span className={classes.error}>{errors.entryPointId}</span>\n                                    ) : \"\" }\n                            </Input>\n                                \n                            </FormGroup>\n                        </div>\n                        </div>\n                        <hr/>\n                        \n                        <div className=\"row\">\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">HTS Result</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"entryPointId\"\n                            id=\"entryPointId\"\n                            onChange={handleInputChange}\n                            value={objValues.entryPointId}\n                            required\n                        >\n                        <option value=\"\"> </option>\n            \n                        {carePoints.map((value) => (\n                            <option key={value.id} value={value.id}>\n                                {value.display}\n                            </option>\n                        ))}\n                        {errors.entryPointId !==\"\" ? (\n                                <span className={classes.error}>{errors.entryPointId}</span>\n                            ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        \n                        </div>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                        <h3>PrEP Drugs</h3>\n                        <div className=\"form-group mb-3 col-md-6\">\n                        <FormGroup>\n                        <Label >Regimen</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                        </FormGroup>\n                        </div>\n                    \n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Level of Adherence</Label>\n                            <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                            </FormGroup>\n                        </div>\n                        <div className=\"form-group mb-3 col-md-6\">\n                            <FormGroup>\n                            <Label >Why Poor/Fair Adherence?</Label>\n                            <Input\n                            type=\"select\"\n                            name=\"statusAtRegistrationId\"\n                            id=\"statusAtRegistrationId\"\n                            onChange={handleInputChange}\n                            value={objValues.statusAtRegistrationId}\n                            required\n                        >\n                            <option value=\"\">Select </option>\n            \n                            {hivStatus.map((value) => (\n                                <option key={value.id} value={value.id}>\n                                    {value.display}\n                                </option>\n                            ))}\n                            {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                ) : \"\" }\n                        </Input>\n                            </FormGroup>\n                        </div>\n                    </div>\n                    \n                    {saving ? <Spinner /> : \"\"}\n                    <br />\n                \n                    <MatButton\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<SaveIcon />}\n                        onClick={handleSubmit}\n                        >\n                        {!saving ? (\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                        ) : (\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\n                        )}\n                    </MatButton>\n                \n                <MatButton\n                    variant=\"contained\"\n                    className={classes.button}\n                    startIcon={<CancelIcon />}\n                    onClick={props.toggle}\n                    \n                >\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\n                </MatButton>\n                \n                    </form>\n                </CardBody>\n            </Card>                    \n        </div>\n  );\n}\n\nexport default PrEPVisit;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from \"reactstrap\";\nimport MatButton from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n// import { Alert } from 'reactstrap';\n// import { Spinner } from 'reactstrap';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { url as baseUrl, token } from \"../../../api\";\nimport { useHistory } from \"react-router-dom\";\n//import {  Modal, Button } from \"react-bootstrap\";\nimport \"react-widgets/dist/css/react-widgets.css\";\n//import { DateTimePicker } from \"react-widgets\";\nimport PhoneInput from \"react-phone-input-2\";\n// import momentLocalizer from \"react-widgets-moment\";\nimport moment from \"moment\";\nimport { Spinner } from \"reactstrap\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    margin: theme.spacing(20),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  cardBottom: {\n    marginBottom: 20,\n  },\n  Select: {\n    height: 45,\n    width: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  root: {\n    flexGrow: 1,\n    \"& .card-title\": {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n    },\n    \"& .form-control\": {\n      borderRadius: \"0.25rem\",\n      height: \"41px\",\n    },\n    \"& .card-header:first-child\": {\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\n    },\n    \"& .dropdown-toggle::after\": {\n      display: \" block !important\",\n    },\n    \"& select\": {\n      \"-webkit-appearance\": \"listbox !important\",\n    },\n    \"& p\": {\n      color: \"red\",\n    },\n    \"& label\": {\n      fontSize: \"14px\",\n      color: \"#014d88\",\n      fontWeight: \"bold\",\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  error: {\n    color: \"#f85032\",\n    fontSize: \"11px\",\n  },\n  success: {\n    color: \"#4BB543 \",\n    fontSize: \"11px\",\n  },\n}));\n\nconst PrEPRegistrationForm = (props) => {\n  ///const patientObj = props.patientObj;\n  const [entryPoint, setEntryPoint] = useState([]);\n  //let history = useHistory();\n  const classes = useStyles();\n  const [objValues, setObjValues] = useState({\n    dateEnrolled: \"\",\n    dateReferred: \"\",\n    extra: {},\n    personId: 0,\n    prepEligibilityUuid: \"\",\n    riskType: \"\",\n    supporterName: \"\",\n    supporterPhone: \"\",\n    supporterRelationshipType: \"\",\n    uniqueId: \"\",\n    hivTestingPoint: \"\",\n    dateOfLastHivNegativeTest: \"\",\n    targetGroup: \"\",\n  });\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [prepRisk, setPrepRisk] = useState([]);\n  const [relatives, setRelatives] = useState([]);\n  const [patientDto, setPatientDto] = useState();\n  const [disabledField, setSisabledField] = useState(false);\n  const [targetGroupValue, setTargetGroupValue] = useState(\"\");\n  useEffect(() => {\n    GetPatientDTOObj();\n    RELATIONSHIP();\n    PREP_RISK_TYPE();\n    EntryPoint();\n    if (\n      props.activeContent.id &&\n      props.activeContent.id !== \"\" &&\n      props.activeContent.id !== null\n    ) {\n      GetPatientPrepEnrollment(props.activeContent.id);\n      setSisabledField(\n        props.activeContent.actionType === \"view\" ? true : false\n      );\n    }\n    //GetPatientPrepEnrollment\n  }, []);\n  const getTargetGroupvalue = () => {\n    axios\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data?.htsClientDtoList[0]?.targetGroup);\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const EntryPoint = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data);\n        setEntryPoint(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const RELATIONSHIP = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setRelatives(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const PREP_RISK_TYPE = () => {\n    axios\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        setPrepRisk(response.data);\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const GetPatientDTOObj = () => {\n    axios\n      .get(\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {\n        //console.log(response.data)\n        setPatientDto(response.data);\n        getTargetGroupvalue();\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const GetPatientPrepEnrollment = (id) => {\n    axios\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then((response) => {\n        //console.log(response.data.find((x)=> x.id===id));\n        setObjValues(response.data.find((x) => x.id === id));\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  };\n  const handleInputChange = (e) => {\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\n  };\n  const checkPhoneNumberBasic = (e, inputName) => {\n    const limit = 10;\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\n  };\n\n  const validate = () => {\n    let temp = { ...errors };\n    temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\";\n    temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\";\n    temp.riskType = objValues.riskType ? \"\" : \"This field is required\";\n    //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\n    //temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\n    //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\n    temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\";\n    setErrors({\n      ...temp,\n    });\n    return Object.values(temp).every((x) => x == \"\");\n  };\n  /**** Submit Button Processing  */\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      objValues.personId = props.patientObj.personId;\n      objValues.prepEligibilityUuid = patientDto.uuid;\n      objValues.targetGroup = targetGroupValue;\n      //console.log(\"prep\", objValues);\n      setSaving(true);\n      if (props.activeContent && props.activeContent.actionType) {\n        axios\n          .put(\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\n            objValues,\n            { headers: { Authorization: `Bearer ${token}` } }\n          )\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.prepCount = \"1\";\n            props.PatientObject();\n            toast.success(\"Prep Enrollment save successful!\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            toast.error(\"Something went wrong\");\n          });\n      } else {\n        axios\n          .post(`${baseUrl}prep/enrollment`, objValues, {\n            headers: { Authorization: `Bearer ${token}` },\n          })\n          .then((response) => {\n            setSaving(false);\n            props.patientObj.prepCount = \"1\";\n            toast.success(\"Prep Enrollment save successful!\", {\n              position: toast.POSITION.BOTTOM_CENTER,\n            });\n            props.setActiveContent({\n              ...props.activeContent,\n              route: \"recent-history\",\n            });\n          })\n          .catch((error) => {\n            setSaving(false);\n            toast.error(\"Something went wrong\");\n          });\n      }\n    } else {\n      toast.error(\"All fields are required \", {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <form>\n            <div className=\"row\">\n              <h2>PrEP Enrollment </h2>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"uniqueId\">\n                    Unique Client's ID <span style={{ color: \"red\" }}> *</span>{\" \"}\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"uniqueId\"\n                    id=\"uniqueId\"\n                    onChange={handleInputChange}\n                    value={objValues.uniqueId}\n                    disabled={disabledField}\n                  />\n                  {errors.uniqueId !== \"\" ? (\n                    <span className={classes.error}>{errors.uniqueId}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\n                  <Input\n                    type=\"text\"\n                    name=\"ancUniqueArtNo\"\n                    id=\"ancUniqueArtNo\"\n                    onChange={handleInputChange}\n                    value={objValues.ancUniqueArtNo}\n                    disabled={disabledField}\n                  />\n                  {errors.ancUniqueArtNo !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.ancUniqueArtNo}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>\n                    Date enrolled in PrEP{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateEnrolled\"\n                    id=\"dateEnrolled\"\n                    value={objValues.dateEnrolled}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    min={\n                      patientDto && patientDto.visitDate\n                        ? patientDto.visitDate\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateEnrolled !== \"\" ? (\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label for=\"entryPointId\">\n                    PrEP Risk Type <span style={{ color: \"red\" }}> *</span>\n                  </Label>\n                  <Input\n                    type=\"select\"\n                    name=\"riskType\"\n                    id=\"riskType\"\n                    onChange={handleInputChange}\n                    value={objValues.riskType}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n                    {prepRisk.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.riskType !== \"\" ? (\n                    <span className={classes.error}>{errors.riskType}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>HIV Testing Point </Label>\n                  <Input\n                    type=\"select\"\n                    name=\"hivTestingPoint\"\n                    id=\"hivTestingPoint\"\n                    onChange={handleInputChange}\n                    value={objValues.hivTestingPoint}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n                    {entryPoint.map((value) => (\n                      <option key={value.id} value={value.id}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>Date of last HIV Negative test</Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateOfLastHivNegativeTest\"\n                    id=\"dateOfLastHivNegativeTest\"\n                    value={objValues.dateOfLastHivNegativeTest}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateOfLastHivNegativeTest !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.dateOfLastHivNegativeTest}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>\n                    Date Referred for PrEP{\" \"}\n                    <span style={{ color: \"red\" }}> *</span>{\" \"}\n                  </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"date\"\n                    name=\"dateReferred\"\n                    id=\"dateReferred\"\n                    value={objValues.dateReferred}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    min={\n                      patientDto && patientDto.visitDate\n                        ? patientDto.visitDate\n                        : \"\"\n                    }\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\n                    disabled={disabledField}\n                  />\n                  {errors.dateReferred !== \"\" ? (\n                    <span className={classes.error}>{errors.dateReferred}</span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>PrEP Supporter </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"text\"\n                    name=\"supporterName\"\n                    id=\"supporterName\"\n                    value={objValues.supporterName}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={disabledField}\n                  />\n                  {errors.supporterName !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterName}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>Relationship </Label>\n                  <Input\n                    className=\"form-control\"\n                    type=\"select\"\n                    name=\"supporterRelationshipType\"\n                    id=\"supporterRelationshipType\"\n                    value={objValues.supporterRelationshipType}\n                    onChange={handleInputChange}\n                    style={{\n                      border: \"1px solid #014D88\",\n                      borderRadius: \"0.2rem\",\n                    }}\n                    disabled={disabledField}\n                  >\n                    <option value=\"\"> Select</option>\n\n                    {relatives.map((value) => (\n                      <option key={value.id} value={value.code}>\n                        {value.display}\n                      </option>\n                    ))}\n                  </Input>\n                  {errors.supporterRelationshipType !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterRelationshipType}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n              <div className=\"form-group mb-3 col-md-6\">\n                <FormGroup>\n                  <Label>PrEP Supporter Phone Number</Label>\n                  {/* <Input\n                                        className=\"form-control\"\n                                        type=\"text\"\n                                        name=\"supporterPhone\"\n                                        id=\"supporterPhone\"\n                                        value={objValues.supporterPhone}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                    /> */}\n                  <PhoneInput\n                    containerStyle={{\n                      width: \"100%\",\n                      border: \"1px solid #014D88\",\n                    }}\n                    inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\n                    country={\"ng\"}\n                    placeholder=\"(234)7099999999\"\n                    maxLength={5}\n                    name=\"supporterPhone\"\n                    id=\"supporterPhone\"\n                    masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\n                    value={objValues.supporterPhone}\n                    onChange={(e) => {\n                      checkPhoneNumberBasic(e, \"supporterPhone\");\n                    }}\n                    disabled={disabledField}\n                  />\n                  {errors.supporterPhone !== \"\" ? (\n                    <span className={classes.error}>\n                      {errors.supporterPhone}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </FormGroup>\n              </div>\n            </div>\n\n            {saving ? <Spinner /> : \"\"}\n            <br />\n            {props.activeContent &&\n            props.activeContent.actionType === \"update\" ? (\n              <>\n                <MatButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  hidden={disabledField}\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  style={{ backgroundColor: \"#014d88\" }}\n                  onClick={handleSubmit}\n                  disabled={saving}\n                >\n                  {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                  ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Updating...\n                    </span>\n                  )}\n                </MatButton>\n              </>\n            ) : (\n              <>\n                <MatButton\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  style={{ backgroundColor: \"#014d88\" }}\n                  onClick={handleSubmit}\n                  disabled={saving}\n                >\n                  {!saving ? (\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\n                  ) : (\n                    <span style={{ textTransform: \"capitalize\" }}>\n                      Saving...\n                    </span>\n                  )}\n                </MatButton>\n              </>\n            )}\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default PrEPRegistrationForm;\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\nimport {Modal,ModalHeader, ModalBody,Form,\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\n} from \"reactstrap\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"react-select\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MatButton from \"@material-ui/core/Button\";\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { Button2, Icon, List } from 'semantic-ui-react'\nimport {ToastContainer, toast} from \"react-toastify\";\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport axios from \"axios\";\nimport {token, url as baseUrl} from \"../../../api\";\n\nimport { green, red } from '@mui/material/colors';\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\n\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\n//import SaveIcon from '@mui/icons-material/Save';\n// import LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\n// import CancelIcon from '@mui/icons-material/Cancel';\n// import ModalImage from \"react-modal-image\";\nimport {Link, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport {Dropdown,Badge} from 'react-bootstrap';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport fingerprintimage  from './../../images/fingerprintimage.png';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\nimport _ from 'lodash';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\n            fontFamily:'FontAwesome',\n            border:'0',\n            verticalAlign:'middle',\n            marginLeft:'.25em',\n            lineHeight:'1'\n        },\n        \"& .dropdown-menu .dropdown-item\":{\n            fontSize: '14px',\n            color: '#014d88',\n            padding: '0.3rem 1.5rem',\n            fontWeight:'bold'\n        },\n        \"& .mt-4\":{\n            marginTop:'28px !important'\n        },\n        \"& .form-control\":{\n            color:'#992E62'\n        },\n        \"& .form-control:focus\":{\n            color:'#014d88'\n        },\n        \"& .sharp \":{\n            \"min-width\": \"35px\",\n            padding:\"5px\",\n            height: '35px',\n            \"min-height\": \"35px\"\n}\n    },\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n/*    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 350,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: \"none\",\n    },\n    error: {\n        color: \"#f85032\",\n        fontSize: \"12.8px\",\n    },*/\n}));\n\nlet checkUrl=\"\"\n\nfunction Biometrics(props) {\n    const classes = useStyles();\n    let history = useHistory();\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\n    const [biometricDevices,setbiometricDevices] = useState([]);\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\n    const [fingerType, setFingerType] = useState([]);\n    const [devices, setDevices] = useState([]);\n    const [loading, setLoading] = React.useState(false);\n    const [pageLoading, setPageLoading] = useState(false);\n    const [showCapture, setshowCapture] = React.useState(false);\n    const [tryAgain, setTryAgain] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const [errors, setErrors] = useState({});\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\n    // const [responseImage, setResponseImage] = useState(\"\")\n    const [capturedFingered, setCapturedFingered]= useState([]);\n    const [selectedFingers, setSelectedFingers] = useState([]);\n\n    const buttonSx = {\n        ...(success && {\n            bgcolor: green[500],\n            '&:hover': {\n                bgcolor: green[700],\n            },\n        }),\n    };\n\n    const getPersonBiometrics = async() =>{\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\n            if(response.data.length > 0){\n                setStoredBiometrics(response.data);\n                setPageLoading(true);\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\n                setSelectedFingers(personCapturedFingers);\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\n\n                });\n                setFingerType(biometricItems);\n            }else{\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                    return _.extend({}, item, {captured: false});\n                    //return item.captured = personCapturedFingers.includes(item.display)\n                });\n                setFingerType(biometricItems);\n\n            }\n\n        }).catch(async (error)=>{\n            console.log(\"getPersonBiometrics error\")\n            console.log(error)\n\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\n                return _.extend({}, item, {captured: false});\n            });\n            setFingerType(biometricItems);\n            setPageLoading(true);\n        })\n    }\n\n    const clear_storelist = () =>{\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\n            console.log('cleared store')\n        }).catch((error)=>{\n            console.log(\"cleared store error\")\n            console.log(error)\n\n        })\n    }\n\n\n    useEffect(() => {\n        clear_storelist();\n        getPersonBiometrics();\n        TemplateType();\n        //biometricFingers();\n    }, []);\n    //Get list of KP\n    const TemplateType =()=>{\n        axios\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                if(response.data===true){\n                    axios\n                        .get(`${baseUrl}biometrics/devices`,\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\n                        )\n                        .then((response) => {\n                            setDevices(response.data);\n                            setbiometricDevices(response.data);\n\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        });\n\n                }\n            })\n            .catch((error) => {\n                //console.log(error);\n            });\n\n    }\n\n    //Get list of Finger index\n    const biometricFingers =()=>{\n        axios\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setFingerType(response.data);\n            })\n            .catch((error) => {\n            });\n\n    }\n    //check if device is plugged or not\n    const checkDevice = e =>{\n        const deviceName =e.target.value;\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\n        setObjValues({...objValues, device:deviceName})\n        axios\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                if(response.data.errorType ===\"ERROR\"){\n                    toast.error(response.data.errorName + \" is not plug\");\n                    //setshowCapture(true)\n                }else{\n                    setshowCapture(true)\n                }\n            })\n            .catch((error) => {\n            });\n    }\n    // handle the input changes\n\n    const handleInputChange = e => {\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n    }\n    //form validation\n    const validate = () => {\n        let temp = { ...errors }\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\n        temp.device = objValues.device ? \"\" : \"This field is required\"\n        setErrors({\n            ...temp\n        })\n        return Object.values(temp).every(x => x === \"\")\n    }\n    //to capture  selected index finger\n    const captureFinger = (e) => {\n        e.preventDefault();\n        if(validate()){\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n            )\n                .then(response => {\n                    setLoading(true);\n                    if(response.data.type ===\"ERROR\"){\n                        setLoading(false);\n                        setTryAgain(true);\n                        window.setTimeout(() => {\n                            setTryAgain(false);\n                        }, 5000);\n                        toast.error(response.data.message.ERROR);\n                    }else{\n                        const templateType= response.data.templateType\n                        setTryAgain(false);\n                        setSuccess(true)\n                        window.setTimeout(() => {\n                            setSuccess(false)\n                            setLoading(false);\n                        }, 5000);\n                        let biometricsEnrollments = response.data\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\n\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\n                        //fingerType.splice(templateType, 1);\n                        _.find(fingerType,{'display':templateType}).captured = true;\n                        setFingerType([...fingerType]);\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\n                        setObjValues({...objValues, templateType:\"\"});\n                    }\n                    //toast.success(\"Record save successful\");\n                })\n                .catch(error => {\n                });\n        }\n    }\n\n    const deleteBiometric =(id,finger)=>{\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\n            toast.success(`${finger} deleted successfully`);\n            _.find(fingerType,{'display':finger}).captured = false;\n            setFingerType([...fingerType]);\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\n            setStoredBiometrics(newStoredBiometrics);\n            clear_storelist();\n            if(newStoredBiometrics.length === 0){\n                props.updatePatientBiometricStatus(false);\n            }\n        }).catch((error)=>{\n            toast.error(\"Something went wrong\");\n            console.log(error)\n\n        })\n    }\n\n    //Save Biometric capture\n    const saveBiometrics = (e) => {\n        e.preventDefault();\n        if(capturedFingered.length >= 1){\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\n            )\n                .then(response => {\n                    toast.success(\"Biometric save successful\");\n                    setCapturedFingered([])\n                    getPersonBiometrics();\n                    props.patientObj.biometricStatus=true\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\n                    //props.updatePatientBiometricStatus(true);\n                })\n                .catch(error => {\n                    toast.error(\"Something went wrong saving biometrics\");\n                    console.log(error);\n                });\n        }else{\n\n            toast.error(\"You can't save less than 2 finger\");\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n\n\n            <div style={{display:\"flex\",width:'100%'}}>\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\n                    {pageLoading && storedBiometrics.length > 0 ? (\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\n                                {storedBiometrics.map((biometric, index)=>(\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\n\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\n                                                <div>\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\n                                                </div>\n\n                                                {/*Action button -- Dropdown menu*/}\n                                                <Dropdown className=\"dropdown ms-auto\"  >\n                                                    <Dropdown.Toggle\n                                                        as=\"button\"\n                                                        variant=\"\"\n                                                        drop=\"up\"\n                                                        className=\"btn sharp btn-primary \"\n                                                        id=\"tp-btn\"\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\n                                                    >\n                                                        <svg\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                                                            width=\"18px\"\n                                                            height=\"18px\"\n                                                            viewBox=\"0 0 24 24\"\n                                                            version=\"1.1\"\n                                                        >\n                                                            <g\n                                                                stroke=\"none\"\n                                                                strokeWidth=\"1\"\n                                                                fill=\"none\"\n                                                                fillRule=\"evenodd\"\n                                                            >\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\n                                                            </g>\n                                                        </svg>\n                                                    </Dropdown.Toggle>\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\n                                                            <DeleteIcon /> Delete\n                                                        </Dropdown.Item>\n\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n\n                                            </div>\n                                            <div className=\"card-body p-0 pb-2\">\n                                                <ul className=\"list-group list-group-flush\">\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\n                                                    </li>\n\n                                                    <li className=\"list-group-item\">\n\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\n                                                        <span className=\"text-black desc-text ms-2\">\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\n                                                    </span>\n                                                    </li>\n\n                                                </ul>\n                                            </div>\n\n                                        </div>\n                                    </div>\n\n                                ))}\n                            </div>\n                        )\n                        :\n                        <>\n                            <div className=\"flex-grow-8\">\n                                <div  className=\"flex-grow-8\"  >\n                                    <Alert severity=\"info\">\n                                        <AlertTitle style={{height:'400px'}}>\n                                            <strong>No biometrics captured</strong>\n                                        </AlertTitle>\n                                    </Alert>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\n                        <div className=\"col-12\">\n                            <ToastContainer />\n                            <Col md={12}>\n                                <FormGroup>\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"device\"\n                                        id=\"device\"\n                                        onChange={checkDevice}\n                                        value={objValues.device}\n                                        required\n                                    >\n                                        <option value=\"\">Select Device </option>\n                                        {biometricDevices.map(({ id, name }) => (\n                                            <option key={id} value={name}>\n                                                {name}\n                                            </option>\n                                        ))}\n\n                                    </Input>\n                                    {errors.device !==\"\" ? (\n                                        <span className={classes.error}>{errors.device}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                            </Col>\n                            {showCapture ? (\n                                    <div className=\"row col-12\">\n                                        <Col md={6}>\n                                            <FormGroup>\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\n                                                <Input\n                                                    type=\"select\"\n                                                    name=\"templateType\"\n                                                    id=\"templateType\"\n                                                    onChange={handleInputChange}\n                                                    value={objValues.templateType}\n                                                    required\n                                                >\n                                                    <option value=\"\">Select Finger </option>\n\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\n                                                        <option key={value.id} value={value.display}>\n                                                            {value.display}\n                                                        </option>\n                                                    ))}\n                                                </Input>\n                                                {errors.templateType !==\"\" ? (\n                                                    <span className={classes.error}>{errors.templateType}</span>\n                                                ) : \"\" }\n                                            </FormGroup>\n                                        </Col>\n\n\n                                        <Col md={6}>\n\n                                            <MatButton\n                                                type='button'\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={captureFinger}\n                                                className={'mt-4'}\n                                                style={{backgroundColor:'#992E62'}}\n                                                startIcon={<FingerprintIcon />}\n                                            >\n                                                Capture Finger\n                                            </MatButton>\n\n                                        </Col>\n                                        <br/>\n\n                                    </div>\n                                )\n                                :\n                                \"\"\n                            }\n\n                            <Row>\n                                {capturedFingered.length >=1 ? (\n                                        <>\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\n                                                <List celled horizontal>\n                                                    {capturedFingered.map((x) => (\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\n                                                        </List.Item>\n                                                    ))}\n\n                                                </List>\n\n                                            </Col>\n                                            <br/><br/><br/><br/><br/><br/>\n                                            <Col md={12} >\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={saveBiometrics}\n                                                    // className={classes.button}\n                                                    startIcon={<SaveIcon/>}\n                                                >\n                                                    Save Capture\n                                                </MatButton>\n                                            </Col>\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                            </Row>\n                        </div>\n                    </div>\n\n                   \n            </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{/*\n            <Form >\n\n                    <Card>\n                         <CardHeader>\n                                    Capture Biometrics\n                                </CardHeader>\n                        <CardBody>\n                            <Row form>\n                                <ToastContainer />\n                                <Col md={4}>\n                                    <FormGroup>\n                                        <Label for='device'>Select Device </Label>\n                                        <Input\n                                            type=\"select\"\n                                            name=\"device\"\n                                            id=\"device\"\n                                            onChange={checkDevice}\n                                            value={objValues.device}\n                                            required\n                                        >\n                                            <option value=\"\">Select Device </option>\n                                            {biometricDevices.map(({ id, name }) => (\n                                                <option key={id} value={name}>\n                                                    {name}\n                                                </option>\n                                            ))}\n\n                                        </Input>\n                                        {errors.device !==\"\" ? (\n                                            <span className={classes.error}>{errors.device}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </Col>\n                                {showCapture ? (\n                                        <>\n                                            <Col md={4}>\n                                                <FormGroup>\n                                                    <Label for='device'>Select Finger</Label>\n                                                    <Input\n                                                        type=\"select\"\n                                                        name=\"templateType\"\n                                                        id=\"templateType\"\n                                                        onChange={handleInputChange}\n                                                        value={objValues.templateType}\n                                                        required\n                                                    >\n                                                        <option value=\"\">Select Finger </option>\n\n                                                        {fingerType.map((value) => (\n                                                            <option key={value.id} value={value.display}>\n                                                                {value.display}\n                                                            </option>\n                                                        ))}\n                                                    </Input>\n                                                    {errors.templateType !==\"\" ? (\n                                                        <span className={classes.error}>{errors.templateType}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </Col>\n\n\n                                            <Col md={4}>\n\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={captureFinger}\n                                                    className={'mt-4'}\n                                                    startIcon={<FingerprintIcon />}\n                                                >\n                                                    Capture Finger\n                                                </MatButton>\n\n                                            </Col>\n                                            <br/>\n\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                                 <img width='500' height='200' src={responseImage}/>\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n\n                                    {loading && (\n                                        <>\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                                <Box sx={{ m: 1, position: 'relative' }}>\n                                                    <Fab\n                                                        aria-label=\"save\"\n                                                        color=\"secondary\"\n                                                        sx={buttonSx}\n\n                                                    >\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\n                                                    </Fab>\n                                                    {loading && (\n                                                        <CircularProgress\n                                                            size={68}\n                                                            sx={{\n                                                                color: green[500],\n                                                                position: 'absolute',\n                                                                top: -6,\n                                                                left: -6,\n                                                                zIndex: 1,\n                                                            }}\n                                                        />\n                                                    )}\n                                                </Box>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\n                                                </Typography>\n                                            </Box>\n                                        </>\n                                    )\n                                    }\n                                    {tryAgain && (\n                                        <>\n\n\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                                <Box sx={{ m: 1, position: 'relative' }}>\n                                                    <Fab\n                                                        aria-label=\"save\"\n                                                        color=\"secondary\"\n                                                        sx={buttonSx}\n\n                                                    >\n                                                        <FingerprintIcon />\n                                                    </Fab>\n                                                    {tryAgain && (\n                                                        <CircularProgress\n                                                            size={68}\n                                                            sx={{\n                                                                color: red[500],\n                                                                position: 'absolute',\n                                                                top: -6,\n                                                                left: -6,\n                                                                zIndex: 1,\n                                                            }}\n                                                        />\n                                                    )}\n                                                </Box>\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                                    Click to Recapture Again\n                                                </Typography>\n                                            </Box>\n                                        </>\n                                    )\n                                    }\n\n                                </Col>\n\n\n                            </Row>\n\n                            <Row>\n                                {capturedFingered.length >=1 ? (\n                                        <>\n                                            <Col md={12} >\n                                                <h3>Captured Fingerprints</h3>\n                                            </Col>\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\n                                                <List celled horizontal>\n                                                    {capturedFingered.map((x) => (\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\n                                                        </List.Item>\n                                                    ))}\n\n                                                </List>\n\n                                            </Col>\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\n                                        <List celled horizontal>\n                                            {[1,2,3].map((x) => (\n                                                <List.Item>\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\n                                                </List.Item>\n                                            ))}\n\n                                        </List>\n\n                                    </Col>\n                                            <br/><br/><br/><br/><br/><br/>\n                                            <Col md={12} >\n                                                <MatButton\n                                                    type='button'\n                                                    variant='contained'\n                                                    color='primary'\n                                                    onClick={saveBiometrics}\n                                                    // className={classes.button}\n                                                    startIcon={<SaveIcon/>}\n                                                >\n                                                    Save Capture\n                                                </MatButton>\n                                            </Col>\n                                        </>\n                                    )\n                                    :\n                                    \"\"\n                                }\n                            </Row>\n                        </CardBody>\n                    </Card>\n            </Form>\n*/}\n\n        </div>\n    );\n}\n\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport 'semantic-ui-css/semantic.min.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport PatientCardDetail from './PatientCard'\nimport { useHistory } from \"react-router-dom\";\nimport SubMenu from './SubMenu';\nimport RecentHistory from './../History/RecentHistory';\nimport PatientHistory from './../History/PatientHistory'\nimport ClinicVisit from '../Consultation/Index'\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\nimport PrEPVisit from './../PrepServices/PrEPVisit';\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\nimport Biometrics from './Biometric'\nimport axios from \"axios\";\nimport { url as baseUrl, token } from \"./../../../api\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '20.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\n\nfunction PatientCard(props) {\n    let history = useHistory();\n    const [patientDetail, setPatientDetail] = useState(\"\")\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\n    const { classes } = props;\n    const patientObjLocation = history.location && history.location.state ? history.location.state.patientObj : {}\n    //let patientObj =\"\"\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\n    //console.log(patientObj)\n    useEffect(() => {\n      PatientObject()\n     }, []);\n     async function PatientObject() {\n      axios\n          .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`,\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\n          )\n          .then((response) => {\n            setPatientDetail(response.data);\n            //patientObj=response.data\n          })\n          .catch((error) => {    \n          });        \n    }\n  return (\n    <div className={classes.root}>\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\n\t\t\t<ol className=\"breadcrumb\">\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\n\t\t\t</ol>\n\t\t  </div>\n      <Card >\n        <CardContent>\n          {/* This component is where the patient menu and route is define and manage */}\n            {/* start of patient card detail */}\n            <PatientCardDetail patientObj={patientDetail}  setActiveContent={setActiveContent} patientDetail={patientDetail}/> \n            {/* End of patient card detail */} \n            {/* This is the submenu components */}          \n            <SubMenu patientObj={patientObjLocation}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\n            <br/>\n            {/* This is the submenu routes */}\n            {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\n            {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\n            {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} patientDetail={patientDetail} PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-visit' &&( <PrEPVisit PatientObject={PatientObject}/>)}\n            {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)} \n            {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \n          {/* History Pages */}\n         \n         </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nPatientCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PatientCard);\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {format} from 'date-fns';\nimport MatButton from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport * as moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Card, CardContent} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport {ToastContainer, toast} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-widgets/dist/css/react-widgets.css\";\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\nimport {TiArrowBack} from 'react-icons/ti'\nimport {useForm} from \"react-hook-form\";\nimport {token, url as baseUrl } from \"../../../api\";\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/style.css'\nimport { getValue } from \"@syncfusion/ej2-base\";\nimport  './patient.css'\n// import Form from 'react-bootstrap/Form';\n\n\n\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(20),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    cardBottom: {\n        marginBottom: 20,\n    },\n    Select: {\n        height: 45,\n        width: 300,\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    root: {\n        flexGrow: 1,\n        maxWidth: 752,\n    },\n    demo: {\n        backgroundColor: theme.palette.background.default,\n    },\n    inline: {\n        display: \"inline\",\n    },\n    error:{\n        color: '#f85032',\n        fontSize: '12.8px'\n    }\n}));\n\n\nconst UserRegistration = (props) => {\n    console.log(props)\n    const [basicInfo, setBasicInfo]= useState(\n            {\n                active: true,\n                address: [],\n                contact: [],\n                contactPoint: [],\n                dateOfBirth: \"\",\n                deceased: false,\n                deceasedDateTime: null,\n                firstName: \"\",\n                genderId: \"\",\n                identifier: \"\",\n                otherName: \"\",\n                maritalStatusId: \"\",\n                educationId: \"\",\n                employmentStatusId:\"\",\n                dateOfRegistration: \"\",\n                isDateOfBirthEstimated: null,\n                age:\"\",\n                phoneNumber:\"\",\n                altPhonenumber:\"\",\n                dob:\"\",\n                countryId:\"\",\n                stateId:\"\",\n                district:\"\",\n                landmark:\"\",\n                sexId:\"\",\n                ninNumber:\"\"\n\n            }\n    )\n    const [relatives, setRelatives]= useState(\n                { \n                    address:\"\",\n                    phone:\"\",\n                    firstName: \"\",\n                    email: \"\",\n                    relationshipId: \"\",\n                    lastName: \"\",\n                    middleName: \"\"\n                }\n        )\n\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\n    const [contacts, setContacts] = useState([]);\n    const [saving, setSaving] = useState(false);\n    const [ageDisabled, setAgeDisabled] = useState(true);\n    const [showRelative, setShowRelative] = useState(false);\n    const [editRelative, setEditRelative] = useState(null);\n    const [genders, setGenders]= useState([]);\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\n    const [educationOptions, setEducationOptions]= useState([]);\n    const [occupationOptions, setOccupationOptions]= useState([]);\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\n    const [countries, setCountries] = useState([]);\n    const [states, setStates] = useState([]);\n    const [provinces, setProvinces] = useState([]);\n    const [errors, setErrors] = useState({})\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n     //HIV INFORMATION\n     const [femaleStatus, setfemaleStatus]= useState(false)\n     //const [values, setValues] = useState([]);\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\n     careEntryPointOther:\"\"});\n     const [carePoints, setCarePoints] = useState([]);\n     const [sourceReferral, setSourceReferral] = useState([]);\n     const [hivStatus, setHivStatus] = useState([]);\n     const [enrollSetting, setEnrollSetting] = useState([]);\n     const [tbStatus, setTbStatus] = useState([]);\n     const [kP, setKP] = useState([]);\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\n     //set ro show the facility name field if is transfer in \n     const [transferIn, setTransferIn] = useState(false);\n     // display the OVC number if patient is enrolled into OVC \n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\n     //Input fields to hidden base on some conditions\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\n    \n    const locationState = location.state;\n    let patientId = null;\n    let patientObj = {};\n    patientId = locationState ? locationState.patientId : null;\n    patientObj = locationState ? locationState.patientObj : {}; \n    //status for hospital Number \n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\n    \n    useEffect(() => { \n        loadGenders();\n        loadMaritalStatus();\n        loadEducation();\n        loadOccupation();\n        loadRelationships();\n        loadTopLevelCountry();        \n        CareEntryPoint();\n        SourceReferral();\n        HivStatus();\n        EnrollmentSetting();\n        TBStatus();\n        KP();\n        PregnancyStatus();\n        GetCountry();\n        if(patientObj){\n            const contacts = patientObj.contact ? patientObj.contact : [];\n            //setContacts(contacts.contact);\n            let newConatctsInfo=[]\n            //Manipulate relatives contact  address:\"\",\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \n                const contactInfo = \n                    { \n                        address:x.address.line[0],\n                        phone:x.contactPoint.value,\n                        firstName:x.firstName,\n                        email: \"\",\n                        relationshipId: x.relationshipId,\n                        lastName: x.surname,\n                        middleName: x.otherName\n                    }\n                newConatctsInfo.push(contactInfo)\n            })\n            setContacts(newConatctsInfo);\n            const identifiers = patientObj.identifier;\n            const address = patientObj.address;\n            const contactPoint = patientObj.contactPoint;\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\n            basicInfo.dob=patientObj.dateOfBirth\n            basicInfo.firstName=patientObj.firstName\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\n            basicInfo.middleName=patientObj.otherName\n            basicInfo.lastName=patientObj.surname\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\n            basicInfo.sexId=patientObj.sex \n            basicInfo.educationId=patientObj.education.id\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\n            basicInfo.email=email && email.value ? email.value : \"\"\n            basicInfo.address=country && country.city ? country.city : \"\"\n            basicInfo.landmark=country.line[0]\n            basicInfo.countryId=country.countryId\n            setStateByCountryId(country.countryId); \n            getProvincesId(country.stateId)\n            basicInfo.stateId=country.stateId\n            basicInfo.district=country.district\n            setObjValues(patientObj.enrollment)\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\n            basicInfo.age=patientAge\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\n            basicInfo.ninNumber=patientObj.ninNumber\n\n        }\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\n            alert('Date of registration can not be earlier than date of birth')\n        }\n        \n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\n\n    const loadGenders = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setGenders(response.data);\n        } catch (e) {\n            \n        }\n    }, []);\n    const loadMaritalStatus = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setMaritalStatusOptions(response.data);\n        } catch (e) {\n        }\n    }, []);\n    const loadEducation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setEducationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadOccupation = useCallback(async () => {\n        try {\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n            setOccupationOptions(response.data);\n        } catch (e) {\n\n        }\n    }, []);\n    const loadRelationships = useCallback(async () => {\n      try {\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n          setRelationshipOptions(response.data);\n      } catch (e) {\n      }\n    }, []);\n    const loadTopLevelCountry = useCallback(async () => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        settopLevelUnitCountryOptions(response.data);\n    }, []);\n    const loadOrganisationUnitsByParentId = async (parentId) => {\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\n        return response.data;\n    };\n\n    //Country List\n      const GetCountry =()=>{\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setCountries(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });        \n    }\n    //Calculate Date of birth \n    const calculate_age = dob => {\n        var today = new Date();\n        var dateParts = dob.split(\"-\");\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\n        var age_now = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                    age_now--;\n                }\n            if (age_now === 0) {\n                    return m + \" month(s)\";\n                }\n                return age_now ;\n      };\n     //Get States from selected country\n     const getStates = e => {\n        const getCountryId =e.target.value;\n\n            setStateByCountryId(getCountryId); \n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\n    };\n    //Get list of State\n    function setStateByCountryId(getCountryId) {\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setStates(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });  \n    }\n    \n     //fetch province\n     const getProvinces = e => {\n            const stateId = e.target.value;\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\n            axios\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                setProvinces(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });  \n    };\n    function getProvincesId(getStateId) {\n        axios\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            setProvinces(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });  \n    }\n    //Date of Birth and Age handle \n    const handleDobChange = (e) => {\n        if (e.target.value) {\n            const today = new Date();\n            const birthDate = new Date(e.target.value);\n            let age_now = today.getFullYear() - birthDate.getFullYear();\n            const m = today.getMonth() - birthDate.getMonth();\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n                age_now--;\n            }\n            basicInfo.age=age_now\n            //setBasicInfo({...basicInfo, age: age_now});        \n        } else {\n            setBasicInfo({...basicInfo, age:  \"\"});\n        }\n        setBasicInfo({...basicInfo, dob: e.target.value});\n        \n    }\n    const handleDateOfBirthChange = (e) => {\n        if (e.target.value == \"Actual\") {\n            setAgeDisabled(true);\n        } else if (e.target.value == \"Estimated\") {\n            setAgeDisabled(false);\n        }\n    }\n    const handleAgeChange = (e) => {\n        if (!ageDisabled && e.target.value) {\n            \n            const currentDate = new Date();\n            currentDate.setDate(15);\n            currentDate.setMonth(5);\n            const estDob = moment(currentDate.toISOString());\n            const dobNew = estDob.add((e.target.value * -1), 'years');\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\n\n        }\n        setBasicInfo({...basicInfo, age: e.target.value});\n    }\n    //End of Date of Birth and Age handling \n    //Handle Input Change for Basic Infor\n    const handleInputChangeBasic = e => {        \n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \n        //manupulate inpute fields base on gender/sex \n        if(e.target.name==='sexId' && e.target.value==='Female') {\n            setfemaleStatus(true)\n        }\n        if(e.target.name==='firstName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='lastName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='middleName' && e.target.value!==''){\n            const name = alphabetOnly(e.target.value)\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\n        }\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\n            async function getCharacters() {\n                const hosiptalNumber=e.target.value\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\n                    );\n                if(response.data!==true){\n                    setHospitalNumStatus(false)\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\n                    setHospitalNumStatus2(true)\n                }else{\n                    setHospitalNumStatus(false)\n                    setHospitalNumStatus2(true)\n                }\n            }\n            getCharacters();\n            }  \n             \n    } \n    //Function to show relatives \n    const handleAddRelative = () => {\n        setShowRelative(true);\n    };\n    //Function to cancel the relatives form\n    const handleCancelSaveRelationship = () => {\n        setShowRelative(false);\n    }\n    const handleCancel =()=>{\n        history.push({ pathname: '/' });\n    }\n    /*****  Validation  Relationship Input*/\n    const validateRelatives = () => {\n        let temp = { ...errors }\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n    //Function to add relatives \n    const handleSaveRelationship = (e) => {\n        if(validateRelatives()){\n            setContacts([...contacts, relatives])\n        }\n\n    }\n    const handleDeleteRelative = (index) => {\n        contacts.splice(index, 1);\n        setContacts([...contacts]);\n    };\n    const handleEditRelative = (relative, index) => {\n        setRelatives(relative)\n        setShowRelative(true);\n        contacts.splice(index, 1); \n    };     \n    const getRelationship = (relationshipId) => {\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\n        return relationship ? relationship.display : '';\n    };\n    const handleInputChangeRelatives = e => {        \n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \n    }\n    /*****  Validation  */\n    const validate = () => {\n        let temp = { ...errors }\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \n            //HIV FORM VALIDATION\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\n            \n                setErrors({ ...temp })\n        return Object.values(temp).every(x => x == \"\")\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault(); \n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\n        basicInfo.sexId=getSexId.id\n         if(validate()){\n            let newConatctsInfo=[]\n            //Manipulate relatives contact  address:\"\",\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\n                \n                const contactInfo = { \n                address: {\n                    line: [\n                        x.address\n                    ],\n                },\n                contactPoint: {\n                    type: \"phone\",\n                    value: x.phone\n                },\n                firstName: x.firstName,\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\n                relationshipId: x.relationshipId,\n                surname: x.lastName,\n                otherName: x.middleName\n            }\n            \n            newConatctsInfo.push(contactInfo)\n            })\n            try {\n                const patientForm = {\n                    active: true,\n                    address: [\n                        {\n                            \"city\": basicInfo.address,\n                            \"countryId\": basicInfo.countryId,\n                            \"district\": basicInfo.district,\n                            \"line\": [\n                                basicInfo.landmark\n                            ],\n                            \"organisationUnitId\": 0,\n                            \"postalCode\": \"\",\n                            \"stateId\": basicInfo.stateId\n                        }\n                    ],\n                    contact: newConatctsInfo,\n                    contactPoint: [],\n                    dateOfBirth: basicInfo.dob,\n                    deceased: false,\n                    deceasedDateTime: null,\n                    firstName: basicInfo.firstName,\n                    genderId: basicInfo.genderId,\n                    sexId:basicInfo.sexId,\n                    identifier: [\n                        {\n                            \"assignerId\": 1,\n                            \"type\": \"HospitalNumber\",\n                            \"value\": basicInfo.hospitalNumber\n                        }\n                    ],\n                    otherName: basicInfo.middleName,\n                    maritalStatusId: basicInfo.maritalStatusId,\n                    surname: basicInfo.lastName,\n                    educationId: basicInfo.educationId,\n                    employmentStatusId: basicInfo.employmentStatusId,\n                    dateOfRegistration: basicInfo.dateOfRegistration,\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\n                    ninNumber: basicInfo.ninNumber\n                };\n                const phone = {\n                    \"type\": \"phone\",\n                    \"value\": basicInfo.phoneNumber\n                };\n                if (basicInfo.email) {\n                    const email = {\n                        \"type\": \"email\",\n                        \"value\": basicInfo.email\n                    }\n                    patientForm.contactPoint.push(email);\n                }\n                if (basicInfo.altPhonenumber) {\n                    const altPhonenumber = {\n                        \"type\": \"altphone\",\n                        \"value\": basicInfo.altPhonenumber\n                    }\n                    patientForm.contactPoint.push(altPhonenumber);\n                }\n                patientForm.contactPoint.push(phone);\n                patientForm.id = patientId;\n                patientDTO.person=patientForm;\n                patientDTO.hivEnrollment=objValues;\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                toast.success(\"Patient Updated successful\");\n                history.push('/');\n            } catch (error) {                \n                if(error.response && error.response.data){\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\n                    toast.error(errorMessage); \n                }\n            }\n        }\n\n    }\n    const alphabetOnly=(value)=>{\n        const result = value.replace(/[^a-z]/gi, '');\n        return result\n    }\n   \n    const CareEntryPoint =()=>{\n            axios\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\n                )\n                .then((response) => {\n                    //console.log(response.data);\n                    setCarePoints(response.data);\n                })\n                .catch((error) => {\n                //console.log(error);\n                });            \n    }\n    //Get list of Source of Referral\n    const SourceReferral =()=>{\n            axios\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\n            )\n            .then((response) => {\n                //console.log(response.data);\n                setSourceReferral(response.data);\n            })\n            .catch((error) => {\n            //console.log(error);\n            });        \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const HivStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setHivStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const EnrollmentSetting =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setEnrollSetting(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of HIV STATUS ENROLLMENT\n    const TBStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setTbStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const KP =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setKP(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    //Get list of KP\n    const PregnancyStatus =()=>{\n        axios\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\n        )\n        .then((response) => {\n            //console.log(response.data);\n            setPregnancyStatus(response.data);\n        })\n        .catch((error) => {\n        //console.log(error);\n        });    \n    }\n    const handleInputChange = e => {        \n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\n        if(e.target.name ===\"entryPointId\" ){\n            if(e.target.value===\"21\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }\n        if(e.target.name ===\"pregnancyStatusId\" ){\n            console.log(e.target.value)\n            if(e.target.value===\"72\"){\n                setTransferIn(true)\n            }else{\n                setTransferIn(false)\n            }\n        }                  \n    }    \n    \n    const checkPhoneNumber=(e, inputName)=>{\n        const limit = 10;\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \n    }\n    const checkPhoneNumberBasic=(e, inputName)=>{\n        const limit = 10;\n\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \n    } \n    //Handle CheckBox \n    const handleCheckBox =e =>{\n        if(e.target.checked){\n            setOvcEnrolled(true)\n        }else{\n            setOvcEnrolled(false)\n        }\n    }\n\n\n    return (\n        <>\n            <ToastContainer autoClose={3000} hideProgressBar />\n            <Card className={classes.cardBottom}>\n                <CardContent>\n                <Link\n                    to={{\n                        pathname: \"/patient-history\",\n                        state: { patientObj: patientObj  }\n                    }}\n                >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\" float-end ms-1\"\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                            startIcon={<TiArrowBack />}\n                        >\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\n                        </Button>\n                    </Link>\n                    <br />\n                    <br />\n                    <div className=\"col-xl-12 col-lg-12\">\n                        <Form >\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className=\"basic-form\">\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dateOfRegistration\"\n                                                        id=\"dateOfRegistration\"\n                                                        value={basicInfo.dateOfRegistration}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            \n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"hospitalNumber\"\n                                                        id=\"hospitalNumber\"\n                                                        value={basicInfo.hospitalNumber}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                        disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.hospitalNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\n                                                    ) : \"\" }\n                                                    {errors.hospitalNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\n                                                    ) : \"\" }\n                                                    {hospitalNumStatus===true ? (\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\n                                                    ) : \"\" }\n                                                    {hospitalNumStatus2===true ? (\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\n                                                    ) :\"\"}\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">EMR Number* </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"emrNumber\"\n                                                        id=\"emrNumber\"\n                                                        disabled='true'\n                                                        value={Math.floor(Math.random() * 1094328)}\n                                                        //onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            \n                                        </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"firstName\">First Names *</Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"firstName\"\n                                                        id=\"firstName\"\n                                                        value={basicInfo.firstName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                    {errors.firstName !==\"\" ? (\n                                                    <span className={classes.error}>{errors.firstName}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Middle Name</Label>\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"middleName\"\n                                                        id=\"middleName\"\n                                                        value={basicInfo.middleName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Last Name *</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"lastName\"\n                                                        id=\"lastName\"\n                                                        value={basicInfo.lastName}\n                                                        onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   {errors.lastName !==\"\" ? (\n                                                    <span className={classes.error}>{errors.lastName}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row\">\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Sex *</Label>\n                                                    <select\n                                                            className=\"form-control\"\n                                                            name=\"sexId\"\n                                                            id=\"sexId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.sexId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                            \n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {genders.map((gender, index) => (\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        {errors.sexId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.sexId}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-2 col-md-2\">\n                                                <FormGroup>\n                                                    <Label>Date Of Birth</Label>\n                                                    <div className=\"radio\">\n                                                        <label>\n                                                            <input\n                                                                type=\"radio\"\n                                                                value=\"Actual\"\n                                                                name=\"dateOfBirth\"\n                                                                defaultChecked\n                                                                //disabled={locationState.actionType==='update'? false : true}\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            /> Actual\n                                                        </label>\n                                                    </div>\n                                                    <div className=\"radio\">\n                                                        <label>\n                                                            <input\n                                                                type=\"radio\"\n                                                                value=\"Estimated\"\n                                                                name=\"dateOfBirth\"\n                                                                //disabled={locationState.actionType==='update'? false : true}\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            /> Estimated\n                                                        </label>\n                                                    </div>\n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-3\">\n                                                <FormGroup>\n                                                    <Label>Date</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"date\"\n                                                        name=\"dob\"\n                                                        id=\"dob\"\n                                                        max={today}\n                                                        value={basicInfo.dob}\n                                                        onChange={handleDobChange}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            </div>\n\n                                            <div className=\"form-group mb-3 col-md-3\">\n                                                <FormGroup>\n                                                    <Label>Age</Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"number\"\n                                                        name=\"age\"\n                                                        id=\"age\"\n                                                        value={basicInfo.age}\n                                                        disabled={ageDisabled}\n                                                        onChange={handleAgeChange}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    />\n                                                </FormGroup>\n                                            </div>\n                                        </div>\n\n                                        <div className={\"row\"}>\n{/*                                            {watchShowAge >=0 &&\n                                            <>*/}\n                                                <div className=\"form-group mb-3 col-md-3\">\n                                                    <FormGroup>\n                                                        <Label>Marital Status</Label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"maritalStatusId\"\n                                                            id=\"maritalStatusId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.maritalStatusId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        \n                                                    </FormGroup>\n                                                </div>\n\n                                                <div className=\"form-group  col-md-4\">\n                                                    <FormGroup>\n                                                        <Label>Employment Status *</Label>\n                                                        <select\n                                                            className=\"form-control\"\n                                                            name=\"employmentStatusId\"\n                                                            id=\"employmentStatusId\"\n                                                            onChange={handleInputChangeBasic}\n                                                            value={basicInfo.employmentStatusId}\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                        >\n                                                            <option value={\"\"}>Select</option>\n                                                            {occupationOptions.map((occupationOption, index) => (\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\n                                                            ))}\n                                                        </select>\n                                                        {errors.employmentStatusId !==\"\" ? (\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\n                                                        ) : \"\" }\n                                                    </FormGroup>\n                                                </div>\n\n                                            <div className=\"form-group  col-md-4\">\n                                                <FormGroup>\n                                                    <Label>Education Level *</Label>\n                                                    <select\n                                                        className=\"form-control\"\n                                                        name=\"educationId\"\n                                                        id=\"educationId\"\n                                                        onChange={handleInputChangeBasic}\n                                                        value={basicInfo.educationId}\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                        //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                        <option value={\"\"}>Select</option>\n                                                        {educationOptions.map((educationOption, index) => (\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\n                                                        ))}\n                                                    </select>\n                                                    {errors.educationId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.educationId}</span>\n                                                    ) : \"\" }\n                                                </FormGroup>\n                                            </div>\n                                            <div className=\"form-group mb-3 col-md-4\">\n                                                <FormGroup>\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\n                                                    <input\n                                                        className=\"form-control\"\n                                                        type=\"text\"\n                                                        name=\"nin\"\n                                                        id=\"nin\"\n                                                        value={basicInfo.ninNumber}\n                                                        //onChange={handleInputChangeBasic}\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\n                                                    />\n                                                   \n                                                </FormGroup>\n                                            \n                                        </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Phone Number *</Label>\n                                                <PhoneInput\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                    country={'ng'}\n                                                    placeholder=\"(234)7099999999\"\n                                                    maxLength={5}\n                                                    name=\"phoneNumber\"\n                                                    id=\"phoneNumber\"\n                                                    value={basicInfo.phoneNumber}\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    \n                                                />\n                                                {errors.phoneNumber !==\"\" ? (\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Alt. Phone Number</Label>\n                                                <PhoneInput\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                    country={'ng'}\n                                                    placeholder=\"(234)7099999999\"\n                                                    value={basicInfo.altPhonenumber}\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                />\n\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group col-md-4\">\n                                            <FormGroup>\n                                                <Label>Email</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"email\"\n                                                    name=\"email\"\n                                                    id=\"email\"\n                                                    onChange={handleInputChangeBasic}\n                                                    value={basicInfo.email}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                />\n                                               \n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Country *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"countryId\"\n                                                    id=\"countryId\"\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    value={basicInfo.countryId}\n                                                    onChange={getStates}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value={\"\"}>Select</option>\n                                                    {countries.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.countryId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.countryId}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>State *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"stateId\"\n                                                    id=\"stateId\"\n                                                    value={basicInfo.stateId}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    onChange={getProvinces}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value=\"\">Select</option>\n                                                    {states.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.stateId !==\"\" ? (\n                                                    <span className={classes.error}>{errors.stateId}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Province/District/LGA *</Label>\n                                                <select\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"district\"\n                                                    id=\"district\"\n                                                    value={basicInfo.district}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    onChange={handleInputChangeBasic}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    >\n                                                    <option value=\"\">Select</option>\n                                                    {provinces.map((value, index) => (\n                                                        <option key={index} value={value.id}>\n                                                            {value.name}\n                                                        </option>\n                                                    ))}\n                                                </select>\n                                                {errors.district !==\"\" ? (\n                                                    <span className={classes.error}>{errors.district}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n                                    </div>\n\n                                    <div className={\"row\"}>\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Street Address*</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"address\"\n                                                    id=\"address\"\n                                                    value={basicInfo.address}\n                                                    onChange={handleInputChangeBasic}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                   \n                                                />\n                                               {errors.address !==\"\" ? (\n                                                    <span className={classes.error}>{errors.address}</span>\n                                                    ) : \"\" }\n                                            </FormGroup>\n                                        </div>\n\n                                        <div className=\"form-group  col-md-4\">\n                                            <FormGroup>\n                                                <Label>Landmark</Label>\n                                                <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    name=\"landmark\"\n                                                    id=\"landmark\"\n                                                    value={basicInfo.landmark}\n                                                    onChange={handleInputChangeBasic}\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                    //disabled={locationState.actionType==='update'? false : true}\n                                                    \n                                                />\n                                                \n                                            </FormGroup>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        {\n                                            contacts && contacts.length > 0 && (\n                                                <div className=\"col-xl-12 col-lg-12\">\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\n                                                        <thead className=\"mb-3\">\n                                                        <tr>\n                                                            <th>Relationship Type</th>\n                                                            <th>Name</th>\n                                                            <th>Phone</th>\n                                                            <th>Address</th>\n                                                            <th>Actions</th>\n                                                        </tr>\n                                                        </thead>\n                                                        <tbody className=\"mb-3\">\n                                                        {contacts.map((item, index) => {\n                                                            return (\n                                                                <tr key={item.index} className=\"mb-3\">\n                                                                    <td>{ \n                                                                        getRelationship(item.relationshipId) \n                                                                    }</td>\n                                                                    <td>{ \n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\n                                                                    }</td>\n                                                                    <td>{ \n                                                                            item.phone\n                                                                        }</td>\n                                                                    <td>{ \n                                                                            item.address\n                                                                    }</td>\n                                                                    <td>\n                                                                        <button type=\"button\"\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\n                                                                                onClick={() => handleEditRelative(item, index)}\n                                                                                >\n                                                                            <FontAwesomeIcon icon=\"edit\" />\n                                                                        </button>\n                                                                        &nbsp;&nbsp;\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\n                                                                            onClick={(e) => handleDeleteRelative(index)}\n                                                                            >\n                                                                            <FontAwesomeIcon icon=\"trash\" />\n                                                                        </button>\n                                                                    </td>\n                                                                </tr>\n                                                            );\n                                                        })}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            )\n                                        }\n                                        <div className=\"col-xl-12 col-lg-12\">\n                                            {\n                                                showRelative && (\n                                                    <div className=\"card\">\n                                                        <div className=\"card-body\">\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\n                                                                        <select\n                                                                            className=\"form-control\"\n                                                                            name=\"relationshipId\"\n                                                                            id=\"relationshipId\"\n                                                                            value={relatives.relationshipId}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                            >\n                                                                            <option value={\"\"}>Select</option>\n                                                                            {relationshipOptions.map((relative, index) => (\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\n                                                                            ))}\n                                                                        </select>\n                                                                        {errors.relationshipId !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"firstName\"\n                                                                            value={relatives.firstName}\n                                                                            id=\"firstName\"\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                       {errors.firstName !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.firstName}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Middle Name</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"middleName\"\n                                                                            id=\"middleName\"\n                                                                            value={relatives.middleName}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label>Last Name *</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"lastName\"\n                                                                            id=\"lastName\"\n                                                                            value={relatives.lastName}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                       {errors.lastName !==\"\" ? (\n                                                                        <span className={classes.error}>{errors.lastName}</span>\n                                                                        ) : \"\" }\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\n                                                                        <PhoneInput\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\n                                                                            country={'ng'}\n                                                                            placeholder=\"(234)7099999999\"\n                                                                            name=\"phone\"\n                                                                            value={relatives.phone}\n                                                                            id=\"phone\"\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\n                                                                        />\n                                                                    \n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactEmail\">Email</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"email\"\n                                                                            id=\"email\"\n                                                                            value={relatives.email}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n\n                                                                <div className=\"form-group mb-3 col-md-3\">\n                                                                    <FormGroup>\n                                                                        <Label for=\"contactAddress\">Address</Label>\n                                                                        <input\n                                                                            className=\"form-control\"\n                                                                            type=\"text\"\n                                                                            name=\"address\"\n                                                                            id=\"address\"\n                                                                            value={relatives.address}\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                                                            onChange={handleInputChangeRelatives}\n                                                                            //disabled={locationState.actionType==='update'? false : true}\n                                                                        />\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\n                                                                    </FormGroup>\n                                                                </div>\n                                                            </div>\n\n                                                            <div className=\"row\">\n                                                                <div className=\"col-1\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"primary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleSaveRelationship}\n                                                                    >\n                                                                        Add\n                                                                    </MatButton>\n                                                                </div>\n\n                                                                <div className=\"col-1\">\n                                                                    <MatButton\n                                                                        type=\"button\"\n                                                                        variant=\"contained\"\n                                                                        color=\"secondary\"\n                                                                        className={classes.button}\n                                                                        onClick={handleCancelSaveRelationship}\n                                                                    >\n                                                                        Cancel\n                                                                    </MatButton>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\"></div>\n                                        <MatButton\n                                            type=\"button\"\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className={classes.button}\n                                            startIcon={<AddIcon />}\n                                            onClick={handleAddRelative}\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                                        >\n                                            Add a Relative/Next Of Kin\n                                        </MatButton>\n                                    {/* </div> */}\n                                </div>\n                            </div>\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\n                            <div className=\"card\">\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\n                                </div>\n\n                                <div className=\"card-body\">\n                                <div className=\"row\">\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"uniqueId\"\n                                        id=\"uniqueId\"\n                                        onChange={handleInputChange}\n                                        value={objValues.uniqueId}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        disabled\n                                        \n                                    />\n                                    {errors.uniqueId !==\"\" ? (\n                                    <span className={classes.error}>{errors.uniqueId}</span>\n                                    ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"dateOfRegistration\"\n                                        id=\"dateOfRegistration\"\n                                        min={basicInfo.dateOfRegistration}\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\n                                        onChange={handleInputChange}\n                                        value={objValues.dateOfRegistration}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    />\n                                    {errors.dateOfRegistration !==\"\" ? (\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\n                                    ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"entryPointId\"\n                                    id=\"entryPointId\"\n                                    onChange={handleInputChange}\n                                    value={objValues.entryPointId}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    //disabled={locationState.actionType==='update'? false : true}\n                                    \n                                >\n                                <option value=\"\"> </option>                  \n                                {carePoints.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                </Input>\n                                {errors.entryPointId !==\"\" ? (\n                                    <span className={classes.error}>{errors.entryPointId}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                                \n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                {transferIn===true ? \n                                    (\n                                        <FormGroup>\n                                        <Label >Facility Name</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"facilityName\"\n                                            id=\"facilityName\"\n                                            onChange={handleInputChange}\n                                            value={objValues.facilityName}  \n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            //disabled={locationState.actionType==='update'? false : true}\n                                        />\n                                        </FormGroup>\n                                    ):\"\"}\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                <FormGroup>\n                                <Label >HIV Status at Registration *</Label>\n                                <Input\n                                    type=\"select\"\n                                    name=\"statusAtRegistrationId\"\n                                    id=\"statusAtRegistrationId\"\n                                    onChange={handleInputChange}\n                                    value={objValues.statusAtRegistrationId}\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                    //disabled={locationState.actionType==='update'? false : true}\n                                    \n                                >\n                                <option value=\"\"> Select</option>                  \n                                {hivStatus.map((value) => (\n                                    <option key={value.id} value={value.id}>\n                                        {value.display}\n                                    </option>\n                                ))}\n                                </Input>\n                                {errors.statusAtRegistrationId !==\"\" ? (\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\n                                    ) : \"\" }\n                                </FormGroup>\n                                </div>\n\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Date of Confirmed HIV Test *</Label>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"dateConfirmedHiv\"\n                                        id=\"dateConfirmedHiv\"\n                                        min={basicInfo.dob}\n                                        max={objValues.dateOfRegistration}\n                                        onChange={handleInputChange}\n                                        value={objValues.dateConfirmedHiv}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    /> \n                                    {errors.dateConfirmedHiv !==\"\" ? (\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                        ) : \"\" } \n                                    </FormGroup>\n                                </div>\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Source of Referral *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"sourceOfReferrerId\"\n                                        id=\"sourceOfReferrerId\"\n                                        value={objValues.sourceOfReferrerId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        \n                                    >\n                                        <option value=\"\">Select </option>                 \n                                            {sourceReferral.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                    {errors.sourceOfReferrerId !==\"\" ? (\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                \n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Enrollment Setting *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"enrollmentSettingId\"\n                                        id=\"enrollmentSettingId\"\n                                        value={objValues.enrollmentSettingId}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        onChange={handleInputChange}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>\n\n                                            {enrollSetting.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n                                    </Input>\n                                    {errors.enrollmentSettingId !==\"\" ? (\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                {(femaleStatus && basicInfo.age > 9) && (\n                                    <>\n                                   \n                                    <div className = \"form-group mb-3 col-md-6\" >\n                                        <FormGroup>\n                                        <Label> Pregnancy </Label>\n                                        <Input\n                                            type = \"select\"\n                                            name = \"pregnancyStatusId\"\n                                            id = \"pregnancyStatusId\"\n                                            value = {objValues.pregnancyStatusId}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            onChange = {handleInputChange}  \n                                            //disabled={locationState.actionType==='update'? false : true}                                      \n                                        >\n                                        < option value = \"\" >Select </option>\n                                        {pregnancyStatus.map((value) => (\n                                                    <option key={value.id} value={value.id}>\n                                                        {value.display}\n                                                    </option>\n                                                ))}\n                                        </Input>                                                                        \n                                    </FormGroup>  \n                                    </div>\n                                    {objValues.pregnancyStatusId!=='72' && (\n                                    <>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date of LMP </Label>                                    \n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateOfLpm\"\n                                            id=\"dateOfLpm\"\n                                            max={today}\n                                            onChange={handleInputChange}\n                                            value={objValues.dateOfLpm}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            //disabled={locationState.actionType==='update'? false : true}\n                                        />  \n                                            \n                                        </FormGroup>\n                                    </div>\n                                    </>\n                                    )}\n                                    </>\n                                )}\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >TB Status * </Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"tbStatusId\"\n                                        id=\"tbStatusId\"\n                                        value={objValues.tbStatusId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>\n                                            {tbStatus.map((value) => (\n                                                <option key={value.id} value={value.id}>\n                                                    {value.display}\n                                                </option>\n                                            ))}\n\n                                    </Input>\n                                    {errors.tbStatusId !==\"\" ? (\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                {hideTargetGroup===\"false\" ? (\n                                <div className=\"form-group mb-3 col-md-6\">\n                                    <FormGroup>\n                                    <Label >Target Group *</Label>\n                                    <Input\n                                        type=\"select\"\n                                        name=\"targetGroupId\"\n                                        id=\"targetGroupId\"\n                                        value={objValues.targetGroupId}\n                                        onChange={handleInputChange}\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        >\n                                        <option value=\"\"> Select</option>                    \n                                                {kP.map((value) => (\n                                                    <option key={value.id} value={value.id}>\n                                                        {value.display}\n                                                    </option>\n                                                ))}\n                                    </Input>\n                                    {errors.targetGroupId !==\"\" ? (\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\n                                        ) : \"\" }\n                                    </FormGroup>\n                                </div>\n                                ) : \"\"}\n                                <div className=\"form-group mb-3 col-md-3\">\n                                    \n                                    <div className=\"form-check custom-checkbox ml-1 \">\n                                        <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        name=\"ovc_enrolled\"\n                                        id=\"ovc_enrolled\"                                        \n                                        onChange={handleCheckBox}\n                                        //disabled={locationState.actionType==='update'? false : true}\n                                        />\n                                        <label\n                                        className=\"form-check-label\"\n                                        htmlFor=\"basic_checkbox_1\"\n                                        >\n                                        Enrolled into OVC?\n                                        </label>\n                                    </div>\n                                </div>\n                                {basicInfo.age <=14 && (\n                                <div className=\"form-group mb-3 col-md-3\">\n                                    \n                                    <div className=\"form-check custom-checkbox ml-1 \">\n                                        <input\n                                        type=\"checkbox\"\n                                        className=\"form-check-input\"\n                                        name=\"ovc_enrolled\"\n                                        id=\"ovc_enrolled\"                                        \n                                        onChange={handleCheckBox}\n                                        />\n                                        <label\n                                        className=\"form-check-label\"\n                                        htmlFor=\"basic_checkbox_1\"\n                                        >\n                                        Enrolled into OVC?\n                                        </label>\n                                    </div>\n                                </div>\n                                )}\n                                {/* <div className=\"form-group mb-3 col-md-3\">\n                                    {ovcEnrolled===true ? \n                                        (\n                                        <FormGroup>\n                                        <Label >OVC Number</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"ovcNumber\"\n                                            id=\"ovcNumber\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.ovcNumber}\n                                            \n                                        />\n                                        </FormGroup>\n                                        )\n                                        :\n                                        \"\"\n                                    }\n                                </div> */}\n                                \n                                {ovcEnrolled===true && \n                                (\n                                <>        \n                                <div className=\"row\">\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Household Unique Number</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"householdNumber\"\n                                            id=\"householdNumber\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.householdNumber}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Referred To OVC Partner</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"referredToOVCPartner\"\n                                            id=\"referredToOVCPartner\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.referredToOVCPartner}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date Referred To OVC Partner</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateReferredToOVCPartner\"\n                                            id=\"dateReferredToOVCPartner\"\n                                            min={basicInfo.dob}\n                                            max={objValues.dateOfRegistration }\n                                            onChange={handleInputChange}\n                                            value={objValues.dateReferredToOVCPartner}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            \n                                        /> \n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                            ) : \"\" }  */}\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Referred From OVC Partner</Label>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"referredFromOVCPartner\"\n                                            id=\"referredFromOVCPartner\"\n                                            required={ovcEnrolled}\n                                            onChange={handleInputChange}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            value={objValues.referredFromOVCPartner}\n                                            \n                                        />\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"form-group mb-3 col-md-6\">\n                                        <FormGroup>\n                                        <Label >Date Referred From OVC Partner</Label>\n                                        <Input\n                                            type=\"date\"\n                                            name=\"dateReferredFromOVCPartner\"\n                                            id=\"dateReferredFromOVCPartner\"\n                                            min={basicInfo.dob}\n                                            max={objValues.dateOfRegistration }\n                                            onChange={handleInputChange}\n                                            value={objValues.dateReferredFromOVCPartner}\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\n                                            \n                                        /> \n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\n                                            ) : \"\" }  */}\n                                        </FormGroup>\n                                    </div>\n                                </div>\n                                </>\n                                )}\n                            \n                            </div>\n                                </div>\n                            </div>\n                            {/* END OF HIV ENROLLEMENT FORM */}\n                            {saving ? <Spinner /> : \"\"}\n\n                            <br />\n\n                            {locationState.actionType ==='update' ?\n                            (\n                                <>\n                                    <MatButton\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.button}\n                                        startIcon={<SaveIcon />}\n                                        onClick={handleSubmit}\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\n                                    >\n                                        {!saving ? (\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\n                                        ) : (\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\n                                        )}\n                                    </MatButton>\n            \n                                    <MatButton\n                                        variant=\"contained\"\n                                        className={classes.button}\n                                        startIcon={<CancelIcon />}\n                                        onClick={handleCancel}\n                                        style={{backgroundColor:'#992E62'}}\n                                    >\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\n                                    </MatButton>\n                            </>\n                            ):\"\"}\n                        </Form>\n                    </div>\n                </CardContent>\n            </Card>\n        </>\n    );\n};\n\nexport default UserRegistration","import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./../src/main/webapp/css/style.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Home from './main/webapp/jsx/components/Home'\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n      <ToastContainer />\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/patient-dashboard\">\n            {/* This is the component to access patient dashboard */}\n            <PatientDetail />\n          </Route> \n          \n          <Route path=\"/update-patient\">\n            <UpdatePatientEnrollment />\n          </Route>\n\n          <Route path=\"/\">\n            {/* This is the entry point to the application */}\n            <Home />\n          </Route>       \n          \n        </Switch>\n      </div>\n </Router>\n  );\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let direction = 'ltr';\n\nexport const dezThemeSet = [\n\t{ /* Default */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_1\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"full\",\n\t\tdirection: direction\n\t},\n\t{ /* Demo Theme 1 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tprimary: \"color_5\",\n\t\theaderBg: \"color_5\",\n\t\tnavheaderBg: \"color_1\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tdirection: direction\n\t},\n\t { /* Demo Theme 2 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_11\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_11\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_11\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 3 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"dark\",\n\t\tlayout: \"vertical\",\n\t\theaderBg: \"color_3\",\n\t\tnavheaderBg: \"color_3\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t/* Demo Theme 4 */\t\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"full\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t\t\n\t},\n\t{\n\t\t/* Demo Theme 5 */\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"horizontal\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarBg: \"color_9\",\n\t\tsidebarStyle: \"modern\",\n\t\tsidebarPosition: \"static\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_9\",\n\t\tdirection: direction\n\t},\n\t/* {\n\t\t//Demo Theme 6\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_3\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"mini\",\n\t\tsidebarBg: \"color_10\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_1\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 7 \n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_1\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"compact\",\n\t\tsidebarBg: \"color_1\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_6\",\n\t\tdirection: direction\n\t},\n\t{\n\t\t// Demo Theme 8 *\n\t\ttypography: \"poppins\",\n\t\tversion: \"light\",\n\t\tlayout: \"vertical\",\n\t\tnavheaderBg: \"color_15\",\n\t\theaderBg: \"color_1\",\n\t\tsidebarStyle: \"icon-hover\",\n\t\tsidebarBg: \"color_15\",\n\t\tsidebarPosition: \"fixed\",\n\t\theaderPosition: \"fixed\",\n\t\tcontainerLayout: \"wide\",\n\t\tprimary: \"color_15\",\n\t\tdirection: direction\n\t} */\n];\n\t","import React, { createContext, useEffect, useState } from \"react\";\nimport {dezThemeSet} from './ThemeDemo';\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\n\tconst [iconHover, setIconHover] = useState(false);\n\tconst [menuToggle, setMenuToggle] = useState(false);\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\n    const body = document.querySelector(\"body\");\n    const [windowWidth, setWindowWidth] = useState(0);\n    const [windowHeight, setWindowHeight] = useState(0);\n\n  // layout\n  const layoutOption = [\n    { value: \"vertical\", label: \"Vertical\" },\n    { value: \"horizontal\", label: \"Horizontal\" },\n  ];\n  const sideBarOption = [\n    { value: \"compact\", label: \"Compact\" },\n    { value: \"full\", label: \"Full\" },\n    { value: \"mini\", label: \"Mini\" },\n    { value: \"modern\", label: \"Modern\" },\n    { value: \"overlay\", label: \"Overlay\" },\n    { value: \"icon-hover\", label: \"Icon-hover\" },\n  ];\n  const backgroundOption = [\n    { value: \"light\", label: \"Light\" },\n    { value: \"dark\", label: \"Dark\" },\n  ];\n  const sidebarpositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const headerPositions = [\n    { value: \"fixed\", label: \"Fixed\" },\n    { value: \"static\", label: \"Static\" },\n  ];\n  const containerPosition = [\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\n    { value: \"boxed\", label: \"Boxed\" },\n    { value: \"wide\", label: \"Wide\" },\n  ];\n  const colors = [\n    \"color_1\",\n    \"color_2\",\n    \"color_3\",\n    \"color_4\",\n    \"color_5\",\n    \"color_6\",\n    \"color_7\",\n    \"color_8\",\n    \"color_9\",\n    \"color_10\",\n    \"color_11\",\n    \"color_12\",\n    \"color_13\",\n    \"color_14\",\n    \"color_15\",\n  ];\n  const directionPosition = [\n    { value: \"ltr\", label: \"LTR\" },\n    { value: \"rtl\", label: \"RTL\" },\n  ];\n  const fontFamily = [\n    { value: \"poppins\", label: \"Poppins\" },\n    { value: \"roboto\", label: \"Roboto\" },\n    { value: \"cairo\", label: \"Cairo\" },\n    { value: \"opensans\", label: \"Open Sans\" },\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\n  ];\n  const changePrimaryColor = (name) => {\n\tsetPrimaryColor(name);\n    body.setAttribute(\"data-primary\", name);\n  };\n  const changeNavigationHader = (name) => {\n    setNavigationHader(name);\n    body.setAttribute(\"data-nav-headerbg\", name);\n  };\n  const chnageHaderColor = (name) => {\n    setHaderColor(name);\n    body.setAttribute(\"data-headerbg\", name);\n  };\n  const chnageSidebarColor = (name) => {\n    setSidebarColor(name);\n    body.setAttribute(\"data-sibebarbg\", name);\n  };\n  const changeSideBarPostion = (name) => {\n    setSidebarposition(name);\n    body.setAttribute(\"data-sidebar-position\", name.value);\n  };\n  const changeDirectionLayout = (name) => {\n    setDirection(name);\n    body.setAttribute(\"direction\", name.value);\n    let html = document.querySelector(\"html\");\n    html.setAttribute(\"dir\", name.value);\n    html.className = name.value;\n  };\n  const changeSideBarLayout = (name) => {\n    if (name.value === \"horizontal\") {\n      if (sideBarStyle.value === \"overlay\") {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\n        body.setAttribute(\"data-sidebar-style\", \"full\");\n      } else {\n        setSidebarLayout(name);\n        body.setAttribute(\"data-layout\", name.value);\n      }\n    } else {\n      setSidebarLayout(name);\n      body.setAttribute(\"data-layout\", name.value);\n    }\n  };\n  const changeSideBarStyle = (name) => {\n    if (sidebarLayout.value === \"horizontal\") {\n      if (name.value === \"overlay\") {\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\n      } else {\n        setSideBarStyle(name);\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n        body.setAttribute(\"data-sidebar-style\", name.value);\n      }\n    } else {\n      setSideBarStyle(name);\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\n      body.setAttribute(\"data-sidebar-style\", name.value);\n    }\n  };\n\n  const changeHeaderPostion = (name) => {\n    setHeaderposition(name);\n    body.setAttribute(\"data-header-position\", name.value);\n  };\n\n  const openMenuToggle = () => {\n    sideBarStyle.value === \"overly\"\n      ? setMenuToggle(true)\n      : setMenuToggle(false);\n  };\n\n  const changeBackground = (name) => {\n    body.setAttribute(\"data-theme-version\", name.value);\n    setBackground(name);\n  };\n\n  const changeContainerPosition = (name) => {\n    setcontainerPosition_(name);\n    body.setAttribute(\"data-container\", name.value);\n    name.value === \"boxed\" &&\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\n  };\n  \n  const setDemoTheme = (theme,direction) => {\n\n\tvar setAttr = {};\t\n\t\n\t\n\tvar themeSettings = dezThemeSet[theme];\t\n\t\t\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\n \n\tsetAttr.value = themeSettings.version;\n\tchangeBackground(setAttr);\n\t\n\tsetAttr.value = themeSettings.layout;\n\tchangeSideBarLayout(setAttr);\n\t\n\t//setAttr.value = themeSettings.primary;\n\tchangePrimaryColor(themeSettings.primary);\n\t\n//setAttr.value = themeSettings.navheaderBg;\n\tchangeNavigationHader(themeSettings.navheaderBg);\n\t\n//setAttr.value = themeSettings.headerBg;\n\tchnageHaderColor(themeSettings.headerBg);\n\t\n\tsetAttr.value = themeSettings.sidebarStyle;\n\tchangeSideBarStyle(setAttr);\n\t\n\t//setAttr.value = themeSettings.sidebarBg;\n\tchnageSidebarColor(themeSettings.sidebarBg);\n\t\n\tsetAttr.value = themeSettings.sidebarPosition;\n\tchangeSideBarPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.headerPosition;\n\tchangeHeaderPostion(setAttr);\n\t\n\tsetAttr.value = themeSettings.containerLayout;\n\tchangeContainerPosition(setAttr);\n\t\n\t//setAttr.value = themeSettings.direction;\n\tsetAttr.value = direction;\n\tchangeDirectionLayout(setAttr); \n\t\n\t};\n\n  useEffect(() => {\n\tconst body = document.querySelector(\"body\");\n    body.setAttribute(\"data-typography\", \"poppins\");\n    body.setAttribute(\"data-theme-version\", \"light\");\n    body.setAttribute(\"data-layout\", \"vertical\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\n    body.setAttribute(\"data-headerbg\", \"color_1\");\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\n    body.setAttribute(\"data-primary\", \"color_1\");\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\n    body.setAttribute(\"data-header-position\", \"fixed\");\n    body.setAttribute(\"data-container\", \"wide\");\n    body.setAttribute(\"direction\", \"ltr\");\n\t\tlet resizeWindow = () => {\n\t\t\tsetWindowWidth(window.innerWidth);\n\t\t\tsetWindowHeight(window.innerHeight);\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\n\t\t\t: window.innerWidth <= 768\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\n\t\t};\n    resizeWindow();\n    window.addEventListener(\"resize\", resizeWindow);\n    return () => window.removeEventListener(\"resize\", resizeWindow);\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        body,\n        sideBarOption,\n        layoutOption,\n        backgroundOption,\n        sidebarposition,\n        headerPositions,\n        containerPosition,\n        directionPosition,\n        fontFamily,\n\t\tprimaryColor,\n        navigationHader,\n\t\twindowWidth,\n\t\twindowHeight,\n        changePrimaryColor,\n        changeNavigationHader,\n        changeSideBarStyle,\n        sideBarStyle,\n        changeSideBarPostion,\n        sidebarpositions,\n        changeHeaderPostion,\n        headerposition,\n        changeSideBarLayout,\n        sidebarLayout,\n        changeDirectionLayout,\n        changeContainerPosition,\n        direction,\n        colors,\n        haderColor,\n        chnageHaderColor,\n        chnageSidebarColor,\n        sidebarColor,\n        iconHover,\n        menuToggle,\n        openMenuToggle,\n        changeBackground,\n        background,\n        containerPosition_,\n\t\tsetDemoTheme,\n\t}}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\n\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \n\nReactDOM.render(\n\t<React.StrictMode>\n\n            <SimpleReactLightbox>\n                <BrowserRouter basename='/'>\n                    <ThemeContext>\n                        <App />\n                    </ThemeContext>  \n                </BrowserRouter>\n            </SimpleReactLightbox>\n\n\t</React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}