{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Consultation/Alert/Alert.jsx","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/apiCalls/eligibility.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","statusLabel","width","display","textAlign","Patients","classes","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","concat","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","className","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","Button","margin","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","Alert","_ref","show","body","footer","onClose","Modal","centered","Header","Title","Footer","onClick","_Fragment","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","showReminder","setShowReminder","getRelativeDate","useCallback","daysOffset","today","Date","relativeDate","setDate","getDate","toLocaleDateString","getReminderBody","sendCabLaAlert","parseInt","Reminder","toggleModal","prev","Accordion","AccordionSummary","md","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","calculate_age","moment","format","sexAtBirth","phoneNumber","address","Typography","activeContent","obj","newStatus","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","backdrop","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","card","flexDirection","form","submit","cardBottom","marginBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForSwitchOptions","setReasonForSwitchOptions","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","setLiverFunctionTestResult","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","reasonForSwitch","lftConducted","dateLiverFunctionTestResults","score","riskAssessment","setRiskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessmentPartner","setRiskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","setStiScreening","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","drugHistory","setDrugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","assessmentForPepIndication","setAssessmentForPepIndication","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","servicesReceivedByClient","setServicesReceivedByClient","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","assessmentForAcuteHivInfection","setAssessmentForAcuteHivInfection","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","assessmentForPrepEligibility","setAssessmentForPrepEligibility","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","getCounselingType","getReasonForDecline","getPopulationType","getPregnancyStatus","getVisitType","getPatientPrepEligibility","console","handleInputChangeRiskAssessment","riskCount","Object","values","filter","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","handleInputChangeDrugHistory","handleInputChangeAssessmentForPepIndication","handleInputChangeAssessmentForAcuteHivInfection","handleInputChangeAssessmentForPrepEligibility","handleInputChangeServicesReceivedByClient","log","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","prevValues","prevHistory","CardBody","FormGroup","onKeyDown","min","patientDetail","dateHivPositive","dateOfRegistration","max","Input","FormLabel","for","event","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","personResponseDto","sex","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","find","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_filterOutLastRegimen","_props$recentActiviti","_prepType$filter","_prepType$filter$filt","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","creatinineTestResult","setCreatinineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","prepRiskReductionPlan","setPrepRiskReductionPlan","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","prepNotedSideEffects","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepGiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","creatinine","urinalysisResult","creatinineResult","why","otherDrugs","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","creatinineTest","setCreatinineTest","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","testsOptions","fullPrepTypeList","setFullPrepTypeList","checkEligibleForCabLa","currentDate","regimenList","isEligibleForCABLA","reg","pTypes","getPrepEligibilityObj","PrepRegimen","getLatestFromEligibility","latestEligibility","sort","a","b","dateA","eligibilityVisitDateSync","setEligibilityVisitDateSync","durationInDays","duration","date1","date2","checkDateMismatch","eligibilityDate","handleInputChangeUrinalysisTest","handleInputChangeCreatinineTest","creatinineTestDate","handleInputChangeOtherTest","localId","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","urinalysisTestDate","_props$patientObj3","uuid","previousPrepStatus","activeTab","handleError","updatePreviousPrepStatusAndSubmit","personUuid","autoPopulate","visitTypeDurationMapping","updateTest","testType","setTestFunction","testData","_await$getPrepRiskRed","_await$getAdherenceLe","_getSyndromicStiScree","_getPrepStatus","_getHts","_await$getPrepSideEff","_getPatientDtoObj","_getWhyPoorFairAdhere","_getTestGroup","_getPrepUrinalysisRes","_getPrepOtherTests","_getHapetitisScreenin","_getSyphilisResult","_getPregnancyStatus","_getPrepEntryPoint","_getVisitType","_getFamilyPlanningMet","getAdherenceLevel","getPrepSideEffects","_response$data","_x$labTests","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","_response$data2","JSON","parse","stringify","getPatientVisit","_response$data3","_response$data4","_response$data5","_response$data5$","_response$data6","_response$data6$","setNotedSideEffects","PREP_VISIT_TYPE_DISCONTINUATION","PREP_VISIT_TYPE_INITIATION","PREP_VISIT_TYPE_METHOD_SWITCH","PREP_VISIT_TYPE_NO_PREP_PROVIDED","PREP_VISIT_TYPE_RESTART","PREP_VISIT_TYPE_SECOND_INITIATION","PREP_VISIT_TYPE_TRANSFER_IN","dateString","daysToAdd","isNaN","getTime","year","month","String","padStart","day","addDaysToDate","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","effect","plan","pType","codeSet","lastRegimenId","getOptions","_objValues$otherTests","otherTestName","eachTest","handleRemoveTest","test","TiTrash","component","AddIcon","handleCreateNewTest","comment","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setPrepRegimen","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setPregnant","setPrepEntryPoint","urinalysisTestResult","setUrinalysisTestResult","getPatientDTOObj","fetchPrepRegimen","fetchPrepEntryPoint","fetchPrepType","fetchLiverFunctionTestResult","fetchHistoryOfDrugToDrugInteraction","fetchPrepUrinalysisResult","getPatientCommencement","isBefore","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","reasonForDiscontinuationOptions","setReasonForDiscontinuationOptions","PREP_STATUS","PREP_STATUS_STOPPED_REASON","GetPatientDTOObj","CAUSE_DEATH","getReasonForDiscontinuationOptions","linkToArt","prevErrors","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","organisationUnitId","postalCode","assignerId","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.a22d321a.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzQzNjQzNjIyfQ.Yc8rnfUDEmereCkgEFS7CmuQiXANvpj-Oj4c_Ev3s5DRDkll1eUIYVDymzQpanAGz3Qe-ol2pahwwbqAtephqg'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { token as token, url as baseUrl } from './../../../api';\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport '@reach/menu-button/styles.css';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n// Create styles using makeStyles\r\nconst useStyles = makeStyles({\r\n  statusLabel: {\r\n    width: '150px', // Set a constant width for the Label component\r\n    display: 'inline-block', // Ensure the width is respected\r\n    textAlign: 'center', // Center the text within the label\r\n  },\r\n});\r\n\r\nconst Patients = props => {\r\n  const classes = useStyles(); // Use the styles\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          { title: 'Patient Name', field: 'name', hidden: showPPI },\r\n          {\r\n            title: 'Hospital Number',\r\n            field: 'hospital_number',\r\n            filtering: false,\r\n          },\r\n          { title: 'PrEP Code', field: 'clientCode', filtering: false },\r\n          { title: 'Sex', field: 'gender', filtering: false },\r\n          { title: 'Age', field: 'age', filtering: false },\r\n          {\r\n            title: 'PrEP Status',\r\n            field: 'status',\r\n            filtering: false,\r\n          },\r\n          { title: 'Actions', field: 'actions', filtering: false },\r\n        ]}\r\n        data={query =>\r\n          new Promise((resolve, reject) => {\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then(response => response)\r\n              .then(result => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.(row => ({\r\n                    name: row.firstName + ' ' + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : '',\r\n                    age: row.age,\r\n                    status: (\r\n                      <Label\r\n                        className={classes.statusLabel}\r\n                        color=\"blue\"\r\n                        size=\"mini\"\r\n                      >\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: '/patient-dashboard',\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: 'rgb(153, 46, 98)',\r\n                              height: '30px',\r\n                              width: '215px',\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{\r\n                                backgroundColor: 'rgb(153, 46, 98)',\r\n                                margin: 'auto',\r\n                              }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: '12px',\r\n                                  color: '#fff',\r\n                                  fontWeight: 'bolder',\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              });\r\n          })\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n          },\r\n          searchFieldStyle: {\r\n            width: '200%',\r\n            margingLeft: '250px',\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: 'left',\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: '#014d88', fontWeight: 'bold' }}>\r\n                    {' '}\r\n                    SHOW PII{' '}\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Card, Tab, Tabs } from 'react-bootstrap';\r\nimport PatientList from './Patient/PatientList';\r\n\r\nconst divStyle = {\r\n  borderRadius: '2px',\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ marginTop: '3em' }} className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PrEP</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={k => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { CardContent, Card, CardHeader, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { CardFooter } from 'reactstrap';\r\n\r\nexport const Alert = ({ show, title, body, footer, onClose }) => {\r\n  if (!show) return <></>;\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      className=\"fade text-grey\"\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title\r\n          className=\"text-info\"\r\n          id=\"contained-modal-title-vcenter\"\r\n          style={{}}\r\n        >\r\n          <h2>\r\n            {' '}\r\n            <span> Reminder: </span> <br />{' '}\r\n            <span style={{ fontSize: '.7em' }}>{title}</span>\r\n          </h2>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{body}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          onClick={onClose}\r\n          style={{\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n            margin: 'auto .2em',\r\n          }}\r\n          size=\"small\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nimport { Alert as Reminder } from '../Consultation/Alert/Alert';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject);\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now + ' year(s)';\r\n  };\r\n  const getHospitalNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(\r\n      obj => obj.type === 'HospitalNumber'\r\n    );\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(\r\n      obj => obj?.type === 'phone'\r\n    );\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = identifier => {\r\n    console.log('identifier: ', identifier);\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress =\r\n      Array.isArray(address?.line) && address?.line[0] != null\r\n        ? address?.line[0]\r\n        : '';\r\n    const landMark =\r\n      address && address?.city && address?.city !== null ? address?.city : '';\r\n    return address ? houseAddress + ' ' + landMark : '';\r\n  };\r\n  const [showReminder, setShowReminder] = useState(true);\r\n  const toggleModal = () => setShowReminder(prev => !prev);\r\n  const getRelativeDate = useCallback(daysOffset => {\r\n    const today = new Date();\r\n    const relativeDate = new Date(today);\r\n    relativeDate.setDate(today.getDate() + daysOffset);\r\n    return relativeDate.toLocaleDateString();\r\n  }, []);\r\n\r\n  const getReminderBody = useCallback(sendCabLaAlert => {\r\n    const reminderMessages = {\r\n      1: `Kindly be reminded that your CabLA appointment is tomorrow (${getRelativeDate(\r\n        1\r\n      )}). Ensure to avail yourself as early as possible.`,\r\n      2: `You have missed your CabLA appointment which was suppose to be yesterday (${getRelativeDate(\r\n        -1\r\n      )}). Please contact us to reschedule.`,\r\n    };\r\n\r\n    return reminderMessages[sendCabLaAlert] || '';\r\n  }, []);\r\n\r\n  useEffect(() => setShowReminder(parseInt(patientObj?.sendCabLaAlert)), []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Reminder\r\n        show={showReminder}\r\n        title=\"CabLA followup Visit\"\r\n        body={getReminderBody(parseInt(patientObj?.sendCabLaAlert))}\r\n        onClose={toggleModal}\r\n      />\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {patientObj?.firstName + ' ' + patientObj?.surname}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculate_age(\r\n                            moment(patientObj?.dateOfBirth).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth || patientObj?.gender}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input } from 'reactstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  FormLabel,\r\n  makeStyles,\r\n  Button as MatButton,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Message, Dropdown } from 'semantic-ui-react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {\r\n  savePrepEligibility,\r\n  getCounselingType,\r\n  getPatientPrepEligibility,\r\n  getVisitType,\r\n  getRecentActivities,\r\n  getPregnancyStatus,\r\n  getReasonForDecline,\r\n  getLiverFunctionTestResult,\r\n} from '../../../apiCalls/eligibility';\r\n\r\nimport '../../index.css';\r\nimport { getPopulationType } from '../../../apiCalls/eligibility';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult?.map(value => ({\r\n    value: value?.code,\r\n    label: value?.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options || []}\r\n      selected={selectedValues || []}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '',\r\n    lastTest: '',\r\n  });\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCounselingType((await getCounselingType()).data);\r\n    setReasonForDecline((await getReasonForDecline()).data);\r\n    setPopulationType((await getPopulationType()).data);\r\n    setPregnancyStatus((await getPregnancyStatus()).data);\r\n    setVisitType((await getVisitType()).data);\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const getPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const {\r\n          personalHivRiskAssessment,\r\n          sexPartnerRisk,\r\n          stiScreening,\r\n          drugUseHistory,\r\n          assessmentForPepIndication,\r\n          assessmentForAcuteHivInfection,\r\n          servicesReceivedByClient,\r\n          assessmentForPrepEligibility,\r\n        } = response.data;\r\n        setObjValues(response.data);\r\n        setRiskAssessment(personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(sexPartnerRisk);\r\n        setStiScreening(stiScreening);\r\n        setDrugHistory(drugUseHistory);\r\n        setAssessmentForPepIndication(assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(assessmentForAcuteHivInfection);\r\n        setServicesReceivedByClient(servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(assessmentForPrepEligibility);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patient eligibility data:', error);\r\n      });\r\n  };\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeRiskAssessment = e => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.visitDate = objValues.visitDate ? '' : '⚠ This field is required.';\r\n    temp.lftConducted = objValues.lftConducted\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? '⚠ LFT is required'\r\n        : '';\r\n    temp.dateLiverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      !objValues.dateLiverFunctionTestResults\r\n        ? '⚠ This field is required.'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : '⚠ This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : '⚠ This field is required.';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  useEffect(() => console.log('temp: ', temp));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep eligilibility saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep eligilibility saved successfull! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ⚠', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n    getReasonForSwitch();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (objValues.lftConducted === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n    }\r\n  }, [objValues.lftConducted]);\r\n  useEffect(() => {\r\n    if (drugHistory.hivTestedBefore === 'false') {\r\n      setDrugHistory(prevHistory => ({\r\n        ...prevHistory,\r\n        lastTest: '',\r\n      }));\r\n    }\r\n  }, [drugHistory.hivTestedBefore]);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h1 style={{ fontSize: '1.1rem' }}>\r\n            PrEP Eligibility Screening Form\r\n          </h1>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>Reason for switch</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option value={value.code}> {value.display} </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import axios from 'axios';\r\nimport { token, url as baseUrl } from '../api';\r\n\r\nexport const getPatientPrepEligibility = async id => {\r\n  return await axios.get(`${baseUrl}prep/eligibility/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getCounselingType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getVisitType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getReasonForDecline = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPopulationType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getPregnancyStatus = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getRecentActivities = async personId => {\r\n  return await axios.get(\r\n    `${baseUrl}prep/activities/patients/${personId}?full=true`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiverFunctionTestResult = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const savePrepEligibility = async (id, objValues, actionType) => {\r\n  const url =\r\n    actionType === 'update'\r\n      ? `${baseUrl}prep-eligibility/${id}`\r\n      : `${baseUrl}prep/eligibility`;\r\n  const method = actionType === 'update' ? 'put' : 'post';\r\n  return await axios[method](url, objValues, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label } from 'semantic-ui-react';\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { makeStyles, Button as MatButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\nexport const CleanupWrapper = ({ isVisible, cleanup, children }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isVisible) {\r\n        cleanup();\r\n      }\r\n    };\r\n  }, [isVisible, cleanup]);\r\n  return isVisible ? children : null;\r\n};\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [creatinineTestResult, setCreatinineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    prepNotedSideEffects: [],\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepGiven: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    creatinine: {},\r\n    urinalysisResult: '',\r\n    creatinineResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [creatinineTest, setCreatinineTest] = useState({\r\n    creatinineTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let temp = { ...errors };\r\n  let testsOptions = [];\r\n\r\n  const getPregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFullPrepTypeList(response.data);\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getTestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response?.data?.map(x => {\r\n          x?.labTests?.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const [fullPrepTypeList, setFullPrepTypeList] = useState([]);\r\n  const checkEligibleForCabLa = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          let isEligibleForCABLA = response?.data;\r\n          let reg = regimenList?.filter(\r\n            each => each.code !== 'CAB-LA(600mg/3mL)'\r\n          );\r\n          let pTypes = [...prepType]?.filter(\r\n            each => each.code !== 'PREP_TYPE_INJECTIBLES'\r\n          );\r\n          if (\r\n            isEligibleForCABLA ||\r\n            objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' ||\r\n            ['update'].includes(props.activeContent.actionType)\r\n          ) {\r\n            setPrepType(fullPrepTypeList);\r\n            setprepRegimen(regimenList);\r\n          } else {\r\n            setPrepType(pTypes);\r\n            setprepRegimen(reg);\r\n          }\r\n          return response?.data;\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHivResult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            '⚠ No HTS record found. Atleast, 1 test result is required to proceed'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('👍 HTS record found. You may proceed ✔');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPatientDtoObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        checkEligibleForCabLa(currentDate, response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepRiskReductionPlan = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepSideEffects = async () => {\r\n    return await axios.get(\r\n      `${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n  };\r\n\r\n  const getHts = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  function sortByVisitDateDescending(data) {\r\n    return data.sort((a, b) => {\r\n      const dateA = new Date(a.visitDate);\r\n      const dateB = new Date(b.visitDate);\r\n      return dateB - dateA;\r\n    });\r\n  }\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = sortByVisitDateDescending(response?.data)[0];\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPopulationType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getVisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getWhyPoorFairAdherence = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyndromicStiScreening = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getCreatinineTestResultOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CREATININE_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCreatinineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepOtherTests = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyphilisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHapetitisScreeningResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getFamilyPlanningMethod = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  async function getAdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const [eligibilityVisitDateSync, setEligibilityVisitDateSync] =\r\n    useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      setEligibilityVisitDateSync(\r\n        areDatesInSync(e.target.value, latestFromEligibility?.visitDate)\r\n      );\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      checkDateMismatch(e.target.value, latestFromEligibility?.visitDate);\r\n    } else if (e.target.name === 'otherPrepGiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const checkDateMismatch = (visitDate, eligibilityDate) => {\r\n    if (visitDate !== eligibilityDate) {\r\n      toast.error(\r\n        '⚠ Please enter a date that matches the latest eligibility date!'\r\n      );\r\n    } else {\r\n      toast.success(\r\n        'The visit date matches the latest eligibility date. Great job! 👍'\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!eligibilityVisitDateSync) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: '',\r\n        visitType: '',\r\n        pregnant: '',\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n      setSelectedPopulationType('');\r\n    }\r\n  }, [eligibilityVisitDateSync]);\r\n\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCreatinineTest = e => {\r\n    setErrors({\r\n      ...errors,\r\n      creatinineResult: '',\r\n      creatinineTestDate: '',\r\n    });\r\n    setCreatinineTest({ ...creatinineTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n    temp[index][e.target.name] = e.target.value;\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev?.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (urinalysisTest?.urinalysisTest === 'Yes') {\r\n      setUrinalysisTest({ urinalysisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setUrinalysisTest({ ...urinalysisTest, urinalysisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxCreatinineTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (creatinineTest?.creatinineTest === 'Yes') {\r\n      setCreatinineTest({ creatinineTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setCreatinineTest({ ...creatinineTest, creatinineTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (syphilisTest?.syphilisTest === 'Yes') {\r\n      setSyphilisTest({\r\n        syphilisTest: 'No',\r\n        testDate: '',\r\n        result: '',\r\n        others: '',\r\n      });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, syphilisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (hepatitisTest?.hepatitisTest === 'Yes') {\r\n      setHepatitisTest({ hepatitisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setHepatitisTest({ ...hepatitisTest, hepatitisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (otherTest.length > 0) {\r\n      setOtherTest([]);\r\n    } else {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const otherTestInputRef = useRef();\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        '⚠ Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        '⚠ Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = '⚠ Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        '⚠ Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        '⚠ Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      prepNotedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      creatinine: {},\r\n      creatinineResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setCreatinineTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue\r\n      ? ''\r\n      : '⚠ Atleast, 1 HIV test result is required';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.prepType = objValues.prepType ? '' : '⚠ This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : '⚠ This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    temp.height = objValues.height ? '' : '⚠ This field is required';\r\n    if (objValues.prepType === 'PREP_TYPE_INJECTIBLES') {\r\n      temp.otherPrepGiven = objValues.otherPrepGiven\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    }\r\n    temp.weight = objValues.weight ? '' : '⚠ This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : '⚠ This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.visitType = objValues.visitType ? '' : '⚠ This field is required';\r\n\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    if (\r\n      urinalysisTest?.urinalysisTest === 'Yes' &&\r\n      urinalysisTest?.testDate === ''\r\n    ) {\r\n      temp.urinalysisTestDate = '⚠ This field is required';\r\n    } else {\r\n      temp.urinalysisTestDate = '';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updatePreviousPrepStatusAndSubmit(\r\n      props.patientObj?.personUuid,\r\n      props.patientObj?.prepStatus\r\n    );\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCabLa(objValues.encounterDate, response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function areDatesSame(date1, date2) {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet?.filter(regimen => regimen.id !== lastRegimenId);\r\n\r\n  const prepRegimenUpdateView = () =>\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  const getLiverFunctionTestResult = () =>\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility !== null) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === latestFromEligibility?.populationType\r\n      );\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: latestFromEligibility?.populationType || '',\r\n        visitType: latestFromEligibility?.visitType || '',\r\n        monthsOfRefill:\r\n          visitTypeDurationMapping[`${latestFromEligibility?.visitType}`] || '',\r\n        reasonForSwitch: latestFromEligibility?.reasonForSwitch || '',\r\n        pregnant: latestFromEligibility?.pregnancyStatus || '',\r\n      }));\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync, populationType]);\r\n\r\n  useEffect(() => {\r\n    const updateTest = (testType, setTestFunction) => {\r\n      const testData = objValues[testType];\r\n      if (\r\n        testData?.testDate &&\r\n        testData?.result &&\r\n        testData?.[`${testType}Test`]\r\n      ) {\r\n        setTestFunction({\r\n          ...testData,\r\n          testDate: testData.testDate,\r\n          result: testData.result,\r\n          [`${testType}Test`]: testData[`${testType}Test`],\r\n        });\r\n      }\r\n    };\r\n\r\n    updateTest('urinalysis', setUrinalysisTest);\r\n    updateTest('creatinine', setCreatinineTest);\r\n    updateTest('syphilis', setSyphilisTest);\r\n    updateTest('hepatitis', setHepatitisTest);\r\n  }, [objValues]);\r\n\r\n  useEffect(async () => {\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPrepEligibilityObj(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(async () => {\r\n    setPrepRiskReductionPlan((await getPrepRiskReductionPlan())?.data);\r\n    setAdherenceLevel((await getAdherenceLevel())?.data);\r\n    setPrepRiskReductionPlan(getSyndromicStiScreening()?.data);\r\n    setPrepStatus(getPrepStatus()?.data);\r\n    setHtsResult(getHts()?.data);\r\n    setPrepSideEffect((await getPrepSideEffects())?.data);\r\n    setPatientDto(getPatientDtoObj()?.data);\r\n    setWhyAdherenceLevelPoor(getWhyPoorFairAdherence()?.data);\r\n    getPrepEligibilityObj();\r\n    setLabTestOptions(getTestGroup()?.data);\r\n    setUrineTestResult(getPrepUrinalysisResult()?.data);\r\n    setOtherTestResult(getPrepOtherTests()?.data);\r\n    setHepaTestResult(getHapetitisScreeningResult()?.data);\r\n    setSyphilisTest(getSyphilisResult()?.data);\r\n    setpregnant(getPregnancyStatus()?.data);\r\n    setPrepEntryPoints(getPrepEntryPoint()?.data);\r\n    getPrepType();\r\n    setPopulationType(getPopulationType().data);\r\n    setVisitType(getVisitType()?.data);\r\n    setFamilyPlanningMethod(getFamilyPlanningMethod()?.data);\r\n    getPatientVisit(props.activeContent.id);\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHivResult();\r\n    getReasonForSwitch();\r\n    getCreatinineTestResultOptions();\r\n    getLiverFunctionTestResult();\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults,\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync]);\r\n\r\n  function areDatesInSync(date1, date2) {\r\n    return date1 === date2;\r\n  }\r\n  const getOptions = () => {\r\n    switch (objValues.otherPrepType) {\r\n      case 'PREP_TYPE_ORAL':\r\n        return <option value=\"1\">TDF(300mg)+3TC(300mg)</option>;\r\n      case 'PREP_TYPE_INJECTIBLES':\r\n        return <option value=\"2\">IM CAB-LA(600mg/3mL)</option>;\r\n      case 'PREP_TYPE_ED_PREP':\r\n        return (\r\n          <>\r\n            <option value=\"2\">IM CAB-LA(600mg/3mL)</option>\r\n            <option value=\"1\">TDF(300mg)+3TC(300mg)</option>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const [notedSideEffects, setNotedSideEffects] = useState([]);\r\n  const handleNotedSideEffectsChange = selected => {\r\n    setNotedSideEffects(selected);\r\n    setObjValues({ ...objValues, notedSideEffects: selected });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (objValues.otherPrepGiven === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    }\r\n  }, [objValues.otherPrepGiven]);\r\n\r\n  const visitTypeDurationMapping = {\r\n    PREP_VISIT_TYPE_DISCONTINUATION: null,\r\n    'PREP_VISIT_TYPE_DISCONTINUATION_FOLLOW-UP': null,\r\n    PREP_VISIT_TYPE_INITIATION: 30,\r\n    PREP_VISIT_TYPE_METHOD_SWITCH: null,\r\n    PREP_VISIT_TYPE_NO_PREP_PROVIDED: null,\r\n    'PREP_VISIT_TYPE_REFILL_RE-INJECTION': 60,\r\n    PREP_VISIT_TYPE_RESTART: 30,\r\n    PREP_VISIT_TYPE_SECOND_INITIATION: 60,\r\n    PREP_VISIT_TYPE_TRANSFER_IN: null,\r\n  };\r\n  function addDaysToDate(dateString, daysToAdd) {\r\n    const date = new Date(dateString);\r\n    if (\r\n      isNaN(date.getTime()) ||\r\n      typeof daysToAdd !== 'number' ||\r\n      isNaN(daysToAdd)\r\n    ) {\r\n      return '';\r\n    }\r\n    date.setDate(date.getDate() + daysToAdd);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let nextAppointment = addDaysToDate(\r\n      objValues.encounterDate,\r\n      objValues.monthsOfRefill\r\n    );\r\n    setObjValues(prev => ({ ...prev, nextAppointment }));\r\n  }, [objValues.encounterDate, objValues.monthsOfRefill]);\r\n\r\n  async function updatePreviousPrepStatusAndSubmit(personUuid, previousStatus) {\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.duration = objValues.monthsOfRefill;\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.creatinine = creatinineTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      objValues.prepNotedSideEffects = notedSideEffects;\r\n      objValues.notedSideEffects = '';\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        try {\r\n          const updateResponse = await axios.put(\r\n            `${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          toast.success('Clinic visit updated successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      } else {\r\n        try {\r\n          const postResponse = await axios.post(\r\n            `${baseUrl}prep/clinic-visit`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          emptyObjValues();\r\n          toast.success('Clinic Visit saved successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  function handleError(error) {\r\n    setSaving(false);\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again';\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    } else {\r\n      toast.error('Something went wrong ❌ please try again...', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.root} container-fluid`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"p-2\">Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant?.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={true}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects</FormLabelName>\r\n                  <DualListBox\r\n                    options={prepSideEffect?.map(effect => ({\r\n                      value: effect.code,\r\n                      label: effect.display,\r\n                    }))}\r\n                    selected={notedSideEffects}\r\n                    onChange={handleNotedSideEffectsChange}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.notedSideEffects !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.notedSideEffects}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti?.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan?.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Level of Adherence</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        )?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (days)`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepGiven\"\r\n                          id=\"otherPrepGiven\"\r\n                          value={objValues.otherPrepGiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepGiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepGiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepGiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_ED_PREP'\r\n                              )\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== objValues.prepType\r\n                              )\r\n                              ?.map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {getOptions()}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"creatinineTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxCreatinineTest}\r\n                    checked={creatinineTest.creatinineTest === 'Yes'}\r\n                  />{' '}\r\n                  Creatinine Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {creatinineTest.creatinineTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={creatinineTest.testDate}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.creatinineTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        placeholder=\"Enter test result...\"\r\n                        value={creatinineTest.result}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                      {errors.creatinineResult !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineResult}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={urinalysisTest?.urinalysisTest === 'Yes'}\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest?.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.urinalysisTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.urinalysisTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest?.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={hepatitisTest.hepatitisTest === 'Yes'}\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest?.syphilisTest === 'Yes'}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest?.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest?.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest?.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest?.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />{' '}\r\n                  Other Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherTest.length > 0 &&\r\n                otherTest?.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div className=\"p-2\">\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving || disabledField}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE</h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>\r\n                  Next Appointment Date <span style={{ color: 'red' }}> *</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature </FormLabelName>\r\n\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}></h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\" mb-3 col-md-8\">\r\n                <FormLabelName>Comment</FormLabelName>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  placeholder=\"Enter comment...\"\r\n                  value={objValues.comment}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                    height: '10em',\r\n                  }}\r\n                />\r\n                {errors.comment !== '' ? (\r\n                  <span className={classes.error}>{errors.comment}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [prepRegimen, setPrepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setPregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoint] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    pregnancyStatus();\r\n    getPatientDTOObj();\r\n    fetchPrepRegimen();\r\n    fetchPrepEntryPoint();\r\n    fetchPrepType();\r\n    fetchLiverFunctionTestResult();\r\n    fetchHistoryOfDrugToDrugInteraction();\r\n    fetchPrepUrinalysisResult();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientCommencement(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, []);\r\n\r\n  const fetchPrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const fetchPrepType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchHistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientCommencement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const pregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      fetchPrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setPrepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardBody>\r\n        <form>\r\n          <div className=\"row\">\r\n            <h2>PrEP Commencement</h2>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"uniqueId\">\r\n                  Date of Initial Adherence Counseling{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateInitialAdherenceCounseling\"\r\n                  id=\"dateInitialAdherenceCounseling\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateInitialAdherenceCounseling}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.dateInitialAdherenceCounseling && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateInitialAdherenceCounseling}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date PrEP started <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"datePrepStart\"\r\n                  id=\"datePrepStart\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.datePrepStart}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.datePrepStart && (\r\n                  <span className={classes.error}>{errors.datePrepStart}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Body Weight <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    id=\"weight\"\r\n                    onChange={handleInputChange}\r\n                    min=\"3\"\r\n                    max=\"150\"\r\n                    value={objValues.weight}\r\n                    onKeyUp={handleInputValueCheckBodyWeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    kg\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.bodyWeight && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.bodyWeight}\r\n                  </span>\r\n                )}\r\n                {errors.weight && (\r\n                  <span className={classes.error}>{errors.weight}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Height <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopLeftRadius: '0.25rem',\r\n                      borderBottomLeftRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    cm\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.height}\r\n                    min=\"48.26\"\r\n                    max=\"216.408\"\r\n                    disabled={disabledField}\r\n                    onKeyUp={handleInputValueCheckHeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                    }}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#992E62',\r\n                      color: '#fff',\r\n                      border: '1px solid #992E62',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    {objValues.height\r\n                      ? (objValues.height / 100).toFixed(2) + 'm'\r\n                      : 'm'}\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.height && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.height}\r\n                  </span>\r\n                )}\r\n                {errors.height && (\r\n                  <span className={classes.error}>{errors.height}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n              {objValues.weight && objValues.height && (\r\n                <FormGroup>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    >\r\n                      BMI:{' '}\r\n                      {(\r\n                        objValues.weight /\r\n                        (objValues.height / 100) ** 2\r\n                      ).toFixed(2)}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n            {props.patientObj.gender.toLowerCase() === 'female' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Pregnancy Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"pregnant\"\r\n                    id=\"pregnant\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.pregnant}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {pregnant.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Breast Feeding</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"breastFeeding\"\r\n                    id=\"breastFeeding\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.breastFeeding}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of drug Allergies</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"drugAllergies\"\r\n                  id=\"drugAllergies\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.drugAllergies}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Urinalysis Result</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"urinalysisResult\"\r\n                  id=\"urinalysisResult\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.urinalysisResult}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {urinalysisTestResult.map(value => (\r\n                    <option key={value.id} value={value.display}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of PrEP drug interactions</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"select\"\r\n                  name=\"historyOfDrugToDrugInteraction\"\r\n                  id=\"historyOfDrugToDrugInteraction\"\r\n                  value={objValues.historyOfDrugToDrugInteraction}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {historyOfDrugToDrugInteraction.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.historyOfDrugToDrugInteraction && (\r\n                  <span className={classes.error}>\r\n                    {errors.historyOfDrugToDrugInteraction}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Liver Function Tests Result </Label>\r\n                <LiverFunctionTest\r\n                  objValues={objValues}\r\n                  handleInputChange={handleLftInputChange}\r\n                  liverFunctionTestResult={liverFunctionTestResult}\r\n                  disabledField={disabledField}\r\n                  isAutoPop={true}\r\n                />\r\n                {errors.liverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.liverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n                <Label>Date of Liver Function Tests Result </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateLiverFunctionTestResults\"\r\n                  id=\"dateLiverFunctionTestResults\"\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateLiverFunctionTestResults}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled\r\n                />\r\n                {errors.dateLiverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateLiverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Referred <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"referred\"\r\n                  id=\"referred\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.referred}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n                {errors.referred && (\r\n                  <span className={classes.error}>{errors.referred}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {objValues.referred === 'true' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date referred</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datereferred\"\r\n                    id=\"datereferred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.datereferred}\r\n                    min={patientDto?.dateEnrolled || ''}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datereferred && (\r\n                    <span className={classes.error}>{errors.datereferred}</span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName for=\"prepType\">\r\n                  Prep Type At Start <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepType\"\r\n                  id=\"prepType\"\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  onChange={handlePrepTypeChange}\r\n                  value={objValues.prepType}\r\n                >\r\n                  <option value=\"\">Select Prep Type</option>\r\n                  {prepType.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepType && (\r\n                  <span className={classes.error}>{errors.prepType}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  PrEP Regimen <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {prepRegimen.map(value => (\r\n                    <option key={value.id} value={value.id}>\r\n                      {value.regimen}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.regimenId && (\r\n                  <span className={classes.error}>{errors.regimenId}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName>\r\n                  Prep Distribution Setting{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepDistributionSetting\"\r\n                  id=\"prepDistributionSetting\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.prepDistributionSetting}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {prepEntryPoint.map(value => (\r\n                    <option key={value.code} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepDistributionSetting && (\r\n                  <span className={classes.error}>\r\n                    {errors.prepDistributionSetting}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Duration of Refill (Day[s])</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"monthsOfRefill\"\r\n                  id=\"monthsOfRefill\"\r\n                  value={objValues.monthsOfRefill}\r\n                  min={0}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          {saving && <Spinner />}\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{ backgroundColor: '#014d88' }}\r\n            onClick={handleSubmit}\r\n            disabled={saving}\r\n          >\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              {saving\r\n                ? 'Saving...'\r\n                : props.activeContent?.actionType\r\n                ? 'Update'\r\n                : 'Save'}\r\n            </span>\r\n          </MatButton>\r\n        </form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [reasonForDiscontinuationOptions, setReasonForDiscontinuationOptions] =\r\n    useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    getReasonForDiscontinuationOptions();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getReasonForDiscontinuationOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_FOR_DISCONTINUATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDiscontinuationOptions(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'interruptionType') {\r\n      switch (e.target.value) {\r\n        case 'PREP_STATUS_STOPPED':\r\n          setObjValues({\r\n            ...objValues,\r\n            reasonStopped: '',\r\n            reasonStoppedOthers: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_DEAD':\r\n          setObjValues({\r\n            ...objValues,\r\n            causeOfDeath: '',\r\n            sourceOfDeathInfo: '',\r\n            dateClientDied: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_RESTART':\r\n          setObjValues({ ...objValues, dateRestartPlacedBackMedication: '' });\r\n          break;\r\n        case 'PREP_STATUS_TRANSFER_OUT':\r\n          setObjValues({\r\n            ...objValues,\r\n            dateClientReferredOut: '',\r\n            facilityReferredTo: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_SEROCONVERTED':\r\n          setObjValues({ ...objValues, linkToArt: '', dateSeroconverted: '' });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    // if (\r\n    //   containsDiscontinued(objValues.interruptionType) &&\r\n    //   !objValues.reasonForPrepDiscontinuation\r\n    // ) {\r\n    //   temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    // }\r\n    if (\r\n      (objValues.interruptionType === 'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n        objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n        objValues.interruptionType === 'PREP_STATUS_LOSS_TO_FOLLOW_UP') &&\r\n      !objValues.interruptionDate\r\n    ) {\r\n      temp.interruptionDate = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' &&\r\n      !objValues.dateClientReferredOut\r\n    ) {\r\n      temp.dateClientReferredOut = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_DEAD' &&\r\n      !objValues.dateClientDied\r\n    ) {\r\n      temp.dateClientDied = 'This field is required';\r\n    }\r\n    if (!objValues.interruptionType) {\r\n      temp.interruptionType = 'This field is required';\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    }\r\n    if (validate()) {\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = error => {\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again...';\r\n      toast.error(errorMessage);\r\n    } else {\r\n      toast.error('❌ Something went wrong. Please try again...');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReasonForDiscontinuationOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!['view', 'update'].includes(props.activeContent.actionType)) {\r\n        setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          dateInterruption: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          causeOfDeath: '',\r\n          dateClientDied: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          interruptionDate: '',\r\n          sourceOfDeathInfo: '',\r\n          dateSeroconverted: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n\r\n        setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          interruptionDate: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          dateClientDied: '',\r\n          causeOfDeath: '',\r\n          sourceOfDeathInfo: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          dateSeroconverted: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n      }\r\n    };\r\n  }, [objValues.interruptionType]);\r\n\r\n  useEffect(() => {\r\n    GetPatientInterruption(props.activeContent.id);\r\n  }, [props.activeContent.id]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    {/* <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option> */}\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_CABLA' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                          disabled={disabledField}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientReferredOut ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of Client's Death </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientDied || objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateSeroconverted ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          disabled={disabledField}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {/* {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      placeholder=\"Enter reason for PrEP discontinuation...\"\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : null} */}\r\n            </div>\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent.actionType !== 'view' && (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                  onClick={props.toggle}\r\n                  style={{ backgroundColor: '#992E62' }}\r\n                >\r\n                  <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                    {' '}\r\n                    Cancel{' '}\r\n                  </span>\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [transferIn, setTransferIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record saved successfully! ✔');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong ❌');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required⚠';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required⚠';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required⚠';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required⚠';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required❌', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n        //patientObj=response.data\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n          {/* start of patient card detail */}\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          {/* End of patient card detail */}\r\n          {/* This is the submenu components */}\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n          {/* This is the submenu routes */}\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormGroup, Label, Spinner, Input, Form } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport * as moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { useForm } from 'react-hook-form';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getValue } from '@syncfusion/ej2-base';\r\nimport './patient.css';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst UserRegistration = props => {\r\n  console.log(props);\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: '',\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: '',\r\n    genderId: '',\r\n    identifier: '',\r\n    otherName: '',\r\n    maritalStatusId: '',\r\n    educationId: '',\r\n    employmentStatusId: '',\r\n    dateOfRegistration: '',\r\n    isDateOfBirthEstimated: null,\r\n    age: '',\r\n    phoneNumber: '',\r\n    altPhonenumber: '',\r\n    dob: '',\r\n    countryId: '',\r\n    stateId: '',\r\n    district: '',\r\n    landmark: '',\r\n    sexId: '',\r\n    ninNumber: '',\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: '',\r\n    phone: '',\r\n    firstName: '',\r\n    email: '',\r\n    relationshipId: '',\r\n    lastName: '',\r\n    middleName: '',\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace('T', ' ')\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: '',\r\n    hivEnrollment: '',\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrerId: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n    householdNumber: '',\r\n    referredToOVCPartner: '',\r\n    dateReferredToOVCPartner: '',\r\n    referredFromOVCPartner: '',\r\n    dateReferredFromOVCPartner: '',\r\n    careEntryPointOther: '',\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState('false');\r\n\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts = patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(contacts.contact);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map(x => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: '',\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        obj => obj.type == 'HospitalNumber'\r\n      );\r\n      const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n      const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n      const altphone = contactPoint.contactPoint.find(\r\n        obj => obj.type == 'altphone'\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber = hospitalNumber ? hospitalNumber.value : '';\r\n      basicInfo.maritalStatusId = patientObj.maritalStatus.id;\r\n      basicInfo.employmentStatusId = patientObj.employmentStatus.id;\r\n      basicInfo.genderId = patientObj.gender ? patientObj.gender.id : null;\r\n      basicInfo.sexId = patientObj.sex;\r\n      basicInfo.educationId = patientObj.education.id;\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : '';\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : '';\r\n      basicInfo.email = email && email.value ? email.value : '';\r\n      basicInfo.address = country && country.city ? country.city : '';\r\n      basicInfo.landmark = country.line[0];\r\n      basicInfo.countryId = country.countryId;\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country.stateId);\r\n      basicInfo.stateId = country.stateId;\r\n      basicInfo.district = country.district;\r\n      setObjValues(patientObj.enrollment);\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format('DD-MM-YYYY')\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === 'Female' ? true : false);\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert('Date of registration can not be earlier than date of birth');\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async parentId => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now;\r\n  };\r\n  //Get States from selected country\r\n  const getStates = e => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setStates(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //fetch province\r\n  const getProvinces = e => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = e => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: '' });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = e => {\r\n    if (e.target.value == 'Actual') {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == 'Estimated') {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = e => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, 'years');\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format('YYYY-MM-DD');\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = e => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === 'sexId' && e.target.value === 'Female') {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === 'firstName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'lastName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'middleName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'hospitalNumber' && e.target.value !== '') {\r\n      async function getCharacters() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'text/plain',\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          setHospitalNumStatus(false);\r\n          setHospitalNumStatus2(true);\r\n        }\r\n      }\r\n      getCharacters();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: '/' });\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? '' : 'First Name is required';\r\n    temp.lastName = relatives.lastName ? '' : 'Last Name  is required.';\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? ''\r\n      : 'Relationship Type is required.';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = e => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = index => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = relationshipId => {\r\n    const relationship = relationshipOptions.find(\r\n      obj => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : '';\r\n  };\r\n  const handleInputChangeRelatives = e => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? '' : 'First Name is required';\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? ''\r\n      : 'Hospital Number  is required.';\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? '' : 'Last Name  is required.';\r\n    temp.sexId = basicInfo.sexId ? '' : 'Sex is required.';\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.educationId = basicInfo.educationId ? '' : 'Education is required.';\r\n    temp.address = basicInfo.address ? '' : 'Address is required.';\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? ''\r\n      : 'Phone Number  is required.';\r\n    temp.countryId = basicInfo.countryId ? '' : 'Country is required.';\r\n    temp.stateId = basicInfo.stateId ? '' : 'State is required.';\r\n    temp.district = basicInfo.district ? '' : 'Province/LGA is required.';\r\n    //HIV FORM VALIDATION\r\n    temp.targetGroupId = objValues.targetGroupId\r\n      ? ''\r\n      : 'Target group is required.';\r\n    temp.dateConfirmedHiv = objValues.dateConfirmedHiv\r\n      ? ''\r\n      : 'date confirm HIV is required.';\r\n    temp.sourceOfReferrerId = objValues.sourceOfReferrerId\r\n      ? ''\r\n      : 'Source of referrer is required.';\r\n    temp.enrollmentSettingId = objValues.enrollmentSettingId\r\n      ? ''\r\n      : 'Enrollment Setting Number  is required.';\r\n    temp.tbStatusId = objValues.tbStatusId ? '' : 'TB status is required.';\r\n    temp.statusAtRegistrationId = objValues.statusAtRegistrationId\r\n      ? ''\r\n      : 'Status at Registration is required.';\r\n    temp.entryPointId = objValues.entryPointId\r\n      ? ''\r\n      : 'Care Entry Point is required.';\r\n    temp.dateOfRegistration = objValues.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'Unique ID is required.';\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find(x => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId.id;\r\n    if (validate()) {\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map(x => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: 'phone',\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + ' ' + x.middleName + ' ' + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: '',\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.genderId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: 'HospitalNumber',\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == 'Actual' ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: 'phone',\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: 'email',\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: 'altphone',\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.hivEnrollment = objValues;\r\n        const response = await axios.put(\r\n          `${baseUrl}hiv/patient/${patientObj.id}`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success('Patient Updated successfully! ✔');\r\n        history.push('/');\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data && error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = value => {\r\n    const result = value.replace(/[^a-z]/gi, '');\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n    if (e.target.name === 'pregnancyStatusId') {\r\n      console.log(e.target.value);\r\n      if (e.target.value === '72') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: '/patient-history',\r\n              state: { patientObj: patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Back{' '}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Edit User Information\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{' '}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.dateOfRegistration1 !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            disabled={\r\n                              locationState.actionType === 'update'\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {'Hospital number already exist'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus2 === true ? (\r\n                            <span className={classes.success}>\r\n                              {'Hospital number is OK.'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={Math.floor(Math.random() * 1094328)}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.firstName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.lastName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            max={today}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={'row'}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            National Identity Number (NIN){' '}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nin\"\r\n                            id=\"nin\"\r\n                            value={basicInfo.ninNumber}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'phoneNumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.phoneNumber !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'altPhonenumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={getProvinces}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.address !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: '100%' }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      ' ' +\r\n                                      item.middleName +\r\n                                      ' ' +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={e => handleDeleteRelative(index)}\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  >\r\n                                    <option value={''}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.firstName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.lastName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: '100%',\r\n                                      border: '1px solid #014D88',\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: '100%',\r\n                                      borderRadius: '0px',\r\n                                    }}\r\n                                    country={'ng'}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    onChange={e => {\r\n                                      checkPhoneNumber(e.slice(0, 10), 'phone');\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    HIV Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique ID No * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueId\"\r\n                          id=\"uniqueId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.uniqueId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of Enrollment *{' '}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          min={basicInfo.dateOfRegistration}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateOfRegistration}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfRegistration !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"entryPointId\"\r\n                          id=\"entryPointId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.entryPointId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.entryPointId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.entryPointId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      {transferIn === true ? (\r\n                        <FormGroup>\r\n                          <Label>Facility Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityName\"\r\n                            id=\"facilityName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityName}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Status at Registration *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"statusAtRegistrationId\"\r\n                          id=\"statusAtRegistrationId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.statusAtRegistrationId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {hivStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.statusAtRegistrationId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.statusAtRegistrationId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of Confirmed HIV Test *</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateConfirmedHiv\"\r\n                          id=\"dateConfirmedHiv\"\r\n                          min={basicInfo.dob}\r\n                          max={objValues.dateOfRegistration}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateConfirmedHiv}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateConfirmedHiv !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateConfirmedHiv}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Source of Referral *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"sourceOfReferrerId\"\r\n                          id=\"sourceOfReferrerId\"\r\n                          value={objValues.sourceOfReferrerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          {sourceReferral.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.sourceOfReferrerId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.sourceOfReferrerId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Enrollment Setting *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"enrollmentSettingId\"\r\n                          id=\"enrollmentSettingId\"\r\n                          value={objValues.enrollmentSettingId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChange}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n\r\n                          {enrollSetting.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.enrollmentSettingId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.enrollmentSettingId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {femaleStatus && basicInfo.age > 9 && (\r\n                      <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label> Pregnancy </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"pregnancyStatusId\"\r\n                              id=\"pregnancyStatusId\"\r\n                              value={objValues.pregnancyStatusId}\r\n                              style={{\r\n                                border: '1px solid #014D88',\r\n                                borderRadius: '0.2rem',\r\n                              }}\r\n                              onChange={handleInputChange}\r\n                              //disabled={locationState.actionType==='update'? false : true}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {pregnancyStatus.map(value => (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.pregnancyStatusId !== '72' && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                              <FormGroup>\r\n                                <Label>Date of LMP </Label>\r\n                                <Input\r\n                                  type=\"date\"\r\n                                  onKeyDown={e => e.preventDefault()}\r\n                                  name=\"dateOfLpm\"\r\n                                  id=\"dateOfLpm\"\r\n                                  max={today}\r\n                                  onChange={handleInputChange}\r\n                                  value={objValues.dateOfLpm}\r\n                                  style={{\r\n                                    border: '1px solid #014D88',\r\n                                    borderRadius: '0.2rem',\r\n                                  }}\r\n                                  //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>TB Status * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbStatusId\"\r\n                          id=\"tbStatusId\"\r\n                          value={objValues.tbStatusId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {tbStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.tbStatusId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.tbStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {hideTargetGroup === 'false' ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>Target Group *</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"targetGroupId\"\r\n                            id=\"targetGroupId\"\r\n                            value={objValues.targetGroupId}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {kP.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.targetGroupId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.targetGroupId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <div className=\"form-check custom-checkbox ml-1 \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"ovc_enrolled\"\r\n                          id=\"ovc_enrolled\"\r\n                          onChange={handleCheckBox}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                          Enrolled into OVC?\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    {basicInfo.age <= 14 && (\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name=\"ovc_enrolled\"\r\n                            id=\"ovc_enrolled\"\r\n                            onChange={handleCheckBox}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                          >\r\n                            Enrolled into OVC?\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n\r\n                    {ovcEnrolled === true && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Household Unique Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"householdNumber\"\r\n                                id=\"householdNumber\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.householdNumber}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\"></div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredToOVCPartner\"\r\n                                id=\"referredToOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredToOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredToOVCPartner\"\r\n                                id=\"dateReferredToOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredToOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredFromOVCPartner\"\r\n                                id=\"referredFromOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredFromOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredFromOVCPartner\"\r\n                                id=\"dateReferredFromOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredFromOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : ''}\r\n\r\n              <br />\r\n\r\n              {locationState.actionType === 'update' ? (\r\n                <>\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Update\r\n                      </span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Updating...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n\r\n                  <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancel}\r\n                    style={{ backgroundColor: '#992E62' }}\r\n                  >\r\n                    <span\r\n                      style={{ textTransform: 'capitalize', color: '#fff' }}\r\n                    >\r\n                      Cancel\r\n                    </span>\r\n                  </MatButton>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from 'react';\r\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport './../src/main/webapp/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ marginTop: '3em' }}>\r\n      <Router>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/patient-dashboard\">\r\n              {/* This is the component to access patient dashboard */}\r\n              <PatientDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              {/* This is the entry point to the application */}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}