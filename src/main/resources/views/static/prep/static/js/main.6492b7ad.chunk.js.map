{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","query","setQuery","pageSize","page","search","useEffect","fetchPatients","async","response","axios","get","baseUrl","headers","Authorization","data","records","error","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","map","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","_patientObj$personRes","_patientObj$personRes2","_patientObj$personRes3","_patientObj$personRes4","_patientObj$personRes5","_patientObj$personRes6","_patientObj$personRes7","_patientObj$personRes8","_patientObj$personRes9","classes","setpatientObj","patientDetail","ExpansionPanel","ExpansionPanelSummary","md","_Fragment","root2","personResponseDto","ButtonMui","startIcon","TiArrowBack","textTransform","identifier","_identifiers$identifi","_identifiers$identifi2","find","call","obj","getHospitalNumber","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sex","_identifiers$contactP","_identifiers$contactP2","phoneNumber","contactPoint","getPhoneNumber","_identifiers$address","_identifiers$address$","console","log","address","city","houseAddress","Array","isArray","line","landMark","getAddress","Typography","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","activeContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","then","catch","LoadViewPage","action","path","actionType","PerfectScrollbar","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","visitCount","encounterDate","nextAppointment","class","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","useStyles","makeStyles","card","margin","display","flexDirection","form","submit","cardBottom","Select","button","flexGrow","input","ClinicVisit","errors","setErrors","disabledField","setSisabledField","patientDto","setPatientDto","temp","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","populationType","setPopulationType","visitType","setVisitType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","testsOptions","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","handleInputChange","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","objValues","setObjValues","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","extra","hepatitis","notedSideEffects","otherTestsDone","prepEnrollmentUuid","referred","regimenId","riskReductionServices","healthCareWorkerSignature","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","hivTestResult","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","result","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_RISK_REDUCTION_PLAN","PREP_STATUS","HTS_RESULT","LAST_HIV_TEST_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","PrepRegimen","TestGroup","PREP_URINALYSIS_RESULT","PREP_OTHER_TEST","HEPATITIS_SCREENING_RESULT","SYPHILIS_RESULT","PREGANACY_STATUS","PREP_ENTRY_POINT","PREP_TYPE","POPULATION_TYPE","VISIT_TYPE","FAMILY_PLANNING_METHOD","GetPatientVisit","GetLatestFromEligibility","labTests","x2","push","label","labTestName","testGroupId","testGroupName","groupName","sampleType","localId","otherTestName","prepRiskReductionPlan","setPrepRiskReductionPlan","lastHivTest","undefined","test1","_populationType$find","_visitType$find","_pregnant$find","pregnancyStatus","autoPopulatePopulationType","code","latestEligibility","sort","a","b","visitDate","isBefore","length","autoPopulate","durationInDays","Number","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","emptyObjValues","handleSubmit","preventDefault","isFemale","Object","values","every","uuid","put","POSITION","BOTTOM_CENTER","activeTab","post","toLowerCase","Grid","Column","Segment","ribbon","FormGroup","FormLabelName","Input","onKeyDown","min","dateEnrolled","max","InputGroup","onKeyUp","InputGroupText","addonType","plan","for","_objValues$otherTests","defaultChecked","eachTest","component","MatButton","AddIcon","handleCreateNewTest","placeholder","SaveIcon","ClinicVisitPage","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","liverFunctionTestResults","dateLiverFunctionTestResults","urinalysisTestResult","setUrinalysisTestResult","liverFunctionTestResult","setLiverFunctionTestResult","LiverFunctionTestResult","HistoryOfDrugToDrugInteraction","GetPatientCommercement","validate","PatientObject","CardBody","bodyWeight","breastFeeding","Spinner","demo","background","default","inline","PrEPEligibiltyScreeningForm","setDisabledField","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonStooped","setReasonStooped","setCauseOfDeath","PREP_STATUS_STOPPED_REASON","CAUSE_DEATH","GetPatientInterruption","linkToArt","required","reasonStoppedOther","dateLinkToArt","CancelIcon","BasicInfo","_servicesReceivedByCl","patientID","counselingType","setCounselingType","reasonForDecline","setReasonForDecline","setPregnancyStatus","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","score","CounselingType","VisitType","ReasonForDecline","PopulationType","PregnancyStatus","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","setAssessmentForPepIndication","assessmentForPepIndication","setAssessmentForAcuteHivInfection","assessmentForAcuteHivInfection","setServicesReceivedByClient","servicesReceivedByClient","setAssessmentForPrepEligibility","assessmentForPrepEligibility","riskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","handleInputChangeRiskAssessment","riskCount","filter","riskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","drugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","handleInputChangeDrugHistory","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","handleInputChangeAssessmentForPepIndication","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","handleInputChangeAssessmentForAcuteHivInfection","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","handleInputChangeAssessmentForPrepEligibility","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","handleInputChangeServicesReceivedByClient","assessmentScore","setAssessmentScore","getPrepEligibilityScore","is30AndAbove","getIndicationForPepResult","each","getAcuteHivResult","dateHivPositive","dateOfRegistration","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","handleInputReasonsForDecline","fluid","multiple","selection","one","PrEPVisit","useHistory","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","location","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","reject","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref","window","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","replace","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","GetCountry","newConatctsInfo","contactInfo","identifiers","altphone","maritalStatus","employmentStatus","education","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","currentDate","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","person","hivEnrollment","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.6492b7ad.chunk.js","sourcesContent":["// export const token = new URLSearchParams(window.location.search).get(\"jwt\");\r\n// export const url = \"/api/v1/\";\r\nexport const url = \"http://localhost:8383/api/v1/\";\r\nexport const token =\r\n  \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzI1Mzg1NjU2fQ.GWXahlnHXjkWF5Q6vQ7EgSV3qD5mYHs4ayOR5pMKAMkq2UQc6UcgW6rrxEz10GwN1WPU8NVWmaaQBdxPahZ1JA\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQuery] = useState({ pageSize: 10, page: 0, search: \"\" });\r\n\r\n  useEffect(() => {\r\n    fetchPatients(query);\r\n  }, []);\r\n\r\n  const fetchPatients = async (query) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setPatientList(response.data.records);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n          { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={patientList.map((row) => ({\r\n          name: row.firstName + \" \" + row.surname,\r\n          hospital_number: row.hospitalNumber,\r\n          clientCode: row.uniqueId,\r\n          gender: row && row.gender ? row.gender : \"\",\r\n          age: row.age,\r\n          status: (\r\n            <Label color=\"blue\" size=\"mini\">\r\n              {row.prepStatus}\r\n            </Label>\r\n          ),\r\n          actions: (\r\n            <div>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/patient-dashboard\",\r\n                  state: { patientObj: row },\r\n                }}\r\n              >\r\n                <ButtonGroup\r\n                  variant=\"contained\"\r\n                  aria-label=\"split button\"\r\n                  style={{\r\n                    backgroundColor: \"rgb(153, 46, 98)\",\r\n                    height: \"30px\",\r\n                    width: \"215px\",\r\n                  }}\r\n                  size=\"large\"\r\n                >\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    aria-label=\"select merge strategy\"\r\n                    aria-haspopup=\"menu\"\r\n                    style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                  >\r\n                    <MdDashboard />\r\n                  </Button>\r\n                  <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"12px\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bolder\",\r\n                      }}\r\n                    >\r\n                      Patient Dashboard\r\n                    </span>\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Link>\r\n            </div>\r\n          ),\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList';\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n      </ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"prep-patient\" title=\"PrEP Patients\">                   \r\n                    <PrepPatients />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\n//import { Button } from 'semantic-ui-react';\r\nimport { Label, } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [patientObj, setpatientObj] = useState(props.patientDetail)\r\n\r\n  useEffect(() => {\r\n    setpatientObj(props.patientDetail);\r\n  }, [props.patientDetail]);\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(obj => obj.type === 'HospitalNumber');\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(obj => obj?.type === 'phone');\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = (identifier) => {\r\n    console.log('identifier: ',identifier)\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress = Array.isArray(address?.line) && (address?.line[0] != null) ? address?.line[0] : \"\"\r\n    const landMark = address && address?.city && address?.city !== null ? address?.city : \"\"\r\n    return address ? houseAddress + \" \" + landMark : '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel >\r\n        <ExpansionPanelSummary >\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (<>\r\n                <Row className={\"mt-1\"}>\r\n                  <Col md={12} className={classes?.root2}>\r\n                    <b style={{ fontSize: \"25px\", color: 'rgb(153, 46, 98)' }}>\r\n                      {patientObj?.personResponseDto?.firstName + \" \" + patientObj?.personResponseDto?.surname}\r\n                    </b>\r\n                    <Link to={\"/\"} >\r\n                      <ButtonMui\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-end ms-2 mr-2 mt-2\"\r\n                        //startIcon={<FaUserPlus size=\"10\"/>}\r\n                        startIcon={<TiArrowBack />}\r\n                        style={{ backgroundColor: \"rgb(153, 46, 98)\", color: '#fff', height: '35px' }}\r\n\r\n                      >\r\n                        <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                      </ButtonMui>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Patient ID : <b style={{ color: '#0B72AA' }}>{getHospitalNumber(patientObj?.personResponseDto?.identifier)}</b>\r\n                    </span>\r\n                  </Col>\r\n\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      Date Of Birth : <b style={{ color: '#0B72AA' }}>{patientObj?.personResponseDto?.dateOfBirth}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Age : <b style={{ color: '#0B72AA' }}>{calculate_age(moment(patientObj?.personResponseDto?.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Gender :{\" \"}\r\n                      <b style={{ color: '#0B72AA' }}>{patientObj?.personResponseDto && patientObj?.personResponseDto?.sex !== null ? patientObj?.personResponseDto?.sex : ''}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Phone Number : <b style={{ color: '#0B72AA' }}>{getPhoneNumber(patientObj?.personResponseDto?.contactPoint)}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Address : <b style={{ color: '#0B72AA' }}>{getAddress(patientObj?.personResponseDto?.address)} </b>\r\n                    </span>\r\n                  </Col>\r\n                  {patientObj?.prepStatus !== null && (\r\n                    <Col md={12}>\r\n                      <div >\r\n                        <Typography variant=\"caption\">\r\n                          <Label color={\"teal\"} size={\"mini\"}>\r\n                            STATUS : {patientObj && patientObj?.prepStatus}\r\n                          </Label>\r\n\r\n                        </Typography>\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </>)\r\n                : (\r\n                  <>\r\n                    <p>Loading please wait..</p>\r\n                  </>\r\n                )\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Popup } from \"semantic-ui-react\";\r\n\r\n\r\n\r\n\r\nfunction SubMenu(props) {\r\n\r\n    const patientObj = props.patientObj \r\n    useEffect(() => {\r\n        //Observation();\r\n    }, [props.patientObj]);\r\n\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n    return (\r\n         <div>\r\n\r\n                <Menu size=\"large\" color={\"black\"} inverted >\r\n                { patientObj.createdBy!==\"ETL\"  ? //The menu will show if the patient is not migrated \r\n                (<>\r\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\r\n                                  \r\n                { patientObj.eligibilityCount<=0 || patientObj.eligibilityCount===null ?\r\n                (<>\r\n                    <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>\r\n                   \r\n                </>)\r\n                :\r\n                (<>\r\n                {/* check if the patient has done prep commencement */}\r\n                    {patientObj.prepCount==='0' || patientObj.commencementCount===null ? \r\n                    (<>\r\n                        {patientObj.prepCount==='0' && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                        \r\n                    </>) \r\n                    : (<>\r\n                       \r\n                        <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} > PrEP Eligibility Screening </Menu.Item>\r\n                        {(patientObj.prepCount===null || patientObj.prepCount<0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\r\n                        {patientObj.hivresultAtVisit===\"Negative\" && (<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\r\n                    </>)\r\n                    }\r\n                    \r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>   \r\n                </>)\r\n                :\r\n\r\n                (<>\r\n                {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n                <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\r\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>)}\r\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && patientObj.prepCount==='0' && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) && (patientObj.commencementCount===null || patientObj.commencementCount<=0) &&(<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>)}\r\n                {(patientObj.hivresultAtVisit ===\"Negative\" || patientObj.hivresultAtVisit ===null) &&(<Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>     \r\n                </>) }                \r\n                </Menu>\r\n                   \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport {Button } from 'semantic-ui-react'\r\n\r\nconst RecentHistory = (props) => {\r\n  //console.log(props.patientObj)\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [summary, setSummary] = useState(null)\r\n  const [saving, setSaving] = useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [record, setRecord] = useState(null)\r\n  const toggle = () => setOpen(!open);\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary()\r\n    RecentActivities();\r\n  }, [props.patientObj.personId]);\r\n\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  const Summary =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setSummary(response.data[0])\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n\r\n\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Prep Clinic'){\r\n        return \"PC\"\r\n      }else if(name==='Prep Enrollment'){\r\n        return \"PE\"\r\n      }else if(name==='Prep Eligibility'){\r\n        return \"PE\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n    const LoadViewPage =(row,action)=>{\r\n          \r\n      if(row.path==='prep-eligibility'){        \r\n          props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-enrollment'){\r\n          props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-clinic'){//prep-commencement \r\n          props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-commencement'){\r\n          props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-interruption'){\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n      }else{\r\n\r\n      }\r\n      \r\n  }\r\n  const LoadModal =(row)=>{\r\n    toggle()\r\n    setRecord(row)\r\n  }\r\nconst LoadDeletePage =(row)=>{\r\n  if(row.path==='prep-eligibility'){ \r\n      setSaving(true)       \r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });  \r\n  }else if(row.path==='prep-clinic'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-enrollment'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-commencement'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-interruption'){\r\n    setSaving(true)\r\n    //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n    axios\r\n    .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    )\r\n    .then((response) => {\r\n        setSaving(false)\r\n        toast.success(\"Record Deleted Successfully\");\r\n        RecentActivities()\r\n        toggle()\r\n    })\r\n    .catch((error) => {\r\n        setSaving(false)\r\n        if(error.response && error.response.data){\r\n            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          }\r\n          else{\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n    });\r\n\r\n}else{\r\n\r\n  }\r\n  \r\n}\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\" >\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                      {data.activities && data.activities.map((activity,index) => ( \r\n                          \r\n                          <> \r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                               \r\n                               <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                               \r\n                                 <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadModal(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  \r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                            </>\r\n                       ))}                       \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n            <h4 className=\"card-title\">Summary </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n                {summary && summary!==null && (<>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                  \r\n                  <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                    <div className=\"card overflow-hidden\">\r\n                  <div className=\"social-graph-wrapper widget-facebook\">\r\n                    <span className=\"s-icon\">\r\n                      <span style={{fontSize:\"16px\"}}>Total Clinic Visit : {summary.visitCount}</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 border-right\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\"><b>{summary.encounterDate}</b></span> \r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Last Visit </b></p>\r\n                      </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-6\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\"><b>{summary.nextAppointment}</b></span>\r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Next Visit</b></p>\r\n                      </div>\r\n                    </div>\r\n                   \r\n                  </div>\r\n                </div>\r\n                  </div>\r\n                  <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                  <div className=\"widget-stat card\">\r\n                    <div className=\"card-body p-4\" style={{backgroundColor:\"#fff\"}}>\r\n                      <h4 className=\"card-title\" style={{fontSize:\"15px\"}}><b>Current Regimen Given</b></h4>\r\n                      <h4 class=\"text-info \">{summary.regimen}</h4>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card overflow-hidden\">\r\n                  <div className=\"social-graph-wrapper widget-linkedin\">\r\n                    <span className=\"s-icon\">\r\n                    <span style={{fontSize:\"16px\", }}>BMI : {(summary.weight/((summary.height/100) * (summary.height/100))).toFixed(2)} kg/m<sup>2</sup></span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-6 border-right\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\">{summary.weight} Kg</span> \r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Weight </b></p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\">{summary.height} cm</span>\r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Height </b></p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>  \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, List, Card } from \"semantic-ui-react\";\r\n// Page titie\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport Select from \"react-select\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst ClinicVisit = (props) => {\r\n  //let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  // const [selectedPregnant, setSelectedPregnant] = useState(\"\");\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState(\"\");\r\n  // const [selectedVisitType, setSelectedVisitType] = useState(\"\");\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  let testsOptions = [];\r\n  const [hivTestValue, setHivTestValue] = useState(\"\");\r\n  const [hivTestResultDate, setHivTestResultDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    handleInputChange({\r\n      target: { name: \"hivTestResult\", value: hivTestValue },\r\n    });\r\n    handleInputChange({\r\n      target: { name: \"hivTestResultDate\", value: hivTestResultDate },\r\n    });\r\n  }, [hivTestValue]);\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: \"\",\r\n    diastolic: \"\",\r\n    height: \"\",\r\n    systolic: \"\",\r\n    pulse: \"\",\r\n    temperature: \"\",\r\n    respiratoryRate: \"\",\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    dateInitialAdherenceCounseling: \"\",\r\n    datePrepGiven: \"\",\r\n    datePrepStart: \"\",\r\n    dateReferre: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    extra: {},\r\n    height: \"\",\r\n    hepatitis: {},\r\n    nextAppointment: \"\",\r\n    notedSideEffects: \"\",\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: \"\",\r\n    prepEnrollmentUuid: \"\",\r\n    pulse: \"\",\r\n    referred: \"\",\r\n    regimenId: \"\",\r\n    respiratoryRate: \"\",\r\n    riskReductionServices: \"\",\r\n    healthCareWorkerSignature: \"\",\r\n    stiScreening: \"\",\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: \"\",\r\n    temperature: \"\",\r\n    urinalysis: {},\r\n    urinalysisResult: \"\",\r\n    weight: \"\",\r\n    why: \"\",\r\n    otherDrugs: \"\",\r\n    duration: \"\",\r\n    prepGiven: \"\",\r\n    hivTestResult: \"\",\r\n    hivTestResultDate: \"\",\r\n    prepType: \"\",\r\n    populationType: \"\",\r\n    prepDistributionSetting: \"\",\r\n    familyPlanning: \"\",\r\n    dateOfFamilyPlanning: \"\",\r\n    monthsOfRefill: \"\",\r\n    visitType: \"\",\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  });\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n    others: \"\",\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    // Check if the fields exist in objValues first\r\n    if (\r\n      objValues.urinalysis.testDate &&\r\n      objValues.urinalysis.result &&\r\n      objValues.urinalysis.urinalysisTest\r\n    ) {\r\n      setUrinalysisTest({\r\n        ...urinalysisTest,\r\n        testDate: objValues.urinalysis.testDate,\r\n        result: objValues.urinalysis.result,\r\n        urinalysisTest: objValues.urinalysis.urinalysisTest,\r\n      });\r\n    }\r\n    if (\r\n      objValues.syphilis.testDate &&\r\n      objValues.syphilis.result &&\r\n      objValues.syphilis.syphilisTest\r\n    ) {\r\n      setSyphilisTest({\r\n        ...syphilisTest,\r\n        testDate: objValues.syphilis.testDate,\r\n        result: objValues.syphilis.result,\r\n        syphilisTest: objValues.syphilis.syphilisTest,\r\n        others: objValues.syphilis.others,\r\n      });\r\n    }\r\n    if (\r\n      objValues.hepatitis.testDate &&\r\n      objValues.hepatitis.result &&\r\n      objValues.hepatitis.hepatitisTest\r\n    ) {\r\n      setHepatitisTest({\r\n        ...hepatitisTest,\r\n        testDate: objValues.hepatitis.testDate,\r\n        result: objValues.hepatitis.result,\r\n        hepatitisTest: objValues.hepatitis.hepatitisTest,\r\n      });\r\n    }\r\n  }, [objValues]);\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    PREP_RISK_REDUCTION_PLAN();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    LAST_HIV_TEST_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    PrepRegimen();\r\n    TestGroup();\r\n    PREP_URINALYSIS_RESULT();\r\n    PREP_OTHER_TEST();\r\n    HEPATITIS_SCREENING_RESULT();\r\n    SYPHILIS_RESULT();\r\n    PREGANACY_STATUS();\r\n    PREP_ENTRY_POINT();\r\n    PREP_TYPE();\r\n    POPULATION_TYPE();\r\n    VISIT_TYPE();\r\n    FAMILY_PLANNING_METHOD();\r\n    if (\r\n      props.activeContent &&\r\n      props.activeContent.id !== \"\" &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientVisit(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === \"view\" ? true : false\r\n      );\r\n    }\r\n    GetLatestFromEligibility();\r\n  }, [props.activeContent]);\r\n\r\n  const PREGANACY_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const PREP_ENTRY_POINT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const PREP_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //Get list of Test Group\r\n  const TestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        response.data.map((x) => {\r\n          x.labTests.map((x2) => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const GetPatientVisit = async (id) => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"returned: \", response.data);\r\n        setObjValues(response.data);\r\n        if (response.data.otherTestsDone !== null) {\r\n          setOtherTest([\r\n            ...response.data.otherTestsDone.map((x, index) => {\r\n              return {\r\n                localId: index + 1,\r\n                otherTest: \"Yes\",\r\n                testDate: x.testDate,\r\n                result: x.result,\r\n                name: x.name,\r\n                otherTestName: x.otherTestName,\r\n              };\r\n            }),\r\n          ]);\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const PrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //setPrepStatus(response.data);\r\n        objValues.prepEnrollmentUuid = \"\";\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const PrepRegimen = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const PREP_RISK_REDUCTION_PLAN = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"prep codeset: \", response.data);\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const PREP_SIDE_EFFECTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const HTS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  const LAST_HIV_TEST_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${objValues.personId}/current-hts`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        var lastHivTest = response.data.hivTestResult;\r\n\r\n        if (lastHivTest !== null && lastHivTest !== undefined) {\r\n          setHivTestValue(response.data.hivTestResult);\r\n          setHivTestResultDate(response.data.test1.date);\r\n          objValues.hivTestResultDate = response.data.hivTestResult;\r\n          objValues.hivTestResultDate = response.data.test1.date;\r\n        } else {\r\n          setHivTestValue(\"NOT DONE\");\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility !== null) {\r\n      setObjValues({\r\n        ...objValues,\r\n        populationType:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility.populationType\r\n            : \"\",\r\n        visitType:\r\n          latestFromEligibility !== null ? latestFromEligibility.visitType : \"\",\r\n        pregnant:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility.pregnancyStatus\r\n            : \"\",\r\n      });\r\n      // await POPULATION_TYPE();\r\n      const autoPopulatePopulationType = populationType.find(\r\n        (type) => type.code === latestFromEligibility.populationType\r\n      )?.display;\r\n      const autoPopulateVisitType = visitType.find(\r\n        (type) => type.code === latestFromEligibility.visitType\r\n      )?.display;\r\n      const autoPopulatePregnant = pregnant.find(\r\n        (type) => type.code === latestFromEligibility.pregnancyStatus\r\n      )?.display;\r\n      setSelectedPopulationType(autoPopulatePopulationType);\r\n      // setSelectedVisitType(autoPopulateVisitType)\r\n      // setSelectedPregnant(autoPopulatePregnant)\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  const GetLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async (response) => {\r\n        const latestEligibility = response.data.sort((a, b) =>\r\n          moment(a.visitDate).isBefore(moment(b.visitDate))\r\n        )[\r\n          // (a,b) => new Date(a.date).getTime() - new Date(b.date).getTime())\r\n          response.data.length - 1\r\n        ];\r\n\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType.find(\r\n        (type) => type.code === objValues.populationType\r\n      );\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : \"\");\r\n    }\r\n  }, [objValues.populationType]);\r\n  const POPULATION_TYPE = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPopulationType(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  const VISIT_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const WHY_POOR_FAIR_ADHERENCE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const SYNDROMIC_STI_SCREENING = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSti(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //PREP_URINALYSIS_RESULT\r\n  const PREP_URINALYSIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setUrineTestResult(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //PREP_OTHER_TEST\r\n  const PREP_OTHER_TEST = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //SYPHILIS_RESULT\r\n  const SYPHILIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n  //HEPATITIS_SCREENING_RESULT\r\n  const HEPATITIS_SCREENING_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setHepaTestResult(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  // FAMILY_PLANNING_METHOD\r\n  const FAMILY_PLANNING_METHOD = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.name === \"monthsOfRefill\") {\r\n      const asNumber = Number(e.target.value);\r\n      const durationInDays = asNumber * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else {\r\n      // if the encounterDate is the same as the commencement date, the prep regimen id should be automatically populated from the commencement\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleInputChangeUrinalysisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    //find the test with the localId\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex((x) => Number(x.localId) === Number(localId));\r\n\r\n    if (\r\n      e.target.name === \"name\" &&\r\n      e.target.value !== \"PREP_OTHER_TEST_OTHER_(SPECIFY)\"\r\n    ) {\r\n      temp[index].otherTestName = \"\";\r\n      temp[index][e.target.name] = e.target.value;\r\n      setOtherTest(temp);\r\n    } else {\r\n      temp[index][e.target.name] = e.target.value;\r\n      setOtherTest(temp);\r\n    }\r\n  };\r\n  const handleInputChangeHepatitisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    //Others\r\n    if (e.target.name === \"result\" && e.target.value !== \"Others\") {\r\n      syphilisTest.others = \"\";\r\n      setSyphilisTest({ ...syphilisTest, [\"others\"]: \"\" });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBoxSyphilisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" });\r\n    }\r\n  };\r\n  const handleCheckBoxHepatitisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" });\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" });\r\n    }\r\n  };\r\n  const handleCheckBoxOtherTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: \"Yes\",\r\n          testDate: \"\",\r\n          result: \"\",\r\n          name: \"\",\r\n          otherTestName: \"\",\r\n        },\r\n      ]);\r\n    } else {\r\n      // setOtherTest({...otherTest, [\"otherTest\"]: \"No\"})\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxUrinalysisTest = (e) => {\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" });\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" });\r\n    }\r\n  };\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = (e) => {\r\n    if (\r\n      e.target.name === \"height\" &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        \"Height cannot be greater than 216.408 and less than 48.26\";\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = (e) => {\r\n    if (\r\n      e.target.name === \"weight\" &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        \"Body weight must not be greater than 150 and less than 3\";\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = (e) => {\r\n    if (\r\n      e.target.name === \"systolic\" &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        \"Blood Pressure systolic must not be greater than 240 and less than 90\";\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = (e) => {\r\n    if (\r\n      e.target.name === \"diastolic\" &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        \"Blood Pressure diastolic must not be greater than 140 and less than 60\";\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = (e) => {\r\n    if (\r\n      e.target.name === \"pulse\" &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = \"Pulse must not be greater than 120 and less than 40\";\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = (e) => {\r\n    if (\r\n      e.target.name === \"respiratoryRate\" &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        \"Respiratory Rate must not be greater than 70 and less than 10\";\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: \"\" });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = (e) => {\r\n    if (\r\n      e.target.name === \"temperature\" &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        \"Temperature must not be greater than 47 and less than 35\";\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: \"\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === \"\" ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: \"\",\r\n      dateInitialAdherenceCounseling: \"\",\r\n      datePrepGiven: \"\",\r\n      datePrepStart: \"\",\r\n      dateReferre: \"\",\r\n      diastolic: \"\",\r\n      encounterDate: \"\",\r\n      extra: {},\r\n      height: \"\",\r\n      hepatitis: {},\r\n      nextAppointment: \"\",\r\n      notedSideEffects: \"\",\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: \"\",\r\n      prepEnrollmentUuid: \"\",\r\n      pulse: \"\",\r\n      referred: \"\",\r\n      regimenId: \"\",\r\n      respiratoryRate: \"\",\r\n      riskReductionServices: \"\",\r\n      stiScreening: \"\",\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: \"\",\r\n      temperature: \"\",\r\n      urinalysis: {},\r\n      urinalysisResult: \"\",\r\n      weight: \"\",\r\n      why: \"\",\r\n      otherDrugs: \"\",\r\n      hivTestResult: \"\",\r\n      duration: \"\",\r\n      prepGiven: \"\",\r\n      prepDistributionSetting: \"\",\r\n      visitType: \"\",\r\n    });\r\n    setUrinalysisTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validate = () => {\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    // temp.pregnant = (isFemale() && objValues.pregnant === null) ? \"\" : \"This field is required\"\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? \"\" : \"This field is required\";\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    temp.adherenceLevel = objValues.adherenceLevel\r\n      ? \"\"\r\n      : \"This field is required\";\r\n\r\n    //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\r\n    temp.height = objValues.height ? \"\" : \"This field is required\";\r\n    temp.weight = objValues.weight ? \"\" : \"This field is required\";\r\n    temp.urinalysisTest = urinalysisTest.urinalysisTest\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    temp.testDate = urinalysisTest.testDate ? \"\" : \"This field is required\";\r\n    temp.result = urinalysisTest.result ? \"\" : \"This field is required\";\r\n    temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\";\r\n    temp.duration = objValues.duration ? \"\" : \"This field is required\";\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    temp.populationType = objValues.populationType\r\n      ? \"\"\r\n      : \"This field is required\";\r\n    temp.visitType = objValues.visitType ? \"\" : \"This field is required\";\r\n    // temp.hivTestResult = objValues.hivTestResult ? \"\" : \"This field is required\"\r\n    // temp.hivTestResultDate = objValues.hivTestResultDate ? \"\" : \"This field is required\"\r\n    //temp.datePrepGiven = objValues.datePrepGiven ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //objValues.visitDate = vital.encounterDate\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.otherTestsDone = otherTest.map((x) => {\r\n        return {\r\n          testDate: x.testDate,\r\n          result: x.result,\r\n          name: x.name,\r\n          otherTestName: x.otherTestName,\r\n        };\r\n      });\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === \"update\") {\r\n        //Perform operation for updation action\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            toast.success(\"Clinic Visit save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"consultation\",\r\n              activeTab: \"history\",\r\n              actionType: \"view\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error(\"Something went wrong, please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/clinic-visit`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            emptyObjValues();\r\n            toast.success(\"Clinic Visit save successful\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"consultation\",\r\n              activeTab: \"history\",\r\n              actionType: \"view\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== \"\"\r\n                  ? error.response.data.apierror.message\r\n                  : \"Something went wrong, please try again\";\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error(\"Something went wrong, please try again...\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n  // const handleSubmit = ()=>{\r\n  //     if (validate()) {objValues.syphilis = syphilisTest\r\n  //     objValues.hepatitis = hepatitisTest\r\n  //     objValues.urinalysis = urinalysisTest\r\n  //     objValues.otherTestsDone = otherTest\r\n  //     objValues.prepEnrollmentUuid = patientDto.uuid\r\n  //     emptyObjValues();\r\n  //     props.setActiveContent({\r\n  //         ...props.activeContent,\r\n  //         id: \"\",\r\n  //         route: 'consultation',\r\n  //         activeTab: \"history\",\r\n  //         actionType: \"view\"\r\n  //     })}\r\n  // }\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length + 1,\r\n        otherTest: \"Yes\",\r\n        testDate: \"\",\r\n        result: \"\",\r\n        name: \"\",\r\n        otherTestName: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === \"female\";\r\n  };\r\n\r\n  const handlePrepTypeChange = (e) => {\r\n    setObjValues({ ...objValues, regimenId: \"\", prepType: e.target.value });\r\n    if (\r\n      e.target.value === \"PREP_TYPE_OTHERS\" ||\r\n      e.target.value === \"PREP_TYPE_ED_PREP\"\r\n    ) {\r\n      PrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: \"106%\", height: \"35px\" }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: \"#fff\" }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : \"\"\r\n                    }\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.pulse !== \"\" ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.respiratoryRate !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.temperature !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: \"red\" }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.weight !== \"\" ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: \"red\" }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#992E62\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #992E62\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        {objValues.height !== \"\"\r\n                          ? (objValues.height / 100).toFixed(2) + \"m\"\r\n                          : \"m\"}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.height !== \"\" ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== \"\" && objValues.height !== \"\" && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: \"#014D88\",\r\n                            color: \"#fff\",\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0rem\",\r\n                          }}\r\n                        >\r\n                          BMI :{\" \"}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: \"#014D88\",\r\n                          color: \"#fff\",\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.systolic !== \"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== \"\" ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {errors.diastolic !== \"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant.map((value) => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== \"\" ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: \"106%\", height: \"35px\" }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: \"#fff\" }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Result of Last HIV Test </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={(e) => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Last HIV Test </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == \"NOT DONE\" ? \"text\" : \"date\"}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == \"NOT DONE\"\r\n                        ? \"NOT APPLICABLE\"\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={(e) => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"notedSideEffects\"\r\n                    id=\"notedSideEffects\"\r\n                    value={objValues.notedSideEffects}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepSideEffect.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === \"true\" && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti.map((value) => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan.map((plan) => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Level of Adherence <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                \"PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES\" && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.25rem\",\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor.map((value) => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.populationType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== \"\" ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    // disabled\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select Prep Type</option>\r\n                    {prepType.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== \"\" ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRegimen.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.regimen}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.regimenId !== \"\" ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Distribution Setting{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <FormLabelName>Duration <span style={{color: \"red\"}}> *</span></FormLabelName>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"duration\"\r\n                                        id=\"duration\"\r\n                                        value={objValues.duration}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\r\n\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.duration !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.duration}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div> */}\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Months of Refill <span style={{ color: \"red\" }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepGiven !==\"\" ? (\r\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>  */}\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.25rem\",\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={\r\n                      urinalysisTest.urinalysisTest == \"Yes\" ? true : false\r\n                    }\r\n                  />{\" \"}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest.urinalysisTest === \"Yes\" && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Date{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={(e)=>e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest.testDate}\r\n                        // defaultValue={objValues.urinalysis?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.testDate !== \"\" ? (\r\n                        <span className={classes.error}>{errors.testDate}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Result{\" \"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== \"\" ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={\r\n                      hepatitisTest.hepatitisTest === \"Yes\" ? true : false\r\n                    }\r\n                  />{\" \"}\r\n                  Hepatitis Test{\" \"}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === \"Yes\" && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={(e)=>e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest.syphilisTest === \"Yes\" ? true : false}\r\n                  />{\" \"}\r\n                  Syphilis Test{\" \"}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest.syphilisTest === \"Yes\" && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={(e)=>e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.25rem\",\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest.result === \"Others\" && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    defaultChecked={true}\r\n                    checked={otherTest.length > 0}\r\n                  />\r\n                  Other Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {/* {otherTest.otherTest === 'Yes' && (<> */}\r\n              {otherTest.length > 0 &&\r\n                otherTest.map((eachTest) => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-4\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={eachTest.name}\r\n                          onChange={(e) =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {eachTest.name === \"PREP_OTHER_TEST_OTHER_(SPECIFY)\" && (\r\n                      <div className=\" mb-1 col-md-4\">\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name</FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={(e) =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.25rem\",\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n                    <div className=\" mb-1 col-md-4\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={(e)=>e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={(e) =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-1 col-md-4\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={(e) =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.25rem\",\r\n                          }}\r\n                          disabled={disabledField}\r\n                        ></Input>\r\n                      </FormGroup>\r\n                    </div>\r\n                    {/* add material ui divider  */}\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: \"10px\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {otherTest.length > 0 && (\r\n                <div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button} col-md-4`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: \"#014d88\" }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving}\r\n                  >\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Add Test\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: \"106%\", height: \"35px\" }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: \"#fff\" }}>NEXT APPOINTMENT DATE </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>Next Appointment Date</FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={(e)=>e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature</FormLabelName>\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== \"\" ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === \"update\" ? (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: \"#014d88\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: \"#014d88\" }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n        if(props.activeContent.actionType===\"view\"){\r\n            PatientHistory()\r\n        }\r\n      }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n               \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action, activeTab:'home'})     \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment2'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Clinic Visit History \"\r\n              columns={[\r\n                { title: \"Visit Date\", field: \"date\" },\r\n                {\r\n                  title: \"Regimen Given\",\r\n                  field: \"regimen\",\r\n                },               \r\n                { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   date: row.encounterDate,\r\n                   regimen: row.regimen,\r\n                   nextAppointment: row.nextAppointment,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                               <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\r\n                                <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                               <Dropdown.Item  onClick={()=>LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {\r\n    Card, CardBody, FormGroup, Label, Input, InputGroup,\r\n    InputGroupText, Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {url as baseUrl, token} from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport {Spinner} from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\": {\r\n            color: '#fff',\r\n            fontWeight: 'bold'\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: '0.25rem',\r\n            height: '41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\": {\r\n            color: 'red'\r\n        },\r\n        \"& label\": {\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            fontWeight: 'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const [prepRegimen, setprepRegimen] = useState([]);\r\n    const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] = useState([])\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: null,\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid: \"\",\r\n        weight: \"\",\r\n        drugAllergies: \"\",\r\n        referred: \"\",\r\n        datereferred: \"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n        duration: \"\",\r\n        prepDistributionSetting: \"\",\r\n        prepType: \"\",\r\n        monthsOfRefill: \"\",\r\n        liverFunctionTestResults: \"\",\r\n        dateLiverFunctionTestResults: \"\",\r\n        historyOfDrugToDrugInteraction: \"\"\r\n    });\r\n\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n    const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n    const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n    const [prepType, setPrepType] = useState([]);\r\n    const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n    useEffect(() => {\r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n        PrepRegimen();\r\n        PREP_ENTRY_POINT();\r\n        PREP_TYPE();\r\n        LiverFunctionTestResult();\r\n        HistoryOfDrugToDrugInteraction();\r\n        PREP_URINALYSIS_RESULT();\r\n        if (props.activeContent.id && props.activeContent.id !== \"\" && props.activeContent.id !== null) {\r\n            GetPatientCommercement(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType === 'view' ? true : false)\r\n        }\r\n    }, []);\r\n    const PrepRegimen = async() => {\r\n        axios\r\n            .get(`${baseUrl}prep-regimen`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                setprepRegimen(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n\r\n    const PREP_ENTRY_POINT = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                setPrepEntryPoints(response.data);\r\n                // console.log(\"prep\", prepEntryPoint)\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n\r\n    const PREP_URINALYSIS_RESULT = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                \r\n                setUrinalysisTestResult(response.data);\r\n            })\r\n            .catch((error) => {\r\n                \r\n            });\r\n\r\n    }\r\n\r\n\r\n    const PREP_TYPE = async () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                setPrepType(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    const LiverFunctionTestResult =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLiverFunctionTestResult(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const HistoryOfDrugToDrugInteraction =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setHistoryOfDrugToDrugInteraction(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const GetPatientCommercement = (id) => {\r\n        axios\r\n            .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n                setObjValues(response.data.find((x) => x.id === id));\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const PREGANACY_STATUS = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                setpregnant(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const GetPatientDTOObj = () => {\r\n        axios\r\n            .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n                {headers: {\"Authorization\": `Bearer ${token}`}}\r\n            )\r\n            .then((response) => {\r\n                setPatientDto(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    //Vital signs clinical decision support\r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        weight: \"\",\r\n        height: \"\",\r\n    })\r\n\r\n\r\n\r\n    const handleInputChange = e => {\r\n        setErrors({...errors, [e.target.name]: \"\"})\r\n\r\n        if (e.target.name === 'referred' && e.target.value === 'false') {\r\n            objValues.datereferred = ''\r\n            setObjValues({...objValues, ['datereferred']: ''});\r\n        } else if (e.target.name === 'monthsOfRefill') {\r\n            const durationInDays = (Number(e.target.value) * 30)\r\n            setObjValues({...objValues, monthsOfRefill: e.target.value, duration: durationInDays})\r\n\r\n        } \r\n        setObjValues({...objValues, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = {...errors}\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.prepType = objValues.prepType ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.referred = objValues.referred ? \"\" : \"This field is required\"\r\n        temp.prepDistributionSetting = objValues.prepDistributionSetting ? \"\" : \"This field is required\"\r\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight = (e) => {\r\n        setErrors({...errors, [e.target.name]: \"\"})\r\n        if (e.target.name === \"height\" && (e.target.value < 48.26 || e.target.value > 216.408)) {\r\n            const message = \"Height cannot be greater than 216.408 and less than 48.26\"\r\n            setVitalClinicalSupport({...vitalClinicalSupport, height: message})\r\n        } else {\r\n            setVitalClinicalSupport({...vitalClinicalSupport, height: \"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight = (e) => {\r\n        setErrors({...errors, [e.target.name]: \"\"})\r\n        if (e.target.name === \"weight\" && (e.target.value < 3 || e.target.value > 150)) {\r\n            const message = \"Body weight must not be greater than 150 and less than 3\"\r\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: message})\r\n        } else {\r\n            setVitalClinicalSupport({...vitalClinicalSupport, weight: \"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setSaving(true);\r\n            objValues.prepEnrollmentUuid = patientDto.uuid\r\n            if (props.activeContent && props.activeContent.actionType === \"update\") {//Perform operation for updation action\r\n                axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\r\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\r\n                ).then(response => {\r\n                    setSaving(false);\r\n                    patientObj.commencementCount = 1\r\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n                })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                            if (error.response.data.apierror) {\r\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            } else {\r\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        } else {\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n            } else {\r\n                axios.post(`${baseUrl}prep/commencement`, objValues,\r\n                    {headers: {\"Authorization\": `Bearer ${token}`}},\r\n                ).then(response => {\r\n                    setSaving(false);\r\n                    patientObj.commencementCount = 1\r\n                    props.PatientObject();\r\n                    toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route: 'recent-history'})\r\n\r\n                })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                            if (error.response.data.apierror) {\r\n                                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            } else {\r\n                                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        } else {\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // console.log(props.patientObj.gender)\r\n\r\n    const handlePrepTypeChange = (e) => {\r\n        // check the prep type. if it is ed prep or others, fetch all prep types instead\r\n        \r\n        setObjValues({...objValues, regimenId: \"\", prepType: e.target.value})\r\n        if (e.target.value === 'PREP_TYPE_OTHERS' || e.target.value === 'PREP_TYPE_ED_PREP') {\r\n            PrepRegimen();\r\n        } else {\r\n            axios\r\n                .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`,\r\n                    {headers: {\"Authorization\": `Bearer ${token}`}}\r\n                )\r\n                .then((response) => {\r\n                    setprepRegimen(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n\r\n        setErrors({...errors, [e.target.name]: \"\"})\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <h2> PrEP Commencement </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"uniqueId\">Date of Initial Adherence Counseling <span\r\n                                        style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateInitialAdherenceCounseling\"\r\n                                        id=\"dateInitialAdherenceCounseling\"\r\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        value={objValues.dateInitialAdherenceCounseling}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.dateInitialAdherenceCounseling !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Date PrEP started <span style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"datePrepStart\"\r\n                                        id=\"datePrepStart\"\r\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        value={objValues.datePrepStart}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.datePrepStart !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.datePrepStart}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\" mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Body Weight <span style={{color: \"red\"}}> *</span></Label>\r\n                                    <InputGroup>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"weight\"\r\n                                            id=\"weight\"\r\n                                            onChange={handleInputChange}\r\n                                            min=\"3\"\r\n                                            max=\"150\"\r\n                                            value={objValues.weight}\r\n                                            onKeyUp={handleInputValueCheckBodyWeight}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\r\n                                            disabled={disabledField}\r\n                                        />\r\n                                        <InputGroupText addonType=\"append\" style={{\r\n                                            backgroundColor: \"#014D88\",\r\n                                            color: \"#fff\",\r\n                                            border: \"1px solid #014D88\",\r\n                                            borderRadius: \"0rem\"\r\n                                        }}>\r\n                                            kg\r\n                                        </InputGroupText>\r\n                                    </InputGroup>\r\n                                    {vitalClinicalSupport.bodyWeight !== \"\" ? (\r\n                                        <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                                    ) : \"\"}\r\n                                    {errors.weight !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.weight}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Height <span style={{color: \"red\"}}> *</span></Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupText\r\n                                            addonType=\"append\"\r\n                                            style={{\r\n                                                backgroundColor: \"#014D88\",\r\n                                                color: \"#fff\",\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0rem\"\r\n                                            }}\r\n                                        >\r\n                                            cm\r\n                                        </InputGroupText>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            name=\"height\"\r\n                                            id=\"height\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.height}\r\n                                            min=\"48.26\"\r\n                                            max=\"216.408\"\r\n                                            disabled={disabledField}\r\n                                            onKeyUp={handleInputValueCheckHeight}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius: \"0rem\"}}\r\n                                        />\r\n                                        <InputGroupText\r\n                                            addonType=\"append\"\r\n\r\n                                            style={{\r\n                                                backgroundColor: \"#992E62\",\r\n                                                color: \"#fff\",\r\n                                                border: \"1px solid #992E62\",\r\n                                                borderRadius: \"0rem\"\r\n                                            }}\r\n                                        >\r\n                                            {objValues.height !== '' ? (objValues.height / 100).toFixed(2) + \"m\" : \"m\"}\r\n                                        </InputGroupText>\r\n                                    </InputGroup>\r\n                                    {vitalClinicalSupport.height !== \"\" ? (\r\n                                        <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                                    ) : \"\"}\r\n                                    {errors.height !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.height}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                                {objValues.weight !== \"\" && objValues.height !== '' && (\r\n                                    <FormGroup>\r\n                                        <Label> {\" \"}</Label>\r\n                                        <InputGroup>\r\n                                            <InputGroupText addonType=\"append\" style={{\r\n                                                backgroundColor: \"#014D88\",\r\n                                                color: \"#fff\",\r\n                                                border: \"1px solid #014D88\",\r\n                                                borderRadius: \"0rem\"\r\n                                            }}>\r\n                                                BMI\r\n                                                : {(objValues.weight / ((objValues.height / 100) * (objValues.height / 100))).toFixed(2)}\r\n                                            </InputGroupText>\r\n\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                )}\r\n                            </div>\r\n                            {(props.patientObj.gender === 'Female' || props.patientObj.gender === 'female' || props.patientObj.gender === 'FEMALE') && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Pregnancy Status</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"pregnant\"\r\n                                            id=\"pregnant\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.pregnant}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value=\"\"></option>\r\n                                            {pregnant.map((value) => (\r\n                                                <option key={value.id} value={value.code}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n                            )}\r\n                            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"\">Breast Feeding</Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"breastFeeding\"\r\n                                            id=\"breastFeeding\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.breastFeeding}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value=\"\">Select</option>\r\n                                            <option value=\"Yes\"> Yes</option>\r\n                                            <option value=\"No\"> No</option>\r\n                                        </Input>\r\n\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n                            )}\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">History of drug Allergies</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"drugAllergies\"\r\n                                        id=\"drugAllergies\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.drugAllergies}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </Input>\r\n\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"urinalysisResult\">Urinalysis Result</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"urinalysisResult\"\r\n                                        id=\"urinalysisResult\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.urinalysisResult}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                            {urinalysisTestResult.map((value) => (\r\n                                                <option key={value.id} value={value.display}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"historyOfDrugToDrugInteraction\">History of Drug-Drug Interactions\r\n                                        {/* <span style={{color: \"red\"}}> *</span> */}\r\n                                        </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"historyOfDrugToDrugInteraction\"\r\n                                        id=\"historyOfDrugToDrugInteraction\"\r\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        value={objValues.historyOfDrugToDrugInteraction}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"> Select </option>\r\n                                        {historyOfDrugToDrugInteraction.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.historyOfDrugToDrugInteraction !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.historyOfDrugToDrugInteraction}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"liverFunctionTestResults\">Liver Function Tests Result<span\r\n                                        style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"liverFunctionTestResults\"\r\n                                        id=\"liverFunctionTestResults\"\r\n                                        // min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                        // max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        value={objValues.liverFunctionTestResults}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"> Select Result</option>\r\n                                        {liverFunctionTestResult.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.liverFunctionTestResults !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.liverFunctionTestResults}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"dateLiverFunctionTestResults\">Date of Liver Function Tests Result  <span\r\n                                        style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateLiverFunctionTestResults\"\r\n                                        id=\"dateLiverFunctionTestResults\"\r\n                                        min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        value={objValues.dateLiverFunctionTestResults}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.dateLiverFunctionTestResults !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.dateLiverFunctionTestResults}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"\">Referred <span style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"referred\"\r\n                                        id=\"referred\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.referred}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\">Select</option>\r\n                                        <option value=\"true\"> Yes</option>\r\n                                        <option value=\"false\"> No</option>\r\n                                    </Input>\r\n                                    {errors.referred !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.referred}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                            {objValues.referred === 'true' && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                        <Label for=\"datereferred\">Date referred</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"datereferred\"\r\n                                            id=\"datereferred\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.datereferred}\r\n                                            min={patientDto && patientDto.dateEnrolled ? patientDto.dateEnrolled : \"\"}\r\n                                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                            disabled={disabledField}\r\n                                        />\r\n                                        {errors.datereferred !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.datereferred}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n\r\n                                </div>\r\n                            )}\r\n                            \r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <FormLabelName for=\"prepType\">Prep Type At Start <span\r\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"prepType\"\r\n                                        id=\"prepType\"\r\n                                        // disabled\r\n                                        onChange={handlePrepTypeChange}\r\n                                        value={objValues.prepType}\r\n                                        // disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\">Select Prep Type</option>\r\n                                        {prepType.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.prepType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepType}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"regimenId\">PrEP Regimen <span style={{color: \"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"regimenId\"\r\n                                        id=\"regimenId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.regimenId}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                                        {prepRegimen.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.regimen}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.regimenId !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.regimenId}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <FormLabelName for=\"\">Prep Distribution Setting <span\r\n                                        style={{color: \"red\"}}> *</span></FormLabelName>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"prepDistributionSetting\"\r\n                                        id=\"prepDistributionSetting\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.prepDistributionSetting}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"></option>\r\n                                        {prepEntryPoint.map((value) => (\r\n                                            <option key={value.code} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.prepDistributionSetting !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.prepDistributionSetting}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {/* <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP Given</Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                onKeyDown={(e)=>e.preventDefault()}\r\n                                name=\"datePrepGiven\"\r\n                                id=\"datePrepGiven\"\r\n                                value={objValues.datePrepGiven}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                disabled={disabledField}\r\n                            />\r\n                                \r\n                            </FormGroup>\r\n                        </div>  */}\r\n                            {/* <div className=\" mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Duration</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"duration\"\r\n                                        id=\"duration\"\r\n                                        value={objValues.duration}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <div className=\" mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Months Of Refill</Label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"monthsOfRefill\"\r\n                                        id=\"monthsOfRefill\"\r\n                                        value={objValues.monthsOfRefill}\r\n                                        min={0}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {saving ? <Spinner/> : \"\"}\r\n                        <br/>\r\n\r\n                        {props.activeContent && props.activeContent.actionType ? (<>\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                hidden={disabledField}\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon/>}\r\n                                style={{backgroundColor: \"#014d88\"}}\r\n                                onClick={handleSubmit}\r\n                                disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{textTransform: \"capitalize\"}}>Update</span>\r\n                                ) : (\r\n                                    <span style={{textTransform: \"capitalize\"}}>Updating...</span>\r\n                                )}\r\n                            </MatButton>\r\n                        </>) : (<>\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon/>}\r\n                                style={{backgroundColor: \"#014d88\"}}\r\n                                onClick={handleSubmit}\r\n                                disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{textTransform: \"capitalize\"}}>Save</span>\r\n                                ) : (\r\n                                    <span style={{textTransform: \"capitalize\"}}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n                        </>)}\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [disabledField, setDisabledField] = useState(false);\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\",\r\n        dateSeroconverted:\"\",\r\n        reasonStopped:\"\",\r\n        reasonStoppedOthers:\"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n    const [reasonStooped, setReasonStooped] = useState([]);\r\n    const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n        PREP_STATUS_STOPPED_REASON();\r\n        GetPatientDTOObj();\r\n        CAUSE_DEATH();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientInterruption(props.activeContent.id)\r\n            setDisabledField(props.activeContent.actionType==='view'? true : false)\r\n        }\r\n    }, []);\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const GetPatientInterruption =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            //    setObjValues(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const CAUSE_DEATH =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCauseOfDeath(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //\r\n    const PREP_STATUS_STOPPED_REASON =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setReasonStooped(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_STOPPED'){\r\n            objValues.reasonStopped=\"\"\r\n            objValues.reasonStoppedOthers=\"\"\r\n            setObjValues ({...objValues,  ['reasonStopped']: \"\"});\r\n            setObjValues ({...objValues,  ['reasonStoppedOthers']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        } \r\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_DEAD'){\r\n            objValues.causeOfDeath=\"\"\r\n            objValues.sourceOfDeathInfo=\"\"\r\n            objValues.dateClientDied=\"\"\r\n            //objValues.dateClientDied\r\n            setObjValues ({...objValues,  ['causeOfDeath']: \"\"});\r\n            setObjValues ({...objValues,  ['sourceOfDeathInfo']: \"\"});\r\n            setObjValues ({...objValues,  ['dateClientDied']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_RESTART'){\r\n            objValues.dateRestartPlacedBackMedication=\"\"\r\n            setObjValues ({...objValues,  ['dateRestartPlacedBackMedication']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_TRANSFER_OUT'){\r\n            objValues.dateClientReferredOut=\"\"\r\n            objValues.facilityReferredTo=\"\"\r\n            setObjValues ({...objValues,  ['facilityReferredTo']: \"\"});\r\n            setObjValues ({...objValues,  ['dateClientReferredOut']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }\r\n        if(e.target.name==='interruptionType' && e.target.value!=='PREP_STATUS_SEROCONVERTED'){\r\n            objValues.linkToArt=\"\"\r\n            objValues.dateSeroconverted=\"\"\r\n            setObjValues ({...objValues,  ['dateSeroconverted']: \"\"});\r\n            setObjValues ({...objValues,  ['linkToArt']: \"\"});\r\n            setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        }     \r\n        //     \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues.interruptionDate)\r\n         //objValues.interruptionDate =  objValues.interruptionDate!==\"\" ? objValues.interruptionDate : objValues.dateSeroconverted\r\n         if(objValues.interruptionDate===\"\" && objValues.dateSeroconverted!==\"\"){\r\n            objValues.interruptionDate =  objValues.dateSeroconverted\r\n         }else if(objValues.interruptionDate===\"\" && objValues.dateRestartPlacedBackMedication!==\"\"){\r\n            objValues.interruptionDate =  objValues.dateRestartPlacedBackMedication\r\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientReferredOut!==\"\"){\r\n            objValues.interruptionDate =  objValues.dateClientReferredOut\r\n         }else if(objValues.interruptionDate===\"\" && objValues.dateClientDied!==\"\"){\r\n            objValues.interruptionDate =  objValues.dateClientDied\r\n         }else{\r\n            //objValues.interruptionDate = objValues.interruptionDate\r\n         }\r\n         if(validate()){\r\n          setSaving(true);\r\n          if(props.activeContent && props.activeContent.actionType===\"update\"){\r\n          axios.put(`${baseUrl}prep-interruption/${props.activeContent.id}`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.PatientObject();\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror){\r\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n            }else{\r\n                axios.post(`${baseUrl}prep/interruption`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                \r\n                ).then(response => {\r\n                        setSaving(false);\r\n                        toast.success(\"Record save successful\");\r\n                        props.PatientObject();\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror){\r\n                            toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n\r\n            }\r\n        }\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                        <option value=\"\">Select</option>\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Interruption <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                onKeyDown={(e)=>{\r\n                                    e.preventDefault()\r\n                                }}\r\n                                name=\"interruptionDate\"\r\n                                id=\"interruptionDate\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.interruptionDate}\r\n                                required\r\n                            />\r\n                            {errors.interruptionDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionDate}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                     {objValues.interruptionType==='PREP_STATUS_STOPPED' && (\r\n                        <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"reasonStopped\"\r\n                                id=\"reasonStopped\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.reasonStopped}\r\n                                \r\n                            >\r\n                                <option value=\"\">Select</option>\r\n                                {reasonStooped.map((value) => (\r\n                                    <option key={value.id} value={value.display}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.reasonStopped !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reasonStopped}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                        {objValues.reasonStopped ==='Others (Pls specify)' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"reasonStoppedOthers\"\r\n                                id=\"reasonStoppedOthers\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.reasonStoppedOthers}\r\n                                \r\n                            ></Input>\r\n                            {errors.reasonStoppedOther !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reasonStopped}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        </>\r\n                     )}\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            onKeyDown={(e)=>e.preventDefault()}\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            onKeyDown={(e)=>e.preventDefault()}\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select</option>\r\n                                {causeOfDeath.map((value) => (\r\n                                    <option key={value.id} value={value.display}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                        </Input>\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={(e)=>e.preventDefault()}\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                    <>\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            onKeyDown={(e)=>e.preventDefault()}\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div> \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    {objValues.linkToArt==='true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={(e)=>e.preventDefault()}\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                    )}\r\n                    </>)}\r\n                    \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, Checkbox, FormControl, FormControlLabel, FormLabel, } from \"@material-ui/core\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message, Select, Dropdown} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n\r\n    const handleKeyDown = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const clonedChildren = React.cloneElement(children, {\r\n        onKeydown: handleKeyDown,\r\n    });\r\n\r\n    return clonedChildren;\r\n};\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const patientID= props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\r\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [visitType, setVisitType] = useState([]);\r\n    const [reasonForDecline, setReasonForDecline] = useState([]);\r\n    const [populationType, setPopulationType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    let temp = { ...errors }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\",\r\n                visitType:\"\",\r\n                populationType: \"\",\r\n                pregnancyStatus: \"\",\r\n                score: 0\r\n            }\r\n    )\r\n    useEffect( async () => { \r\n        \r\n        CounselingType();\r\n        VisitType();\r\n        await ReasonForDecline();\r\n        PopulationType();\r\n        PregnancyStatus();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/${id}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                // console.log(response.data);\r\n               setObjValues(response.data);\r\n               setRiskAssessment(response.data.personalHivRiskAssessment)\r\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\r\n               setStiScreening(response.data.stiScreening)\r\n               setDrugHistory(response.data.drugUseHistory)\r\n               setAssessmentForPepIndication(response.data.assessmentForPepIndication)\r\n               setAssessmentForAcuteHivInfection(response.data.assessmentForAcuteHivInfection)\r\n               setServicesReceivedByClient(response.data.servicesReceivedByClient)\r\n               setAssessmentForPrepEligibility(response.data.assessmentForPrepEligibility)\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const VisitType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setVisitType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const ReasonForDecline = async ()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setReasonForDecline(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const PopulationType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPopulationType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n            hivTestResultAtvisit:\"\", //\r\n            lastTest:\"\"\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        if(drugHistory.hivTestedBefore===\"true\"){\r\n            drugHistory.lastTest=\"\"\r\n            setDrugHistory ({...drugHistory,  ['lastTest']: ''}); \r\n        } \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [assessmentForPepIndication, setAssessmentForPepIndication]= useState(\r\n        {\r\n            unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours:\"\",\r\n            sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForPepIndication = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setAssessmentForPepIndication ({...assessmentForPepIndication,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection]= useState(\r\n        {\r\n            acuteHivSymptomsLasttwoWeeks:\"\",\r\n            unprotectedAnalOrVaginalOrSharedNeedlesLast28Days:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForAcuteHivInfection = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setAssessmentForAcuteHivInfection ({...assessmentForAcuteHivInfection,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [assessmentForPrepEligibility, setAssessmentForPrepEligibility]= useState(\r\n        {\r\n            hivNegative:\"\",\r\n            hivRiskScore:\"\",\r\n            noIndicationForPep: \"\",\r\n            hasNoProteinuria: \"\",\r\n            noHistoryOrSignsOfLiverAbnormalitiesCabLa: \"\",\r\n            noHistoryOfDrugToDrugInteractionCabLa: \"\",\r\n            noHistoryOfDrugHypersensitivityCabLa: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForPrepEligibility = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        setAssessmentForPrepEligibility ({...assessmentForPrepEligibility,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [servicesReceivedByClient, setServicesReceivedByClient]= useState(\r\n        {\r\n            willingToCommencePrep:\"\",\r\n            reasonsForDecline:[],\r\n            otherReasonsForDecline: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeServicesReceivedByClient = (e, data) => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        \r\n        setServicesReceivedByClient ({...servicesReceivedByClient,  [e.target.name]: e.target.value});         \r\n    }\r\n\r\n    const handleInputReasonsForDecline = (e, data) => {\r\n        setServicesReceivedByClient({...servicesReceivedByClient, reasonsForDecline: data.value})\r\n    }\r\n\r\n    const [assessmentScore, setAssessmentScore] = useState(0);\r\n   \r\n\r\n    /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\r\n           temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\r\n           temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\r\n           \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            \r\n            if(validate()){\r\n                setSaving(true);\r\n            //objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n            objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection\r\n            objValues.assessmentForPepIndication = assessmentForPepIndication\r\n            objValues.assessmentForPrepEligibility = assessmentForPrepEligibility\r\n            objValues.servicesReceivedByClient = servicesReceivedByClient\r\n            objValues.score = getPrepEligibilityScore();\r\n                if(props.activeContent && props.activeContent.actionType===\"update\"){//Perform operation for updation action\r\n                    axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        props.PatientObject();\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror){\r\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        //props.setPatientObj(response.data)\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror){\r\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                            } else {\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        } else {\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }\r\n           \r\n            }else{\r\n                setSaving(false);\r\n                toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n            }   \r\n    }\r\n\r\n    const isFemale = () => {\r\n        return props.patientObj.gender.toLowerCase() === \"female\";\r\n    }\r\n    \r\n    const is30AndAbove = () => {\r\n        return Number(props.patientObj.age) >= 30;\r\n    }\r\n\r\n    const getIndicationForPepResult = () => {\r\n        if (assessmentForPepIndication !== null && assessmentForPepIndication !== undefined){\r\n            return Object.values(assessmentForPepIndication).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\r\n        }\r\n    }\r\n\r\n    const getAcuteHivResult = () => {\r\n        if (assessmentForAcuteHivInfection !== null && assessmentForAcuteHivInfection !== undefined){\r\n            return Object.values(assessmentForAcuteHivInfection).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\r\n        }\r\n    }\r\n\r\n    const getPrepEligibilityScore = () => {\r\n        var score = 0;\r\n        score += drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0\r\n        score += riskCount.length > 0 ? 1 : 0\r\n        score += getAcuteHivResult()\r\n        score += getIndicationForPepResult()\r\n        if (is30AndAbove() && isFemale() === false) {\r\n            score += assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0;\r\n        }\r\n        score += assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0;\r\n        score += assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0;\r\n        score += assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0;\r\n\r\n        if (is30AndAbove() && isFemale() === false) {\r\n            return score >= 8 ? 1 : 0;\r\n        } else {\r\n            return score >= 7 ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    onKeyDown={(e)=>e.preventDefault()}\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"visitType\"\r\n                                    id=\"visitType\"\r\n                                    value={objValues.visitType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {visitType.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.visitType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Population type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"populationType\"\r\n                                    id=\"populationType\"\r\n                                    value={objValues.populationType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {populationType.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.populationType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.populationType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {isFemale() && <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Pregnancy Status <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"pregnancyStatus\"\r\n                                    id=\"pregnancyStatus\"\r\n                                    value={objValues.pregnancyStatus}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.pregnancyStatus !==\"\" ? (\r\n                                <span className={classes.error}>{errors.pregnancyStatus}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartner\"\r\n                                    id=\"sexPartner\"\r\n                                    value={objValues.sexPartner}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartner !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartner}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {/* {props.patientDetail!==null && props.patientDetail.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )} */}\r\n                        {props.patientObj.gender==='Male' || props.patientObj.gender==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PEP Indication</div>        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>In the past 72 hours, have you had sex without a condom with someone whose HIV status is positive or not known to you?  </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        value={assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}\r\n                                        onChange={handleInputChangeAssessmentForPepIndication}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Have you shared injection equipment like needles with someone whose HIV status is positive or unknown to you? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        value={assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}\r\n                                        onChange={handleInputChangeAssessmentForPepIndication}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}}  >Assessment for Acute HIV Infection</div>        \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>In the past 2 weeks: Have you had a cold or flu such as fever, sore throat, abnormal sweats, swollen lymph nodes, mouth sores, headache or rash?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                                        id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                                        value={assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks}\r\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.acuteHivSymptomsLasttwoWeeks !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.acuteHivSymptomsLasttwoWeeks}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-6\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had condomless anal or vaginal sex or shared injection materials and/or equipment in the past 28 days?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                                        id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                                        value={assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            \r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>Do you use any of these drugs/substances ?</h4>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {drugHistory.hivTestedBefore===\"true\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last test?    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastTest\"\r\n                                        id=\"lastTest\"\r\n                                        value={drugHistory.lastTest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"1 Month\">{\"<\"}1 Month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6Months\">4-6 Months</option>\r\n                                        <option value=\"6Months\">{\">\"}6 months</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result at visit <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResultAtvisit\"\r\n                                        id=\"hivTestResultAtvisit\"\r\n                                        value={drugHistory.hivTestResultAtvisit}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Positive\">Positive</option>\r\n                                        <option value=\"Negative\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestResultAtvisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.analpain}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Assessment for PrEP Eligibilty</div>\r\n                            <div>\r\n                                <FormGroup>\r\n                                    <Label>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div>\r\n                                <FormGroup>\r\n                                    <Label>{`HIV Risk Score > 1: ${riskCount.length > 0 ? 1 : 0}`}</Label>\r\n                                </FormGroup>\r\n                            </div>\r\n                            {(is30AndAbove() && isFemale() === false) && <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`Has no proteinuria (>30 Years)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hasNoProteinuria\"\r\n                                        id=\"hasNoProteinuria\"\r\n                                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hasNoProteinuria !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hasNoProteinuria}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`No history / signs & symptoms of Liver abnormalities (CAB-LA)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                                        id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                                        id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.noHistoryOfDrugToDrugInteractionCabLa !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.noHistoryOfDrugToDrugInteractionCabLa}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                                        id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.noHistoryOfDrugHypersensitivityCabLa !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.noHistoryOfDrugHypersensitivityCabLa}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of PrEP Eligibility. If {\"<= \"}1 client is Eligible for PrEP.  (Score: Count Yes=1, No=0).</h4>\r\n                                {/* <b>Score :{stiCount.length}</b> */}\r\n                                <h5>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</h5>\r\n                                <h5>{`HIV risk score >=1 : ${riskCount.length > 0 ? 1 : 0}`}</h5>\r\n                                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult() }`}</h5>\r\n                                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                                {(is30AndAbove() && isFemale() === false) && <h5>{`Has no proteinuria: ${assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0}`}</h5>}\r\n\r\n                            </Message>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of PrEP Eligibility for CAB-LA regimen. If the following below =1 client is Eligible for CAB-LA. {`(Score: Count Yes=1, No=0)`}</h4>\r\n                                {/* <b>Score :{stiCount.length}</b> */}\r\n                                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0}`}</h5>\r\n                                <h5>{`No history of PrEP drug interaction (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0}`}</h5>\r\n                                <h5>{`No history of drug hypersensitivity (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0}`}</h5>\r\n\r\n                            </Message>\r\n                            <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Services Received by Client</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`Willing to commence PrEP`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"willingToCommencePrep\"\r\n                                        id=\"willingToCommencePrep\"\r\n                                        value={servicesReceivedByClient?.willingToCommencePrep}\r\n                                        onChange={handleInputChangeServicesReceivedByClient}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.willingToCommencePrep !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.willingToCommencePrep}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                                     \r\n                                        \r\n                                        {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n                            {servicesReceivedByClient?.willingToCommencePrep === 'false' && <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`Reasons for Declining PrEP`}</Label>\r\n                                    <Dropdown value={servicesReceivedByClient?.reasonsForDecline} placeholder='select reasons for decline' onChange={handleInputReasonsForDecline} fluid multiple selection options={reasonForDecline.map((each) => {\r\n                                            return {key: each.code, text:each.display, value:each.code}})} />\r\n                                    {errors.reasonsForDecline !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>}\r\n                            {(servicesReceivedByClient?.reasonsForDecline?.find((one)=> one === \"REASON_PREP_DECLINED_OTHERS_(SPECIFY)\") !== (null || undefined)) && <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"otherReasonsForDecline\"\r\n                                        id=\"otherReasonsForDecline\"\r\n                                        value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                                        onChange={handleInputChangeServicesReceivedByClient}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n\r\n                                    {errors.reasonsForDecline !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reasonsForDecline}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>}\r\n                         \r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            {props.activeContent && props.activeContent.actionType ===\"update\"? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>)}\r\n                           \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n  ///const patientObj = props.patientObj;\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: \"\",\r\n    dateReferred: \"\",\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: \"\",\r\n    riskType: \"\",\r\n    supporterName: \"\",\r\n    supporterPhone: \"\",\r\n    supporterRelationshipType: \"\",\r\n    uniqueId: \"\",\r\n    hivTestingPoint: \"\",\r\n    dateOfLastHivNegativeTest: \"\",\r\n    targetGroup: \"\",\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState(\"\");\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== \"\" &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === \"view\" ? true : false\r\n      );\r\n    }\r\n    //GetPatientPrepEnrollment\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data?.htsClientDtoList[0]?.targetGroup);\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data)\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = (id) => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data.find((x) => x.id === id));\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = (e) => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\";\r\n    temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\";\r\n    temp.riskType = objValues.riskType ? \"\" : \"This field is required\";\r\n    //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n    //temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n    //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n    temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x == \"\");\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      //console.log(\"prep\", objValues);\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = \"1\";\r\n            props.PatientObject();\r\n            toast.success(\"Prep Enrollment save successful!\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"recent-history\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((response) => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = \"1\";\r\n            toast.success(\"Prep Enrollment save successful!\", {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: \"recent-history\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setSaving(false);\r\n            toast.error(\"Something went wrong\");\r\n          });\r\n      }\r\n    } else {\r\n      toast.error(\"All fields are required \", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.uniqueId !== \"\" ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : \"\"\r\n                    }\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: \"red\" }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== \"\" ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{\" \"}\r\n                    <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : \"\"\r\n                    }\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== \"\" ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: \"1px solid #014D88\",\r\n                      borderRadius: \"0.2rem\",\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  {/* <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    /> */}\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: \"100%\",\r\n                      border: \"1px solid #014D88\",\r\n                    }}\r\n                    inputStyle={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                    country={\"ng\"}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: \"...-...-....\", at: \"(....) ...-....\" }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={(e) => {\r\n                      checkPhoneNumberBasic(e, \"supporterPhone\");\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== \"\" ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : \"\"}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === \"update\" ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: \"#014d88\" }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [patientDetail, setPatientDetail] = useState(\"\")\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObjLocation = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //let patientObj =\"\"\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n      PatientObject()\r\n     }, []);\r\n     async function PatientObject() {\r\n      axios\r\n          .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n            setPatientDetail(response.data);\r\n            //patientObj=response.data\r\n          })\r\n          .catch((error) => {    \r\n          });        \r\n    }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n            {/* start of patient card detail */}\r\n            <PatientCardDetail patientObj={patientDetail}  setActiveContent={setActiveContent} patientDetail={patientDetail}/> \r\n            {/* End of patient card detail */} \r\n            {/* This is the submenu components */}          \r\n            <SubMenu patientObj={patientObjLocation}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\r\n            <br/>\r\n            {/* This is the submenu routes */}\r\n            {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n            {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} patientDetail={patientDetail} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-visit' &&( <PrEPVisit PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)} \r\n            {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-dashboard\">\r\n            {/* This is the component to access patient dashboard */}\r\n            <PatientDetail />\r\n          </Route> \r\n          \r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            {/* This is the entry point to the application */}\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}