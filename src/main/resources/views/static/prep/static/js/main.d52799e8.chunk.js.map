{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","classes","ExpansionPanel","ExpansionPanelSummary","md","_Fragment","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","phoneNumber","address","Typography","activeContent","obj","newStatus","display","Divider","SubMenu","console","log","commencementCount","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","hivresultAtVisit","RecentHistory","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","class","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","Select","button","flexGrow","input","ClinicVisit","_props$recentActiviti","errors","setErrors","disabledField","setDisabledField","patientDto","setPatientDto","temp","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","populationType","setPopulationType","visitType","setVisitType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","testsOptions","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","objValues","setObjValues","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","extra","hepatitis","notedSideEffects","otherTestsDone","prepEnrollmentUuid","referred","regimenId","riskReductionServices","healthCareWorkerSignature","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","hivTestResult","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","localId","otherTestName","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_RISK_REDUCTION_PLAN","PREP_STATUS","HTS_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","TestGroup","PREP_URINALYSIS_RESULT","PREP_OTHER_TEST","HEPATITIS_SCREENING_RESULT","SYPHILIS_RESULT","PREGANACY_STATUS","PREP_ENTRY_POINT","PREP_TYPE","POPULATION_TYPE","VISIT_TYPE","FAMILY_PLANNING_METHOD","getPatientVisit","undefined","GetLatestFromEligibility","checkEligibleForCabLaFromLatestEligibility","labTests","x2","push","label","labTestName","testGroupId","testGroupName","groupName","sampleType","checkEligibleForCABLA","currentDate","regimenList","isEligibleForCABLA","reg","filter","each","code","pTypes","_response$data","JSON","parse","stringify","PrepRegimen","prepRiskReductionPlan","setPrepRiskReductionPlan","_populationType$find","_visitType$find","_pregnant$find","pregnancyStatus","autoPopulatePopulationType","find","_response$data7","latestEligibility","sort","a","b","visitDate","isBefore","length","assessmentForPrepEligibility","keysToCheck","autoPopulate","handleInputChange","durationInDays","Number","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","isFemale","Object","values","every","handleSubmit","preventDefault","uuid","put","POSITION","BOTTOM_CENTER","activeTab","post","toLowerCase","date1","date2","_response$data2","_response$data3","_response$data4","_response$data4$","_response$data5","_response$data5$","Grid","Column","Segment","ribbon","FormGroup","FormLabelName","Input","onKeyDown","min","dateEnrolled","max","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","plan","for","codeSet","lastRegimenId","_objValues$otherTests","eachTest","handleRemoveTest","prev","test","TiTrash","component","MatButton","AddIcon","handleCreateNewTest","placeholder","SaveIcon","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setSisabledField","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","liverFunctionTestResults","dateLiverFunctionTestResults","urinalysisTestResult","setUrinalysisTestResult","liverFunctionTestResult","setLiverFunctionTestResult","LiverFunctionTestResult","HistoryOfDrugToDrugInteraction","GetPatientCommercement","PatientObject","CardBody","bodyWeight","breastFeeding","Spinner","demo","background","default","inline","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonStooped","setReasonStooped","setCauseOfDeath","PREP_STATUS_STOPPED_REASON","CAUSE_DEATH","GetPatientInterruption","linkToArt","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","BasicInfo","_servicesReceivedByCl","patientDetail","personResponseDto","counselingType","setCounselingType","reasonForDecline","setReasonForDecline","setPregnancyStatus","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","score","CounselingType","VisitType","ReasonForDecline","PopulationType","PregnancyStatus","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","setAssessmentForPepIndication","assessmentForPepIndication","setAssessmentForAcuteHivInfection","assessmentForAcuteHivInfection","setServicesReceivedByClient","servicesReceivedByClient","setAssessmentForPrepEligibility","riskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","handleInputChangeRiskAssessment","riskCount","riskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","drugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","handleInputChangeDrugHistory","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","handleInputChangeAssessmentForPepIndication","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","handleInputChangeAssessmentForAcuteHivInfection","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","handleInputChangeAssessmentForPrepEligibility","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","handleInputChangeServicesReceivedByClient","assessmentScore","setAssessmentScore","_props$patientObj","_props$patientObj2","getPrepEligibilityScore","is30AndAbove","getIndicationForPepResult","getAcuteHivResult","dateHivPositive","dateOfRegistration","pType","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","sex","flex","handleInputReasonsForDecline","fluid","multiple","selection","one","PrEPVisit","useHistory","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","person","hivEnrollment","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.d52799e8.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzI4NzQzODcxfQ.TdR0_Bk5Qqr9fzd4ntQf4R1aTzIDcKD2Jnl3xstvLC0lhLDc87uByrkSfV7mgQF-BB-9KKX1Y2TOuQ31cBuwIg'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.((row) => ({\r\n                    name: row.firstName + \" \" + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : \"\",\r\n                    age: row.age,\r\n\r\n                    status: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList';\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n      </ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"prep-patient\" title=\"PrEP Patients\">                   \r\n                    <PrepPatients />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\n//import ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n//import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\n//import { Button } from 'semantic-ui-react';\r\nimport { Label, } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n//import axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientObj = props.patientObj ? props.patientObj : {}\r\n  //const [patientObj, setpatientObj] = useState(props.patientObj)\r\n  const patientObj = props?.patientObj;\r\n  //console.log(\"inn\",props.patientObj)\r\n\r\n  // useEffect(() => {\r\n  //   setpatientObj(props.patientDetail);\r\n  // }, [props.patientDetail]);\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getHospitalNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(obj => obj.type === 'HospitalNumber');\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(obj => obj?.type === 'phone');\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = (identifier) => {\r\n    console.log('identifier: ', identifier)\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress = Array.isArray(address?.line) && (address?.line[0] != null) ? address?.line[0] : \"\"\r\n    const landMark = address && address?.city && address?.city !== null ? address?.city : \"\"\r\n    return address ? houseAddress + \" \" + landMark : '';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel >\r\n        <ExpansionPanelSummary >\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (<>\r\n                <Row className={\"mt-1\"}>\r\n                  <Col md={12} className={classes?.root2}>\r\n                    <b style={{ fontSize: \"25px\", color: 'rgb(153, 46, 98)' }}>\r\n                      {patientObj?.firstName + \" \" + patientObj?.surname}\r\n                    </b>\r\n                    <Link to={\"/\"} >\r\n                      <ButtonMui\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\" float-end ms-2 mr-2 mt-2\"\r\n                        //startIcon={<FaUserPlus size=\"10\"/>}\r\n                        startIcon={<TiArrowBack />}\r\n                        style={{ backgroundColor: \"rgb(153, 46, 98)\", color: '#fff', height: '35px' }}\r\n\r\n                      >\r\n                        <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                      </ButtonMui>\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Patient ID : <b style={{ color: '#0B72AA' }}>{patientObj?.hospitalNumber}</b>\r\n                    </span>\r\n                  </Col>\r\n\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      Date Of Birth : <b style={{ color: '#0B72AA' }}>{patientObj?.dateOfBirth}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Age : <b style={{ color: '#0B72AA' }}>{calculate_age(moment(patientObj?.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Gender :{\" \"}\r\n                      <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Phone Number : <b style={{ color: '#0B72AA' }}>{patientObj?.phoneNumber}</b>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                      {\" \"}\r\n                      Address : <b style={{ color: '#0B72AA' }}>{patientObj?.address} </b>\r\n                    </span>\r\n                  </Col>\r\n                  {patientObj?.prepStatus !== null && (\r\n                    <Col md={12}>\r\n                      <div >\r\n                        <Typography variant=\"caption\">\r\n                          <Label color={\"teal\"} size={\"mini\"}>\r\n                            STATUS : {props.activeContent?.obj?.newStatus?.display || patientObj?.prepStatus}\r\n                          </Label>\r\n                        </Typography>\r\n                      </div>\r\n                    </Col>\r\n                  )}\r\n                </Row>\r\n              </>)\r\n                : (\r\n                  <>\r\n                    <p>Loading please wait..</p>\r\n                  </>\r\n                )\r\n              }\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    console.log('count: ', patientObj.commencementCount);\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n\r\n            {patientObj.eligibilityCount <= 0 ||\r\n            patientObj.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj.prepCount === '0' ||\r\n                patientObj.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj.prepCount === '0' &&\r\n                      patientObj.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj.commencementCount === null ||\r\n                      patientObj.commencementCount <= 0) &&\r\n                      patientObj.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj.prepCount === null ||\r\n                      patientObj.prepCount < 0) &&\r\n                      patientObj.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj.commencementCount === null ||\r\n                      patientObj.commencementCount <= 0) &&\r\n                      patientObj.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj.hivresultAtVisit === 'Negative' ||\r\n              patientObj.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj.hivresultAtVisit === 'Negative' ||\r\n              patientObj.hivresultAtVisit === null) &&\r\n              patientObj.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj.hivresultAtVisit === 'Negative' ||\r\n              patientObj.hivresultAtVisit === null) &&\r\n              (patientObj.commencementCount === null ||\r\n                patientObj.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj.hivresultAtVisit === 'Negative' ||\r\n              patientObj.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj.hivresultAtVisit === 'Negative' ||\r\n              patientObj.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  //console.log(props.patientObj)\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props.patientObj.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        console.log('sumry: ', response.data[0]);\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data.activities &&\r\n                                data.activities.map((activity, index) => (\r\n                                  <>\r\n                                    <li key={activity + index}>\r\n                                      <div className=\"timeline-panel\">\r\n                                        <div\r\n                                          className={\r\n                                            i % 2 == 0\r\n                                              ? 'media me-2 media-info'\r\n                                              : 'media me-2 media-success'\r\n                                          }\r\n                                        >\r\n                                          {ActivityName(data.name)}\r\n                                        </div>\r\n                                        <div className=\"media-body\">\r\n                                          <h5 className=\"mb-1\">\r\n                                            {activity.name}\r\n                                          </h5>\r\n                                          <small className=\"d-block\">\r\n                                            {activity.date}\r\n                                          </small>\r\n                                        </div>\r\n                                        <Dropdown className=\"dropdown\">\r\n                                          <Dropdown.Toggle\r\n                                            variant=\" light\"\r\n                                            className=\"i-false p-0 btn-info sharp\"\r\n                                          >\r\n                                            <svg\r\n                                              width=\"18px\"\r\n                                              height=\"18px\"\r\n                                              viewBox=\"0 0 24 24\"\r\n                                              version=\"1.1\"\r\n                                            >\r\n                                              <g\r\n                                                stroke=\"none\"\r\n                                                strokeWidth=\"1\"\r\n                                                fill=\"none\"\r\n                                                fillRule=\"evenodd\"\r\n                                              >\r\n                                                <rect\r\n                                                  x=\"0\"\r\n                                                  y=\"0\"\r\n                                                  width=\"24\"\r\n                                                  height=\"24\"\r\n                                                />\r\n                                                <circle\r\n                                                  fill=\"#000000\"\r\n                                                  cx=\"5\"\r\n                                                  cy=\"12\"\r\n                                                  r=\"2\"\r\n                                                />\r\n                                                <circle\r\n                                                  fill=\"#000000\"\r\n                                                  cx=\"12\"\r\n                                                  cy=\"12\"\r\n                                                  r=\"2\"\r\n                                                />\r\n                                                <circle\r\n                                                  fill=\"#000000\"\r\n                                                  cx=\"19\"\r\n                                                  cy=\"12\"\r\n                                                  r=\"2\"\r\n                                                />\r\n                                              </g>\r\n                                            </svg>\r\n                                          </Dropdown.Toggle>\r\n                                          <Dropdown.Menu className=\"dropdown-menu\">\r\n                                            <Dropdown.Item\r\n                                              className=\"dropdown-item\"\r\n                                              onClick={() =>\r\n                                                LoadViewPage(activity, 'view')\r\n                                              }\r\n                                            >\r\n                                              View\r\n                                            </Dropdown.Item>\r\n\r\n                                            <Dropdown.Item\r\n                                              className=\"dropdown-item\"\r\n                                              onClick={() =>\r\n                                                LoadViewPage(activity, 'update')\r\n                                              }\r\n                                            >\r\n                                              Update\r\n                                            </Dropdown.Item>\r\n\r\n                                            <Dropdown.Item\r\n                                              className=\"dropdown-item\"\r\n                                              to=\"/widget-basic\"\r\n                                              onClick={() =>\r\n                                                LoadModal(activity)\r\n                                              }\r\n                                            >\r\n                                              Delete\r\n                                            </Dropdown.Item>\r\n                                          </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                      </div>\r\n                                    </li>\r\n                                  </>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 class=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label, List, Card } from 'semantic-ui-react';\r\n// Page titie\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Select from 'react-select';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\n\r\nimport { formValues } from 'redux-form';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  // const [selectedPregnant, setSelectedPregnant] = useState(\"\");\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  // const [selectedVisitType, setSelectedVisitType] = useState(\"\");\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  let testsOptions = [];\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   handleInputChange({\r\n  //     target: { name: \"hivTestResult\", value: hivTestValue },\r\n  //   });\r\n  //   handleInputChange({\r\n  //     target: { name: \"hivTestResultDate\", value: hivTestResultDate },\r\n  //   });\r\n  // }, [hivTestValue]);\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    notedSideEffects: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId, //should person id be from patientObj?\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    urinalysisResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    duration: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([\r\n    {\r\n      localId: 0,\r\n      otherTest: 'Yes',\r\n      testDate: '',\r\n      result: '',\r\n      name: '',\r\n      otherTestName: '',\r\n    },\r\n  ]);\r\n  useEffect(async () => {\r\n    // Check if the fields exist in objValues first\r\n    if (\r\n      objValues.urinalysis.testDate &&\r\n      objValues.urinalysis.result &&\r\n      objValues.urinalysis.urinalysisTest\r\n    ) {\r\n      setUrinalysisTest({\r\n        ...urinalysisTest,\r\n        testDate: objValues.urinalysis.testDate,\r\n        result: objValues.urinalysis.result,\r\n        urinalysisTest: objValues.urinalysis.urinalysisTest,\r\n      });\r\n    }\r\n    if (\r\n      objValues.syphilis.testDate &&\r\n      objValues.syphilis.result &&\r\n      objValues.syphilis.syphilisTest\r\n    ) {\r\n      setSyphilisTest({\r\n        ...syphilisTest,\r\n        testDate: objValues.syphilis.testDate,\r\n        result: objValues.syphilis.result,\r\n        syphilisTest: objValues.syphilis.syphilisTest,\r\n        others: objValues.syphilis.others,\r\n      });\r\n    }\r\n    if (\r\n      objValues.hepatitis.testDate &&\r\n      objValues.hepatitis.result &&\r\n      objValues.hepatitis.hepatitisTest\r\n    ) {\r\n      setHepatitisTest({\r\n        ...hepatitisTest,\r\n        testDate: objValues.hepatitis.testDate,\r\n        result: objValues.hepatitis.result,\r\n        hepatitisTest: objValues.hepatitis.hepatitisTest,\r\n      });\r\n    }\r\n  }, [objValues]);\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    PREP_RISK_REDUCTION_PLAN();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    // LAST_HIV_TEST_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    // PrepRegimen(objValues.encounterDate);\r\n    TestGroup();\r\n    PREP_URINALYSIS_RESULT();\r\n    PREP_OTHER_TEST();\r\n    HEPATITIS_SCREENING_RESULT();\r\n    SYPHILIS_RESULT();\r\n    PREGANACY_STATUS();\r\n    PREP_ENTRY_POINT();\r\n    PREP_TYPE();\r\n    POPULATION_TYPE();\r\n    VISIT_TYPE();\r\n    FAMILY_PLANNING_METHOD();\r\n    getPatientVisit(props.activeContent.id);\r\n\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n    GetLatestFromEligibility();\r\n    console.log(\r\n      'checkEligibleForCabLaFromLatestEligibility: ',\r\n      checkEligibleForCabLaFromLatestEligibility()\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  const PREGANACY_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_ENTRY_POINT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  //Get list of Test Group\r\n  const TestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response.data.map(x => {\r\n          x.labTests.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const checkEligibleForCABLA = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          if (response?.data || !response?.data) {\r\n            let isEligibleForCABLA = response?.data;\r\n            console.log(\r\n              'isEligibleForCABLA before latestEligibility : ',\r\n              isEligibleForCABLA\r\n            );\r\n\r\n            if (!checkEligibleForCabLaFromLatestEligibility()) {\r\n              isEligibleForCABLA = false;\r\n            }\r\n            console.log('isEligibleForCABLA after: ', isEligibleForCABLA);\r\n            if (\r\n              isEligibleForCABLA ||\r\n              objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n            ) {\r\n              setPrepType(prepType);\r\n              setprepRegimen(regimenList);\r\n            } else {\r\n              let reg = regimenList.filter((each, index) => {\r\n                return each.code !== 'CAB-LA(600mg/3mL)';\r\n              });\r\n              let pTypes = prepType.filter((each, index) => {\r\n                return each.code !== 'PREP_TYPE_INJECTIBLES';\r\n              });\r\n              setPrepType(pTypes);\r\n              setprepRegimen(reg);\r\n            }\r\n            return response?.data;\r\n          }\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        console.log('resp: ', data.regimen);\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHIVresult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            'No HTS record found. Atleast, 1 test result is required to proceed.'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('HTS record found. You may proceed.');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        //setPrepStatus(response.data);\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        let isEligibleForCABLA = checkEligibleForCABLA(\r\n          currentDate,\r\n          response.data\r\n        );\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const PREP_RISK_REDUCTION_PLAN = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        console.log('prep codeset: ', response.data);\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PREP_SIDE_EFFECTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const HTS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const LAST_HIV_TEST_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${objValues.personId}/current-hts`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        var lastHivTest = response?.data?.hivTestResult;\r\n        // console.log('last res; ', response.data.hivTestResult)\r\n        if (!lastHivTest) {\r\n          setHivTestValue(response.data.hivTestResult);\r\n          setHivTestResultDate(response.data.test1.date);\r\n          objValues.hivTestResultDate = response.data.hivTestResult;\r\n          objValues.hivTestResultDate = response.data.test1.date;\r\n        } else {\r\n          setHivTestValue('NOT DONE');\r\n        }\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility !== null) {\r\n      setObjValues({\r\n        ...objValues,\r\n        populationType:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.populationType\r\n            : '',\r\n        visitType:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.visitType\r\n            : '',\r\n        pregnant:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.pregnancyStatus\r\n            : '',\r\n      });\r\n      // await POPULATION_TYPE();\r\n      const autoPopulatePopulationType = populationType?.find(\r\n        type => type?.code === latestFromEligibility?.populationType\r\n      )?.display;\r\n      const autoPopulateVisitType = visitType.find(\r\n        type => type?.code === latestFromEligibility?.visitType\r\n      )?.display;\r\n      const autoPopulatePregnant = pregnant?.find(\r\n        type => type?.code === latestFromEligibility?.pregnancyStatus\r\n      )?.display;\r\n      setSelectedPopulationType(autoPopulatePopulationType);\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  const GetLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = response?.data?.sort((a, b) =>\r\n          moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n        )[response.data.length - 1];\r\n        console.log(\r\n          'CabLa Eligibility Assesment: ',\r\n          latestEligibility?.assessmentForPrepEligibility\r\n        );\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  function checkEligibleForCabLaFromLatestEligibility(\r\n    assessmentForPrepEligibility\r\n  ) {\r\n    const keysToCheck = [\r\n      'noHistoryOfDrugHypersensitivityCabLa',\r\n      'noHistoryOfDrugToDrugInteractionCabLa',\r\n      'noHistoryOrSignsOfLiverAbnormalitiesCabLa',\r\n    ];\r\n\r\n    for (let key of keysToCheck) {\r\n      if (assessmentForPrepEligibility?.[key] === 'Yes') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n  const POPULATION_TYPE = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const VISIT_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const WHY_POOR_FAIR_ADHERENCE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const SYNDROMIC_STI_SCREENING = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //PREP_URINALYSIS_RESULT\r\n  const PREP_URINALYSIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //PREP_OTHER_TEST\r\n  const PREP_OTHER_TEST = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //SYPHILIS_RESULT\r\n  const SYPHILIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //HEPATITIS_SCREENING_RESULT\r\n  const HEPATITIS_SCREENING_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  // FAMILY_PLANNING_METHOD\r\n  const FAMILY_PLANNING_METHOD = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      // if the encounterDate is the same as the commencement date, the prep regimen id should be automatically populated from the commencement\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    //find the test with the localId\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n\r\n    console.log('index found: ', index, e.target.name);\r\n    console.log('index found: ', index, e.target.value);\r\n    temp[index][e.target.name] = e.target.value;\r\n    console.log('otherTest: ', temp);\r\n    setOtherTest(temp);\r\n    // if (\r\n    //   e.target.name === \"name\" &&\r\n    //   e.target.value !== \"PREP_OTHER_TEST_OTHER_(SPECIFY)\"\r\n    // ) {\r\n    //   temp[index].otherTestName = \"\";\r\n    //   temp[index][e.target.name] = e.target.value;\r\n    //   setOtherTest(temp);\r\n    // } else {\r\n    //   temp[index][e.target.name] = e.target.value;\r\n    //   setOtherTest(temp);\r\n    // }\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    //Others\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'Yes' });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, ['hepatitisTest']: 'Yes' });\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      // setOtherTest({...otherTest, [\"otherTest\"]: \"No\"})\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n  const otherTestInputRef = useRef();\r\n\r\n  const loadOtherTestOptions = () => {\r\n    setErrors({ ...errors, [otherTestInputRef.current.name]: '' });\r\n    if (otherTestInputRef.current.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      // setOtherTest({...otherTest, [\"otherTest\"]: \"No\"})\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, ['urinalysisTest']: 'Yes' });\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, ['urinalysisTest']: 'No' });\r\n    }\r\n  };\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        'Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        'Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = 'Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        'Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        'Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue ? '' : 'Atleast, 1 HIV test result is required';\r\n    temp.otherTestsDone = otherTest.length\r\n      ? ''\r\n      : 'You must submit atleast, a test result.';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : 'This field is required';\r\n\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : 'This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : 'This field is required';\r\n    // temp.adherenceLevel = (objValues.adherenceLevel || countPrepEligibility(recentActivities) <= 2)\r\n    //   ? \"\"\r\n    //   : \"This field is required\";\r\n\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.urinalysisTest = urinalysisTest.urinalysisTest\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.testDate = urinalysisTest.testDate ? '' : 'This field is required';\r\n    temp.result = urinalysisTest.result ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.duration = objValues.duration ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.visitType = objValues.visitType ? '' : 'This field is required';\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //objValues.visitDate = vital.encounterDate\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            toast.success('Clinic visit update successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/clinic-visit`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            emptyObjValues();\r\n            toast.success('Clinic Visit save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCABLA(objValues.encounterDate, response.data);\r\n\r\n          // setprepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n  function isValidDate(date) {\r\n    return date instanceof Date && !isNaN(date);\r\n  }\r\n  function areDatesSame(date1, date2) {\r\n    // if (!isValidDate(date1) || !isValidDate(date2)) return alert('Invalid eligibility or visit date.')\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet.filter(regimen => {\r\n      return regimen.id !== lastRegimenId;\r\n    });\r\n  const handleOtherTestsDone = e => {\r\n    setOtherTestResult(prev =>\r\n      prev?.filter(eachTest => eachTest?.name !== e.target.value)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHIVresult();\r\n  }, []);\r\n  const handleOtherTestDoneChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    // Handle normal inputs\r\n    if (name !== 'otherTestsDone') {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      // Handle changes for the otherTestsDone array\r\n      const { localId, field } = e.target.dataset; // Assuming you're using data attributes to pass localId and the field being edited\r\n      console.log('found dataset: ', e.target.dataset);\r\n      const updatedTests = [...objValues.otherTestsDone];\r\n\r\n      // Find the index of the test being updated\r\n      const index = updatedTests.findIndex(\r\n        test => test.localId === Number(localId)\r\n      );\r\n\r\n      console.log('found index: ', index);\r\n\r\n      if (index !== -1) {\r\n        updatedTests[index] = {\r\n          ...updatedTests[index],\r\n          [field]: value,\r\n        };\r\n      }\r\n\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherTestsDone: updatedTests,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const prepRegimenUpdateView = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled={disabledField}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"mb-3 col-md-12\"></div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"notedSideEffects\"\r\n                    id=\"notedSideEffects\"\r\n                    value={objValues.notedSideEffects}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepSideEffect.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Level of Adherence\r\n                    {/* {countPrepEligibility(recentActivities) < 2 && <span style={{ color: \"red\" }}> *</span>} */}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    // disabled\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select Prep Type</option>\r\n                    {prepType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        ).map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                    <FormLabelName>Duration <span style={{color: \"red\"}}> *</span></FormLabelName>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        name=\"duration\"\r\n                                        id=\"duration\"\r\n                                        value={objValues.duration}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius: \"0.25rem\"}}\r\n\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.duration !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.duration}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div> */}\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (Day[s])`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepGiven !==\"\" ? (\r\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>  */}\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={\r\n                      urinalysisTest.urinalysisTest == 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Date{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest.testDate}\r\n                        // defaultValue={objValues.urinalysis?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.testDate !== '' ? (\r\n                        <span className={classes.error}>{errors.testDate}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={\r\n                      hepatitisTest.hepatitisTest === 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest.syphilisTest === 'Yes' ? true : false}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />\r\n                  Other Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {/* {otherTest.otherTest === 'Yes' && (<> */}\r\n              {otherTest.length > 0 &&\r\n                otherTest.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>Next Appointment Date</FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature</FormLabelName>\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n    </div>\r\n  );\r\n};\r\n/**\r\n * export const url =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:8383/api/v1/\"\r\n    : \"/api/v1/\";\r\nexport const token =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzI3ODM2NTkyfQ.M2dIDnvPm-FTXYDh3-kzohZlfWawLMQvIgdfJLbByhAxqaeaa4T8mdiMa27YLcTd7Tb2jwOs36_13jeKfmq9CA\"\r\n    : new URLSearchParams(window.location.search).get(\"jwt\");\r\n\r\n */\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: null,\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: '',\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PREGANACY_STATUS();\r\n    GetPatientDTOObj();\r\n    PrepRegimen();\r\n    PREP_ENTRY_POINT();\r\n    PREP_TYPE();\r\n    LiverFunctionTestResult();\r\n    HistoryOfDrugToDrugInteraction();\r\n    PREP_URINALYSIS_RESULT();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientCommercement(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const PrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_ENTRY_POINT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n        // console.log(\"prep\", prepEntryPoint)\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_URINALYSIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_TYPE = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const LiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const HistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientCommercement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREGANACY_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        //Perform operation for updation action\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  // console.log(props.patientObj.gender)\r\n\r\n  const handlePrepTypeChange = e => {\r\n    // check the prep type. if it is ed prep or others, fetch all prep types instead\r\n\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2> PrEP Commencement </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Date of Initial Adherence Counseling{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateInitialAdherenceCounseling\"\r\n                    id=\"dateInitialAdherenceCounseling\"\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    value={objValues.dateInitialAdherenceCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateInitialAdherenceCounseling !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateInitialAdherenceCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date PrEP started <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datePrepStart\"\r\n                    id=\"datePrepStart\"\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    value={objValues.datePrepStart}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepStart !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.datePrepStart}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Body Weight <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"weight\"\r\n                      id=\"weight\"\r\n                      onChange={handleInputChange}\r\n                      min=\"3\"\r\n                      max=\"150\"\r\n                      value={objValues.weight}\r\n                      onKeyUp={handleInputValueCheckBodyWeight}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                        borderTopRightRadius: '0',\r\n                        borderBottomRightRadius: '0',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                        borderTopRightRadius: '0.25rem',\r\n                        borderBottomRightRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      kg\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.bodyWeight !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {vitalClinicalSupport.bodyWeight}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {errors.weight !== '' ? (\r\n                    <span className={classes.error}>{errors.weight}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Height <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                        borderTopLeftRadius: '0.25rem',\r\n                        borderBottomLeftRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      cm\r\n                    </InputGroupText>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"height\"\r\n                      id=\"height\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.height}\r\n                      min=\"48.26\"\r\n                      max=\"216.408\"\r\n                      disabled={disabledField}\r\n                      onKeyUp={handleInputValueCheckHeight}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    />\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#992E62',\r\n                        color: '#fff',\r\n                        border: '1px solid #992E62',\r\n                        borderRadius: '0rem',\r\n                        borderTopRightRadius: '0.25rem',\r\n                        borderBottomRightRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      {objValues.height !== ''\r\n                        ? (objValues.height / 100).toFixed(2) + 'm'\r\n                        : 'm'}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.height !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {vitalClinicalSupport.height}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {errors.height !== '' ? (\r\n                    <span className={classes.error}>{errors.height}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                {objValues.weight !== '' && objValues.height !== '' && (\r\n                  <FormGroup>\r\n                    <Label> </Label>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        BMI :{' '}\r\n                        {(\r\n                          objValues.weight /\r\n                          ((objValues.height / 100) * (objValues.height / 100))\r\n                        ).toFixed(2)}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                )}\r\n              </div>\r\n              {(props.patientObj.gender === 'Female' ||\r\n                props.patientObj.gender === 'female' ||\r\n                props.patientObj.gender === 'FEMALE') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Pregnancy Status</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"pregnant\"\r\n                      id=\"pregnant\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.pregnant}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      <option value=\"\"></option>\r\n                      {pregnant.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Breast Feeding</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"breastFeeding\"\r\n                      id=\"breastFeeding\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.breastFeeding}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\"> Yes</option>\r\n                      <option value=\"No\"> No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">History of drug Allergies</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"drugAllergies\"\r\n                    id=\"drugAllergies\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.drugAllergies}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"urinalysisResult\">Urinalysis Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"urinalysisResult\"\r\n                    id=\"urinalysisResult\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.urinalysisResult}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {urinalysisTestResult.map(value => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"historyOfDrugToDrugInteraction\">\r\n                    History of PrEP drug interactions\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"historyOfDrugToDrugInteraction\"\r\n                    id=\"historyOfDrugToDrugInteraction\"\r\n                    value={objValues.historyOfDrugToDrugInteraction}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    {historyOfDrugToDrugInteraction.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.historyOfDrugToDrugInteraction !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.historyOfDrugToDrugInteraction}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"liverFunctionTestResults\">\r\n                    Liver Function Tests Result\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"liverFunctionTestResults\"\r\n                    id=\"liverFunctionTestResults\"\r\n                    value={objValues.liverFunctionTestResults}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select Result</option>\r\n                    {liverFunctionTestResult.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.liverFunctionTestResults !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.liverFunctionTestResults}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"dateLiverFunctionTestResults\">\r\n                    Date of Liver Function Tests Result{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateLiverFunctionTestResults\"\r\n                    id=\"dateLiverFunctionTestResults\"\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    value={objValues.dateLiverFunctionTestResults}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateLiverFunctionTestResults !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateLiverFunctionTestResults}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Referred <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referred\"\r\n                    id=\"referred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.referred}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\"> Yes</option>\r\n                    <option value=\"false\"> No</option>\r\n                  </Input>\r\n                  {errors.referred !== '' ? (\r\n                    <span className={classes.error}>{errors.referred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.referred === 'true' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"datereferred\">Date referred</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"datereferred\"\r\n                      id=\"datereferred\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.datereferred}\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.datereferred !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.datereferred}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"prepType\">\r\n                    Prep Type At Start <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    // disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select Prep Type</option>\r\n                    {prepType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"regimenId\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRegimen.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.regimen}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint.map(value => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>{`Duration of Refill (Day[s])`}</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            {props.activeContent && props.activeContent.actionType ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: '#014d88' }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: '#014d88' }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n// import { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    //maxWidth: 752,\r\n    //flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientInterruption(props.activeContent.id);\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //    setObjValues(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_STOPPED'\r\n    ) {\r\n      objValues.reasonStopped = '';\r\n      objValues.reasonStoppedOthers = '';\r\n      setObjValues({ ...objValues, ['reasonStopped']: '' });\r\n      setObjValues({ ...objValues, ['reasonStoppedOthers']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_DEAD'\r\n    ) {\r\n      objValues.causeOfDeath = '';\r\n      objValues.sourceOfDeathInfo = '';\r\n      objValues.dateClientDied = '';\r\n      //objValues.dateClientDied\r\n      setObjValues({ ...objValues, ['causeOfDeath']: '' });\r\n      setObjValues({ ...objValues, ['sourceOfDeathInfo']: '' });\r\n      setObjValues({ ...objValues, ['dateClientDied']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_RESTART'\r\n    ) {\r\n      objValues.dateRestartPlacedBackMedication = '';\r\n      setObjValues({ ...objValues, ['dateRestartPlacedBackMedication']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_TRANSFER_OUT'\r\n    ) {\r\n      objValues.dateClientReferredOut = '';\r\n      objValues.facilityReferredTo = '';\r\n      setObjValues({ ...objValues, ['facilityReferredTo']: '' });\r\n      setObjValues({ ...objValues, ['dateClientReferredOut']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_SEROCONVERTED'\r\n    ) {\r\n      objValues.linkToArt = '';\r\n      objValues.dateSeroconverted = '';\r\n      setObjValues({ ...objValues, ['dateSeroconverted']: '' });\r\n      setObjValues({ ...objValues, ['linkToArt']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    //\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    //temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n    temp.interruptionType = objValues.interruptionType\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    console.log(allPrepInterruptions, interruptionOption);\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    } else {\r\n      //objValues.interruptionDate = objValues.interruptionDate\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('Record save successful');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            console.log('response: ', response?.data);\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('Record save successful');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2> PrEP Discontinuations & Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientReferredOut}\r\n                        required\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client died </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientDied}\r\n                        required\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateSeroconverted}\r\n                        required\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          //min=\"1983-12-31\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n              style={{ backgroundColor: '#992E62' }}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from \"reactstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Checkbox, FormControl, FormControlLabel, FormLabel, } from \"@material-ui/core\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Label as LabelRibbon, Button, Message, Select, Dropdown } from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport \"../../index.css\"\r\nimport { color } from \"highcharts\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\": {\r\n            color: '#fff',\r\n            fontWeight: 'bold'\r\n        },\r\n        \"& .form-control\": {\r\n            borderRadius: '0.25rem',\r\n            height: '41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\": {\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\": {\r\n            color: 'red'\r\n        },\r\n        \"& label\": {\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            fontWeight: 'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error: {\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n\r\n    const handleKeyDown = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    const clonedChildren = React.cloneElement(children, {\r\n        onKeydown: handleKeyDown,\r\n    });\r\n\r\n    return clonedChildren;\r\n};\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const patientID = props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\r\n    console.log('patient ID OBS: ',props)\r\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    const [visitType, setVisitType] = useState([]);\r\n    const [reasonForDecline, setReasonForDecline] = useState([]);\r\n    const [populationType, setPopulationType] = useState([]);\r\n    const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n    let temp = { ...errors }\r\n\r\n    const [objValues, setObjValues] = useState(\r\n        {\r\n            counselingType: \"\",\r\n            drugUseHistory: {},\r\n            extra: {},\r\n            firstTimeVisit: true,\r\n            hivRisk: {},\r\n            numChildrenLessThanFive: \"\",\r\n            numWives: \"\",\r\n            personId: \"\",\r\n            personalHivRiskAssessment: {},\r\n            sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n            sexPartnerRisk: {},\r\n            stiScreening: {},\r\n            targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n            uniqueId: \"\",\r\n            visitDate: \"\",\r\n            visitType: \"\",\r\n            populationType: \"\",\r\n            pregnancyStatus: \"\",\r\n            score: 0\r\n        }\r\n    )\r\n    useEffect(async () => {\r\n\r\n        CounselingType();\r\n        VisitType();\r\n        await ReasonForDecline();\r\n        PopulationType();\r\n        PregnancyStatus();\r\n        if (props.activeContent.id && props.activeContent.id !== \"\" && props.activeContent.id !== null) {\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType === 'view' ? true : false)\r\n        }\r\n    }, [props.patientObj]);\r\n\r\n    const GetPatientPrepEligibility = (id) => {\r\n        axios\r\n            .get(`${baseUrl}prep/eligibility/${id}`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                // console.log(response.data);\r\n                setObjValues(response.data);\r\n                setRiskAssessment(response.data.personalHivRiskAssessment)\r\n                setRiskAssessmentPartner(response.data.sexPartnerRisk)\r\n                setStiScreening(response.data.stiScreening)\r\n                setDrugHistory(response.data.drugUseHistory)\r\n                setAssessmentForPepIndication(response.data.assessmentForPepIndication)\r\n                setAssessmentForAcuteHivInfection(response.data.assessmentForAcuteHivInfection)\r\n                setServicesReceivedByClient(response.data.servicesReceivedByClient)\r\n                setAssessmentForPrepEligibility(response.data.assessmentForPrepEligibility)\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n\r\n    // useEffect(()=>console.log('uniqueId: ',props.patientObj))\r\n    const CounselingType = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setCounselingType(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const VisitType = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setVisitType(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const ReasonForDecline = async () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setReasonForDecline(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const PopulationType = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setPopulationType(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n    const PregnancyStatus = () => {\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setPregnancyStatus(response.data);\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    const [riskAssessment, setRiskAssessment] = useState(\r\n        {\r\n            unprotectedVaginalSexCasual: \"\",\r\n            unprotectedVaginalSexRegular: \"\",\r\n            uprotectedAnalSexWithCasual: \"\",\r\n            uprotectedAnalSexWithRegular: \"\",\r\n            stiHistory: \"\",\r\n            sharedNeedles: \"\",\r\n            moreThan1SexPartner: \"\",\r\n            analSexWithPartner: \"\",\r\n            unprotectedAnalSexWithPartner: \"\",\r\n            haveYouPaidForSex: \"\",\r\n            haveSexWithoutCondom: \"\",\r\n            experienceCondomBreakage: \"\",\r\n            takenPartInSexualOrgy: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => {\r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue = Object.values(riskAssessment)\r\n    const riskCount = actualRiskCountTrue.filter((x) => x === 'true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner] = useState(\r\n        {\r\n            haveSexWithHIVPositive: \"\",\r\n            haveSexWithPartnerInjectDrug: \"\",\r\n            haveSexWithPartnerWhoHasSexWithMen: \"\",\r\n            haveSexWithPartnerTransgender: \"\",\r\n            sexWithPartnersWithoutCondoms: \"\",\r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        setRiskAssessmentPartner({ ...riskAssessmentPartner, [e.target.name]: e.target.value });\r\n\r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount = actualSexPartRiskCountTrue.filter((x) => x === 'true')\r\n    const [stiScreening, setStiScreening] = useState(\r\n        {\r\n            vaginalDischarge: \"\",\r\n            lowerAbdominalPains: \"\",\r\n            urethralDischarge: \"\",\r\n            complaintsOfScrotal: \"\",\r\n            complaintsGenitalSore: \"\",\r\n            analDischarge: \"\",\r\n            analItching: \"\",\r\n            analpain: \"\",\r\n            swollenIguinal: \"\",\r\n            genitalScore: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => {\r\n        setErrors({ ...errors, [e.target.name]: \"\" })\r\n        setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n\r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue = Object.values(stiScreening)\r\n    const stiCount = actualStiTrue.filter((x) => x === 'true')\r\n    const [drugHistory, setDrugHistory] = useState(\r\n        {\r\n            useAnyOfTheseDrugs: \"\",\r\n            inject: \"\",\r\n            sniff: \"\",\r\n            smoke: \"\",\r\n            Snort: \"\",\r\n            useDrugSexualPerformance: \"\",\r\n            hivTestedBefore: \"\",\r\n            recommendHivRetest: \"\",\r\n            clinicalSetting: \"\",\r\n            reportHivRisk: \"\",\r\n            hivExposure: \"\",\r\n            hivTestResultAtvisit: \"\", //\r\n            lastTest: \"\"\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        if (drugHistory.hivTestedBefore === \"true\") {\r\n            setDrugHistory({ ...drugHistory, lastTest: '' });\r\n        }\r\n        setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n    }\r\n    const [assessmentForPepIndication, setAssessmentForPepIndication] = useState(\r\n        {\r\n            unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: \"\",\r\n            sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: \"\",\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForPepIndication = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        setAssessmentForPepIndication({ ...assessmentForPepIndication, [e.target.name]: e.target.value });\r\n    }\r\n    const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] = useState(\r\n        {\r\n            acuteHivSymptomsLasttwoWeeks: \"\",\r\n            unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: \"\",\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        setAssessmentForAcuteHivInfection({ ...assessmentForAcuteHivInfection, [e.target.name]: e.target.value });\r\n    }\r\n    const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] = useState(\r\n        {\r\n            hivNegative: \"\",\r\n            hivRiskScore: \"\",\r\n            noIndicationForPep: \"\",\r\n            hasNoProteinuria: \"\",\r\n            noHistoryOrSignsOfLiverAbnormalitiesCabLa: \"\",\r\n            noHistoryOfDrugToDrugInteractionCabLa: \"\",\r\n            noHistoryOfDrugHypersensitivityCabLa: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeAssessmentForPrepEligibility = e => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n        setAssessmentForPrepEligibility({ ...assessmentForPrepEligibility, [e.target.name]: e.target.value });\r\n    }\r\n    const [servicesReceivedByClient, setServicesReceivedByClient] = useState(\r\n        {\r\n            willingToCommencePrep: \"\",\r\n            reasonsForDecline: [],\r\n            otherReasonsForDecline: \"\",\r\n\r\n        }\r\n    )\r\n    const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n        setErrors({ ...temp, [e.target.name]: \"\" })\r\n\r\n\r\n        if(e.target.name === \"willingToCommencePrep\"){\r\n\r\n            setServicesReceivedByClient({ ...servicesReceivedByClient, [e.target.name]: e.target.value,  reasonsForDecline: [],\r\n            });\r\n\r\n        }else{\r\n            setServicesReceivedByClient({ ...servicesReceivedByClient, [e.target.name]: e.target.value });\r\n\r\n        }\r\n    }\r\n\r\n    const handleInputReasonsForDecline = (e, data) => {\r\n        setServicesReceivedByClient({ ...servicesReceivedByClient, reasonsForDecline: data.value })\r\n    }\r\n\r\n    const [assessmentScore, setAssessmentScore] = useState(0);\r\n\r\n\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        //PREP FORM VALIDATION\r\n        temp.visitDate = objValues.visitDate ? \"\" : \"This field is required.\"\r\n        temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\r\n        temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\r\n\r\n        setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (validate()) {\r\n            setSaving(true);\r\n            //objValues.htsClientId= clientId\r\n            objValues.drugUseHistory = drugHistory\r\n            objValues.personalHivRiskAssessment = riskAssessment\r\n            objValues.sexPartnerRisk = riskAssessmentPartner\r\n            objValues.stiScreening = stiScreening\r\n            objValues.personId = props?.patientObj?.personId\r\n            objValues.uniqueId = props?.patientObj?.uniqueId\r\n            objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection\r\n            objValues.assessmentForPepIndication = assessmentForPepIndication\r\n            objValues.assessmentForPrepEligibility = assessmentForPrepEligibility\r\n            objValues.servicesReceivedByClient = servicesReceivedByClient\r\n            objValues.score = getPrepEligibilityScore();\r\n            if (props.activeContent && props.activeContent.actionType === \"update\") {//Perform operation for updation action\r\n                axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`, objValues,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } },)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount = 1\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        props.PatientObject();\r\n                        toast.success(\"Prep Eligilibility save successful!\", { position: toast.POSITION.BOTTOM_CENTER });\r\n                        props.setActiveContent({ ...props.activeContent, route: 'recent-history' })\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                            if (error.response.data.apierror) {\r\n                                toast.error(error.response.data.apierror.message, { position: toast.POSITION.BOTTOM_CENTER });\r\n                            } else {\r\n                                toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n                            }\r\n                        } else {\r\n                            toast.error(\"Something went wrong, please try again...\", { position: toast.POSITION.BOTTOM_CENTER });\r\n                        }\r\n                    });\r\n            } else {\r\n                axios.post(`${baseUrl}prep/eligibility`, objValues,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } },)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount = 1\r\n                        //props.setPatientObj(response.data)\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        toast.success(\"Prep Eligilibility save successful!\", { position: toast.POSITION.BOTTOM_CENTER });\r\n                        props.setActiveContent({ ...props.activeContent, route: 'recent-history' })\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if (error.response && error.response.data) {\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                            if (error.response.data.apierror) {\r\n                                toast.error(error.response.data.apierror.message, { position: toast.POSITION.BOTTOM_CENTER });\r\n                            } else {\r\n                                toast.error(errorMessage, { position: toast.POSITION.BOTTOM_CENTER });\r\n                            }\r\n                        } else {\r\n                            toast.error(\"Something went wrong, please try again...\", { position: toast.POSITION.BOTTOM_CENTER });\r\n                        }\r\n                    });\r\n            }\r\n\r\n        } else {\r\n            setSaving(false);\r\n            toast.error(\"All field are required \", { position: toast.POSITION.BOTTOM_CENTER });\r\n        }\r\n    }\r\n\r\n    const isFemale = () => {\r\n        return props.patientObj.gender.toLowerCase() === \"female\";\r\n    }\r\n\r\n    const is30AndAbove = () => {\r\n        return Number(props.patientObj.age) >= 30;\r\n    }\r\n\r\n    const getIndicationForPepResult = () => {\r\n        if (assessmentForPepIndication !== null && assessmentForPepIndication !== undefined) {\r\n            return Object.values(assessmentForPepIndication).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\r\n        }\r\n    }\r\n\r\n    const getAcuteHivResult = () => {\r\n        if (assessmentForAcuteHivInfection !== null && assessmentForAcuteHivInfection !== undefined) {\r\n            return Object.values(assessmentForAcuteHivInfection).filter((each) => (each === \"true\")).length > 0 ? 0 : 1\r\n        }\r\n    }\r\n\r\n    const getPrepEligibilityScore = () => {\r\n        var score = 0;\r\n        score += drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0\r\n        score += riskCount.length > 0 ? 1 : 0\r\n        score += getAcuteHivResult()\r\n        score += getIndicationForPepResult()\r\n        if (is30AndAbove() && isFemale() === false) {\r\n            score += assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0;\r\n        }\r\n        score += assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0;\r\n        score += assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0;\r\n        score += assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0;\r\n\r\n        if (is30AndAbove() && isFemale() === false) {\r\n            return score >= 8 ? 1 : 0;\r\n        } else {\r\n            return score >= 7 ? 1 : 0;\r\n        }\r\n    }\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    function countPrepEligibility(data) {\r\n        let count = 0;\r\n        let relevantActivities = ['Prep Commencement', 'Prep Clinic']\r\n        data.forEach(entry => {\r\n          entry?.activities?.forEach(activity => {\r\n            if (relevantActivities.includes(activity?.name)) {\r\n              count++;\r\n            }\r\n          });\r\n        });\r\n    \r\n        return count;\r\n      }\r\n    const getRecentActivities = () => {\r\n        axios\r\n            .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } }\r\n            )\r\n            .then((response) => {\r\n                setRecentActivities(response.data)\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n    useEffect(() => getRecentActivities(), [])\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                    <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form>\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Visit Date <span style={{ color: \"red\" }}> *</span></Label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e) => e.preventDefault()}\r\n                                        className=\"form-control\"\r\n                                        name=\"visitDate\"\r\n                                        id=\"visitDate\"\r\n                                        value={objValues.visitDate}\r\n                                        onChange={handleInputChange}\r\n                                        min={props.patientDetail && props.patientDetail.dateHivPositive !== null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\r\n                                        max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.visitDate !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.visitDate}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Visit type <span style={{ color: \"red\" }}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"visitType\"\r\n                                        id=\"visitType\"\r\n                                        value={objValues.visitType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {visitType.map((value) => (\r\n                                            <option value={value.code}> {value.display} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.visitType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.visitType}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Population type <span style={{ color: \"red\" }}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"populationType\"\r\n                                        id=\"populationType\"\r\n                                        value={objValues.populationType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {populationType.map((value) => (\r\n                                            <option value={value.code}> {value.display} </option>\r\n                                        ))}\r\n                                        {!populationType?.find((pType)=>pType.display === \"GenPop\") && <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>}\r\n                                    </select>\r\n                                    {errors.populationType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.populationType}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {isFemale() && (\r\n                                <div className=\"form-group col-md-4 p-2\">\r\n                                    <FormGroup className=\"p-2\">\r\n                                        <Label>Pregnancy Status <span style={{ color: \"red\" }}> *</span></Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"pregnancyStatus\"\r\n                                            id=\"pregnancyStatus\"\r\n                                            value={objValues.pregnancyStatus}\r\n                                            onChange={handleInputChange}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            {pregnancyStatus.map((value) => (\r\n                                                <option value={value.code}> {value.display} </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {errors.pregnancyStatus !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.pregnancyStatus}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Sex partners <span style={{ color: \"red\" }}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexPartner\"\r\n                                        id=\"sexPartner\"\r\n                                        value={objValues.sexPartner}\r\n                                        onChange={handleInputChange}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"Male\">Male</option>\r\n                                        <option value=\"Female\">Female</option>\r\n                                        <option value=\"Both\">Both</option>\r\n                                    </select>\r\n                                    {errors.sexPartner !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.sexPartner}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            {props.patientObj.gender === 'Male' || props.patientObj.gender === 'male' && (\r\n                                <div className=\"form-group col-md-4 p-2\">\r\n                                    <FormGroup className=\"p-2\">\r\n                                        <Label>Number of wives </Label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            name=\"numWives\"\r\n                                            id=\"numWives\"\r\n                                            value={objValues.numWives}\r\n                                            onChange={handleInputChange}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        />\r\n                                        {errors.numWives !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.numWives}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Type of counseling <span style={{ color: \"red\" }}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"counselingType\"\r\n                                        id=\"counselingType\"\r\n                                        value={objValues.counselingType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option value={value.id}> {value.display} </option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors.counselingType !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.counselingType}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\" style={{ backgroundColor: '#992E62', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }}>\r\n                                HIV Risk Assessment (Last 3 months)\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-2\">\r\n                                <FormGroup className=\"p-2\">\r\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup >\r\n                                    <Label>Unprotected Anal sex with regular partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.stiHistory !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.sharedNeedles !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.analSexWithPartner !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you paid for sex in the last 6 months?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you been paid for sex in the last 6 months?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you experienced condom breakage?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you taken part in sexual orgy?\r\n\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr />\r\n                            <br />\r\n\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{ backgroundColor: '#992E62', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had sex with a partner who is HIV positive?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had sex with a partner who injects drugs?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had sex with a partner who has sex with men?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had sex with a partner who is a transgender person?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had sex with a partner who has sex with multiple partners without condoms?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score: {sexPartRiskCount.length}</b>\r\n                            </Message>\r\n\r\n                            <hr />\r\n                            <br />\r\n\r\n                            <div\r\n                                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                                style={{ backgroundColor: '#014D88', width: '125%', color: '#fff', fontWeight: 'bold' }}\r\n                            >\r\n                                Assessment for PEP Indication\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            In the past 72 hours, have you had sex without a condom with someone whose HIV status is positive or not known to you?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        value={assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}\r\n                                        onChange={handleInputChangeAssessmentForPepIndication}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                    </select>\r\n                                    {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you shared injection equipment like needles with someone whose HIV status is positive or unknown to you?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                                        value={assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}\r\n                                        onChange={handleInputChangeAssessmentForPepIndication}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{ backgroundColor: '#992E62', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }}  >Assessment for Acute HIV Infection</div>\r\n                            <div className=\"form-group  col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            In the past 2 weeks: Have you had a cold or flu such as fever, sore throat, abnormal sweats, swollen lymph nodes, mouth sores, headache or rash?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                                        id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                                        value={assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks}\r\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.acuteHivSymptomsLasttwoWeeks !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.acuteHivSymptomsLasttwoWeeks}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Have you had condomless anal or vaginal sex or shared injection materials and/or equipment in the past 28 days?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                                        id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                                        value={assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                                        onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{ backgroundColor: '#000', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }} >Drug Use History</div>\r\n                            <hr />\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>\r\n                                    Do you use any of these drugs/substances ?\r\n                            </h4>\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-6 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>Inject</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"inject\"\r\n                                            id=\"inject\"\r\n                                            value={drugHistory.inject}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.inject !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.inject}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>Sniff</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"sniff\"\r\n                                            id=\"sniff\"\r\n                                            value={drugHistory.sniff}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.sniff !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.sniff}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>Snort</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"Snort\"\r\n                                            id=\"Snort\"\r\n                                            value={drugHistory.fever}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.Snort !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.Snort}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-6 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>Smoke</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"smoke\"\r\n                                            id=\"smoke\"\r\n                                            value={drugHistory.smoke}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.smoke !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.smoke}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Have you used drugs to enhance sexual performance ?\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"useDrugSexualPerformance\"\r\n                                            id=\"useDrugSexualPerformance\"\r\n                                            value={drugHistory.useDrugSexualPerformance}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.useDrugSexualPerformance !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Have you had HIV testing before ?\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"hivTestedBefore\"\r\n                                            id=\"hivTestedBefore\"\r\n                                            value={drugHistory.hivTestedBefore}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n                                        </select>\r\n                                        {errors.hivTestedBefore !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                {drugHistory.hivTestedBefore === \"true\" && (\r\n                                    <div className=\"form-group col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                    When was your last test?\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"lastTest\"\r\n                                                id=\"lastTest\"\r\n                                                value={drugHistory.lastTest}\r\n                                                onChange={handleInputChangeDrugHistory}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"1 Month\">{\"<\"}1 Month</option>\r\n                                                <option value=\"1-3 Months\">1-3 Months</option>\r\n                                                <option value=\"4-6Months\">4-6 Months</option>\r\n                                                <option value=\"6Months\">{\">\"}6 months</option>\r\n                                            </select>\r\n                                            {errors.lastTest !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.lastTest}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"form-group col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>HIV test result at visit <span style={{ color: \"red\" }}> *</span></Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"hivTestResultAtvisit\"\r\n                                            id=\"hivTestResultAtvisit\"\r\n                                            value={drugHistory.hivTestResultAtvisit}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"Positive\">Positive</option>\r\n                                            <option value=\"Negative\">Negative</option>\r\n                                        </select>\r\n                                        {errors.hivTestResultAtvisit !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group  col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Recommended for HIV Retest ?\r\n\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"recommendHivRetest\"\r\n                                            id=\"recommendHivRetest\"\r\n                                            value={drugHistory.recommendHivRetest}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n\r\n                                        </select>\r\n                                        {errors.recommendHivRetest !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Tested in certain Clinical settings, such as STI clinics?\r\n\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"clinicalSetting\"\r\n                                            id=\"clinicalSetting\"\r\n                                            value={drugHistory.clinicalSetting}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n\r\n                                        </select>\r\n                                        {errors.clinicalSetting !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Report ongoing HIV risk behaviors?\r\n\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"reportHivRisk\"\r\n                                            id=\"reportHivRisk\"\r\n                                            value={drugHistory.reportHivRisk}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n\r\n                                        </select>\r\n                                        {errors.reportHivRisk !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group  col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>\r\n                                                Report a specific HIV exposure within the last 3 months\r\n\r\n                                        </Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"hivExposure\"\r\n                                            id=\"hivExposure\"\r\n                                            value={drugHistory.hivExposure}\r\n                                            onChange={handleInputChangeDrugHistory}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n\r\n                                        </select>\r\n                                        {errors.hivExposure !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.hivExposure}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"col-md-12 text-center pt-2 mb-4\" style={{ backgroundColor: '#014D88', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }} >Syndromic STI Screening</div>\r\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                                <>\r\n                                    <div className=\"form-group  col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                    Complaints of vaginal discharge or burning when urinating?\r\n\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"vaginalDischarge\"\r\n                                                id=\"vaginalDischarge\"\r\n                                                value={stiScreening.vaginalDischarge}\r\n                                                onChange={handleInputChangeStiScreening}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"true\">Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n\r\n                                            </select>\r\n                                            {errors.vaginalDischarge !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group  col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\nComplaints of lower abdominal pains with or without vaginal discharge?\r\n\r\n\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"lowerAbdominalPains\"\r\n                                                id=\"lowerAbdominalPains\"\r\n                                                value={stiScreening.lowerAbdominalPains}\r\n                                                onChange={handleInputChangeStiScreening}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"true\">Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n\r\n                                            </select>\r\n                                            {errors.lowerAbdominalPains !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </>)}\r\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                                <>\r\n                                    <div className=\"form-group  col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                    Complaints of urethral discharge or burning when urinating?\r\n\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"urethralDischarge\"\r\n                                                id=\"urethralDischarge\"\r\n                                                value={stiScreening.urethralDischarge}\r\n                                                onChange={handleInputChangeStiScreening}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"true\">Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n\r\n                                            </select>\r\n                                            {errors.urethralDischarge !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group  col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                    Complaints of scrotal swelling and pain\r\n\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"complaintsOfScrotal\"\r\n                                                id=\"complaintsOfScrotal\"\r\n                                                value={stiScreening.complaintsOfScrotal}\r\n                                                onChange={handleInputChangeStiScreening}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"true\">Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n\r\n                                            </select>\r\n                                            {errors.complaintsOfScrotal !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group  col-md-4 p-3\">\r\n                                        <FormGroup>\r\n                                            <Label>\r\n                                                    Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?\r\n\r\n                                            </Label>\r\n                                            <select\r\n                                                className=\"form-control\"\r\n                                                name=\"complaintsGenitalSore\"\r\n                                                id=\"complaintsGenitalSore\"\r\n                                                value={stiScreening.complaintsGenitalSore}\r\n                                                onChange={handleInputChangeStiScreening}\r\n                                                style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                                disabled={disabledField}\r\n                                            >\r\n                                                <option value={\"\"}>Select</option>\r\n                                                <option value=\"true\">Yes</option>\r\n                                                <option value=\"false\">No</option>\r\n\r\n                                            </select>\r\n                                            {errors.complaintsGenitalSore !== \"\" ? (\r\n                                                <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                            ) : \"\"}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </>)}\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            Genital sore +/-pains?\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.genitalScore !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.swollenIguinal !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.analpain}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.analpain !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.analItching !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.analDischarge !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\" style={{ backgroundColor: '#014D88', width: '125%', height: '35px', color: '#fff', fontWeight: 'bold' }} >Assessment for PrEP Eligibilty</div>\r\n\r\n                            <div className=\"col-md-6 p-3\">\r\n                                <div className=\"d-flex\">\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <FormGroup>\r\n                                            <Label>HIV Negative: <span className=\"badge badge-info\">{`${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</span> </Label>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <Label>HIV Risk Score &gt; 1: <span className=\"badge badge-info\">{`${riskCount.length > 0 ? 1 : 0}`}</span></Label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {true && <div className=\"form-group  col-md-4 p-3\">\r\n                                    <FormGroup>\r\n                                        <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name=\"hasNoProteinuria\"\r\n                                            id=\"hasNoProteinuria\"\r\n                                            value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                                            onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                            style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                            disabled={disabledField}\r\n                                        >\r\n                                            <option value={\"\"}>Select</option>\r\n                                            <option value=\"true\">Yes</option>\r\n                                            <option value=\"false\">No</option>\r\n\r\n                                        </select>\r\n                                        {errors.hasNoProteinuria !== \"\" ? (\r\n                                            <span className={classes.error}>{errors.hasNoProteinuria}</span>\r\n                                        ) : \"\"}\r\n                                    </FormGroup>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                            {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                                    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                                        id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                                        id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.noHistoryOfDrugToDrugInteractionCabLa !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.noHistoryOfDrugToDrugInteractionCabLa}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-6 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                                        id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                                        value={assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa}\r\n                                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.noHistoryOfDrugHypersensitivityCabLa !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.noHistoryOfDrugHypersensitivityCabLa}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of PrEP Eligibility. If {\">= \"}1 client is Eligible for PrEP.  (Score: Count Yes=1, No=0).</h4>\r\n                                {/* <b>Score :{stiCount.length}</b> */}\r\n                                <h5>{`HIV Negative: ${drugHistory.hivTestResultAtvisit === \"Negative\" ? 1 : 0}`}</h5>\r\n                                <h5>{`HIV risk score >=1 : ${riskCount.length > 0 ? 1 : 0}`}</h5>\r\n                                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                                {(is30AndAbove() && isFemale() === false) && <h5>{`Has no proteinuria: ${assessmentForPrepEligibility?.hasNoProteinuria === \"true\" ? 1 : 0}`}</h5>}\r\n\r\n                            </Message>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of PrEP Eligibility for CAB-LA regimen. If the following below =1 client is Eligible for CAB-LA. {`(Score: Count Yes=1, No=0)`}</h4>\r\n                                {/* <b>Score :{stiCount.length}</b> */}\r\n                                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa === \"true\" ? 1 : 0}`}</h5>\r\n                                <h5>{`No history of PrEP drug interaction (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa === \"true\" ? 1 : 0}`}</h5>\r\n                                <h5>{`No history of drug hypersensitivity (CAB-LA): ${assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa === \"true\" ? 1 : 0}`}</h5>\r\n\r\n                            </Message>\r\n                            {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n                            <hr />\r\n                            <br />\r\n                            <div className=\"form-group  col-md-12 text-center mb-4 p-2\" style={{ backgroundColor: '#014D88', width: '125%', color: '#fff', fontWeight: 'bold' }} >Services Received by Client</div>\r\n                            <div className=\"form-group  col-md-4 \">\r\n                                <FormGroup>\r\n                                    <Label>Willing to commence PrEP</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"willingToCommencePrep\"\r\n                                        id=\"willingToCommencePrep\"\r\n                                        value={servicesReceivedByClient?.willingToCommencePrep}\r\n                                        onChange={handleInputChangeServicesReceivedByClient}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}>Select</option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n\r\n                                    </select>\r\n                                    {errors.willingToCommencePrep !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.willingToCommencePrep}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n\r\n                            {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n                            {servicesReceivedByClient?.willingToCommencePrep === 'false' && <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Reasons for Declining PrEP</Label>\r\n                                    <Dropdown value={servicesReceivedByClient?.reasonsForDecline} placeholder='select reasons for decline' onChange={handleInputReasonsForDecline} fluid multiple selection options={reasonForDecline.map((each) => {\r\n                                        return { key: each.code, text: each.display, value: each.code }\r\n                                    })} />\r\n                                    {errors.reasonsForDecline !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.reasonsForDecline}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>}\r\n                            {(servicesReceivedByClient?.reasonsForDecline?.find((one) => one === \"REASON_PREP_DECLINED_OTHERS_(SPECIFY)\") !== (null || undefined)) && <div className=\"form-group  col-md-12 p-3\">\r\n                                <FormGroup>\r\n                                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        name=\"otherReasonsForDecline\"\r\n                                        id=\"otherReasonsForDecline\"\r\n                                        value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                                        onChange={handleInputChangeServicesReceivedByClient}\r\n                                        style={{ border: \"1px solid #014D88\", borderRadius: \"0.2rem\" }}\r\n                                        disabled={disabledField}\r\n                                    />\r\n\r\n                                    {errors.reasonsForDecline !== \"\" ? (\r\n                                        <span className={classes.error}>{errors.reasonsForDecline}</span>\r\n                                    ) : \"\"}\r\n                                </FormGroup>\r\n                            </div>}\r\n\r\n\r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                                    {props.activeContent && props.activeContent.actionType === \"update\" ? (<>\r\n                                        <MatButton\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            hidden={disabledField}\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            style={{ backgroundColor: \"#014d88\" }}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        >\r\n                                            {!saving ? (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                            ) : (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                            )}\r\n                                        </MatButton>\r\n                                    </>) : (<>\r\n                                        <MatButton\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<SaveIcon />}\r\n                                            style={{ backgroundColor: \"#014d88\" }}\r\n                                            onClick={handleSubmit}\r\n                                            disabled={saving}\r\n                                        >\r\n                                            {!saving ? (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                            ) : (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                            )}\r\n                                        </MatButton>\r\n                                    </>)}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {/* {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" } */}\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  ///const patientObj = props.patientObj;\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n    //GetPatientPrepEnrollment\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data?.htsClientDtoList[0]?.targetGroup);\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required';\r\n    //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n    //temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n    //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      //console.log(\"prep\", objValues);\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('Prep Enrollment save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('Prep Enrollment save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required ', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n  \r\n    let history = useHistory();\r\n    const [patientDetail, setPatientDetail] = useState(\"\")\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    \r\n    const patientObjLocation = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n      PatientObject()\r\n     }, []);\r\n\r\n     async function PatientObject() {\r\n      axios\r\n          .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n            setPatientDetail(response.data);\r\n            //patientObj=response.data\r\n          })\r\n          .catch((error) => {    \r\n          });        \r\n    }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n            {/* start of patient card detail */}\r\n            <PatientCardDetail patientObj={patientObjLocation}  setActiveContent={setActiveContent} activeContent={activeContent} patientDetail={patientDetail}/> \r\n            {/* End of patient card detail */} \r\n            {/* This is the submenu components */}          \r\n            <SubMenu patientObj={patientObjLocation}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\r\n            <br/>\r\n            {/* This is the submenu routes */}\r\n            {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n            {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n            {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} patientDetail={patientDetail} PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-visit' &&( <PrEPVisit PatientObject={PatientObject}/>)}\r\n            {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)} \r\n            {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-dashboard\">\r\n            {/* This is the component to access patient dashboard */}\r\n            <PatientDetail />\r\n          </Route> \r\n          \r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            {/* This is the entry point to the application */}\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}