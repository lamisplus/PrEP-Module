{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","Button","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","classes","Accordion","AccordionSummary","md","_Fragment","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sexAtBirth","phoneNumber","address","Typography","activeContent","obj","newStatus","display","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","patientDetail","personResponseDto","console","log","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","lftConducted","dateLiverFunctionTestResults","score","CounselingType","VisitType","ReasonForDecline","PopulationType","PregnancyStatus","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","setAssessmentForPepIndication","assessmentForPepIndication","setAssessmentForAcuteHivInfection","assessmentForAcuteHivInfection","setServicesReceivedByClient","servicesReceivedByClient","setAssessmentForPrepEligibility","assessmentForPrepEligibility","riskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","handleInputChangeRiskAssessment","riskCount","Object","values","filter","riskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","drugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","handleInputChangeDrugHistory","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","handleInputChangeAssessmentForPepIndication","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","handleInputChangeAssessmentForAcuteHivInfection","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","handleInputChangeAssessmentForPrepEligibility","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","handleInputChangeServicesReceivedByClient","assessmentScore","setAssessmentScore","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","setLiverFunctionTestResult","CardBody","FormGroup","onKeyDown","min","dateHivPositive","dateOfRegistration","max","find","pType","FormLabel","Input","for","event","prevValues","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","sex","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_props$recentActiviti","_props$recentActiviti2","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","testsOptions","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepgiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","reasonForSwitch","urinalysisTest","setUrinalysisTest","testDate","setOtherPrepgiven","datePrepgiven","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","localId","otherTestName","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_RISK_REDUCTION_PLAN","PREP_STATUS","HTS_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","TestGroup","PREP_URINALYSIS_RESULT","PREP_OTHER_TEST","HEPATITIS_SCREENING_RESULT","SYPHILIS_RESULT","PREGANACY_STATUS","PREP_ENTRY_POINT","PREP_TYPE","POPULATION_TYPE","VISIT_TYPE","FAMILY_PLANNING_METHOD","getPatientVisit","getLatestFromEligibility","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","checkEligibleForCABLA","currentDate","regimenList","reg","pTypes","_response$data","JSON","parse","stringify","PrepRegimen","prepRiskReductionPlan","setPrepRiskReductionPlan","_populationType$find","_visitType$find","_pregnant$find","autoPopulatePopulationType","_response$data7","latestEligibility","sort","a","b","isBefore","autoPopulate","durationInDays","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","uuid","activeTab","date1","date2","filterOutLastRegimen","codeSet","lastRegimenId","_response$data2","_response$data3","_response$data4","_response$data4$","_response$data5","_response$data5$","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","plan","_objValues$otherTests","eachTest","handleRemoveTest","prev","test","TiTrash","component","AddIcon","handleCreateNewTest","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","urinalysisTestResult","setUrinalysisTestResult","LiverFunctionTestResult","HistoryOfDrugToDrugInteraction","GetPatientCommercement","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","PREP_STATUS_STOPPED_REASON","CAUSE_DEATH","GetPatientInterruption","linkToArt","containsDiscontinued","inputString","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","ovcEnrolled","setOvcEnrolled","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setDate","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","person","hivEnrollment","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.a41cfeda.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzI5ODUzMzIyfQ.zEfIZ3V0xQIIk-mhcHMTkZaSupocbpwILC4Hjq3-UHCc9bqg8tzTByjr5SNIp8MIdfXEXZAJkJs3UVwey_GqlA'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"name\",\r\n            hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"hospital_number\",\r\n            filtering: false,\r\n          },\r\n          { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n          { title: \"Sex\", field: \"gender\", filtering: false },\r\n          { title: \"Age\", field: \"age\", filtering: false },\r\n\r\n          { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n          { title: \"Actions\", field: \"actions\", filtering: false },\r\n        ]}\r\n        data={(query) =>\r\n          new Promise((resolve, reject) =>\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then((response) => response)\r\n              .then((result) => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.((row) => ({\r\n                    name: row.firstName + \" \" + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : \"\",\r\n                    age: row.age,\r\n\r\n                    status: (\r\n                      <Label color=\"blue\" size=\"mini\">\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/patient-dashboard\",\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: \"rgb(153, 46, 98)\",\r\n                              height: \"30px\",\r\n                              width: \"215px\",\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: \"12px\",\r\n                                  color: \"#fff\",\r\n                                  fontWeight: \"bolder\",\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              })\r\n          )\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport PatientList from './Patient/PatientList';\r\n\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n      <ol className=\"breadcrumb\">\r\n        <li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n      </ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <PatientList />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"prep-patient\" title=\"PrEP Patients\">                   \r\n                    <PrepPatients />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject);\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now + ' year(s)';\r\n  };\r\n  const getHospitalNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(\r\n      obj => obj.type === 'HospitalNumber'\r\n    );\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(\r\n      obj => obj?.type === 'phone'\r\n    );\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = identifier => {\r\n    console.log('identifier: ', identifier);\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress =\r\n      Array.isArray(address?.line) && address?.line[0] != null\r\n        ? address?.line[0]\r\n        : '';\r\n    const landMark =\r\n      address && address?.city && address?.city !== null ? address?.city : '';\r\n    return address ? houseAddress + ' ' + landMark : '';\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {patientObj?.firstName + ' ' + patientObj?.surname}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculate_age(\r\n                            moment(patientObj?.dateOfBirth).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth || patientObj?.gender}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input, Form } from 'reactstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n} from '@material-ui/core';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport {\r\n  Label as LabelRibbon,\r\n  Button,\r\n  Message,\r\n  Select,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ReactReadMoreReadLess from 'react-read-more-read-less';\r\nimport '../../index.css';\r\nimport { color } from 'highcharts';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult.map(value => ({\r\n    value: value.code,\r\n    label: value.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options}\r\n      selected={selectedValues}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const patientID =\r\n    props.patientDetail && props.patientDetail.personResponseDto\r\n      ? props.patientDetail.personResponseDto.id\r\n      : '';\r\n  console.log('patient ID OBS: ', props);\r\n  //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: 'false',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    CounselingType();\r\n    VisitType();\r\n    await ReasonForDecline();\r\n    PopulationType();\r\n    PregnancyStatus();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, [props.patientObj]);\r\n\r\n  const GetPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        // console.log(response.data);\r\n        setObjValues(response.data);\r\n        setRiskAssessment(response.data.personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(response.data.sexPartnerRisk);\r\n        setStiScreening(response.data.stiScreening);\r\n        setDrugHistory(response.data.drugUseHistory);\r\n        setAssessmentForPepIndication(response.data.assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(\r\n          response.data.assessmentForAcuteHivInfection\r\n        );\r\n        setServicesReceivedByClient(response.data.servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(\r\n          response.data.assessmentForPrepEligibility\r\n        );\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CounselingType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCounselingType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const VisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const ReasonForDecline = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDecline(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PopulationType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const handleInputChangeRiskAssessment = e => {\r\n    //setErrors({...temp, [e.target.name]:\"\"})\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of riskAssessment True\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  // Getting the number count of sexPartRiskCount True\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n  // Getting the number count of STI True\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '', //\r\n    lastTest: '',\r\n  });\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const [assessmentScore, setAssessmentScore] = useState(0);\r\n\r\n  const validate = () => {\r\n    // PREP FORM VALIDATION\r\n    temp.visitDate = objValues.visitDate ? '' : 'This field is required.';\r\n    temp.lftConducted = objValues.lftConducted ? '' : 'This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? 'LFT is required'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : 'This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : 'This field is required.';\r\n\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //objValues.htsClientId= clientId\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        //Perform operation for updation action\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep Eligilibility save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            //props.setPatientObj(response.data)\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep Eligilibility save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n  }, []);\r\n\r\n  useEffect(() => console.log('objValues: ', objValues));\r\n  useEffect(() => console.log('temp: ', temp));\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h2>PrEP Eligibilty Screening Form</h2>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option value={value.code}> {value.display} </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option value={value.id}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup>\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup>\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport { Grid, Segment, Label, List, Card } from 'semantic-ui-react';\r\n// Page titie\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Select from 'react-select';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\n\r\nimport { formValues } from 'redux-form';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors };\r\n  const classes = useStyles();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  // const [selectedPregnant, setSelectedPregnant] = useState(\"\");\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  // const [selectedVisitType, setSelectedVisitType] = useState(\"\");\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  let testsOptions = [];\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: 'false',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId, //should person id be from patientObj?\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepgiven: 'false',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    urinalysisResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    duration: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [otherPrepgiven, setOtherPrepgiven] = useState({\r\n    prepType: 'Yes',\r\n    prepRegimen: '',\r\n    datePrepgiven: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([\r\n    {\r\n      localId: 0,\r\n      otherTest: 'Yes',\r\n      testDate: '',\r\n      result: '',\r\n      name: '',\r\n      otherTestName: '',\r\n    },\r\n  ]);\r\n  useEffect(async () => {\r\n    // Check if the fields exist in objValues first\r\n    if (\r\n      objValues.urinalysis.testDate &&\r\n      objValues.urinalysis.result &&\r\n      objValues.urinalysis.urinalysisTest\r\n    ) {\r\n      setUrinalysisTest({\r\n        ...urinalysisTest,\r\n        testDate: objValues.urinalysis.testDate,\r\n        result: objValues.urinalysis.result,\r\n        urinalysisTest: objValues.urinalysis.urinalysisTest,\r\n      });\r\n    }\r\n\r\n    if (\r\n      objValues.otherPrepgiven.prepType &&\r\n      objValues.otherPrepgiven.prepRegimen &&\r\n      objValues.otherPrepgiven.datePrepgiven\r\n    ) {\r\n      setOtherPrepgiven({\r\n        ...otherPrepgiven,\r\n        prepType: objValues.otherPrepgiven.prepType,\r\n        prepRegimen: objValues.otherPrepgiven.prepRegimen,\r\n        datePrepgiven: objValues.otherPrepgiven.datePrepgiven,\r\n      });\r\n    }\r\n    if (\r\n      objValues.syphilis.testDate &&\r\n      objValues.syphilis.result &&\r\n      objValues.syphilis.syphilisTest\r\n    ) {\r\n      setSyphilisTest({\r\n        ...syphilisTest,\r\n        testDate: objValues.syphilis.testDate,\r\n        result: objValues.syphilis.result,\r\n        syphilisTest: objValues.syphilis.syphilisTest,\r\n        others: objValues.syphilis.others,\r\n      });\r\n    }\r\n    if (\r\n      objValues.hepatitis.testDate &&\r\n      objValues.hepatitis.result &&\r\n      objValues.hepatitis.hepatitisTest\r\n    ) {\r\n      setHepatitisTest({\r\n        ...hepatitisTest,\r\n        testDate: objValues.hepatitis.testDate,\r\n        result: objValues.hepatitis.result,\r\n        hepatitisTest: objValues.hepatitis.hepatitisTest,\r\n      });\r\n    }\r\n  }, [objValues]);\r\n  useEffect(() => {\r\n    console.log('objectVals: ', objValues.wasPrepAdministered);\r\n  });\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    PREP_RISK_REDUCTION_PLAN();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    // LAST_HIV_TEST_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    // PrepRegimen(objValues.encounterDate);\r\n    TestGroup();\r\n    PREP_URINALYSIS_RESULT();\r\n    PREP_OTHER_TEST();\r\n    HEPATITIS_SCREENING_RESULT();\r\n    SYPHILIS_RESULT();\r\n    PREGANACY_STATUS();\r\n    PREP_ENTRY_POINT();\r\n    PREP_TYPE();\r\n    POPULATION_TYPE();\r\n    VISIT_TYPE();\r\n    FAMILY_PLANNING_METHOD();\r\n    getPatientVisit(props.activeContent.id);\r\n\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  const PREGANACY_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_ENTRY_POINT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  //Get list of Test Group\r\n  const TestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response.data.map(x => {\r\n          x.labTests.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const checkEligibleForCABLA = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          if (response?.data || !response?.data) {\r\n            let isEligibleForCABLA = response?.data;\r\n            if (\r\n              isEligibleForCABLA ||\r\n              objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n            ) {\r\n              setPrepType(prepType);\r\n              setprepRegimen(regimenList);\r\n            } else {\r\n              let reg = regimenList.filter((each, index) => {\r\n                return each.code !== 'CAB-LA(600mg/3mL)';\r\n              });\r\n              let pTypes = prepType.filter((each, index) => {\r\n                return each.code !== 'PREP_TYPE_INJECTIBLES';\r\n              });\r\n              setPrepType(pTypes);\r\n              setprepRegimen(reg);\r\n            }\r\n            return response?.data;\r\n          }\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        console.log('resp: ', data.regimen);\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHIVresult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            'No HTS record found. Atleast, 1 test result is required to proceed.'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('HTS record found. You may proceed.');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        //setPrepStatus(response.data);\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        let isEligibleForCABLA = checkEligibleForCABLA(\r\n          currentDate,\r\n          response.data\r\n        );\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const PREP_RISK_REDUCTION_PLAN = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        console.log('prep codeset: ', response.data);\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PREP_SIDE_EFFECTS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const HTS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const LAST_HIV_TEST_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${objValues.personId}/current-hts`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        var lastHivTest = response?.data?.hivTestResult;\r\n        // console.log('last res; ', response.data.hivTestResult)\r\n        if (!lastHivTest) {\r\n          setHivTestValue(response.data.hivTestResult);\r\n          setHivTestResultDate(response.data.test1.date);\r\n          objValues.hivTestResultDate = response.data.hivTestResult;\r\n          objValues.hivTestResultDate = response.data.test1.date;\r\n        } else {\r\n          setHivTestValue('NOT DONE');\r\n        }\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility !== null) {\r\n      setObjValues({\r\n        ...objValues,\r\n        populationType:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.populationType\r\n            : '',\r\n        visitType:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.visitType\r\n            : '',\r\n        pregnant:\r\n          latestFromEligibility !== null\r\n            ? latestFromEligibility?.pregnancyStatus\r\n            : '',\r\n      });\r\n      // await POPULATION_TYPE();\r\n      const autoPopulatePopulationType = populationType?.find(\r\n        type => type?.code === latestFromEligibility?.populationType\r\n      )?.display;\r\n      const autoPopulateVisitType = visitType.find(\r\n        type => type?.code === latestFromEligibility?.visitType\r\n      )?.display;\r\n      const autoPopulatePregnant = pregnant?.find(\r\n        type => type?.code === latestFromEligibility?.pregnancyStatus\r\n      )?.display;\r\n      setSelectedPopulationType(autoPopulatePopulationType);\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = response?.data?.sort((a, b) =>\r\n          moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n        )[response.data.length - 1];\r\n        console.log(\r\n          'CabLa Eligibility Assesment: ',\r\n          latestEligibility?.assessmentForPrepEligibility\r\n        );\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  function checkEligibleForCabLaFromLatestEligibility(\r\n    assessmentForPrepEligibility\r\n  ) {\r\n    const keysToCheck = [\r\n      'noHistoryOfDrugHypersensitivityCabLa',\r\n      'noHistoryOfDrugToDrugInteractionCabLa',\r\n      'noHistoryOrSignsOfLiverAbnormalitiesCabLa',\r\n    ];\r\n\r\n    for (let key of keysToCheck) {\r\n      if (assessmentForPrepEligibility?.[key] === 'Yes') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n  const POPULATION_TYPE = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const VISIT_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const WHY_POOR_FAIR_ADHERENCE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const SYNDROMIC_STI_SCREENING = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //PREP_URINALYSIS_RESULT\r\n  const PREP_URINALYSIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //PREP_OTHER_TEST\r\n  const PREP_OTHER_TEST = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //SYPHILIS_RESULT\r\n  const SYPHILIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  //HEPATITIS_SCREENING_RESULT\r\n  const HEPATITIS_SCREENING_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  // FAMILY_PLANNING_METHOD\r\n  const FAMILY_PLANNING_METHOD = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else if (e.target.name === 'otherPrepgiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      // if the encounterDate is the same as the commencement date, the prep regimen id should be automatically populated from the commencement\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    //find the test with the localId\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n\r\n    console.log('index found: ', index, e.target.name);\r\n    console.log('index found: ', index, e.target.value);\r\n    temp[index][e.target.name] = e.target.value;\r\n    console.log('otherTest: ', temp);\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    //Others\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'Yes' });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, ['hepatitisTest']: 'Yes' });\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, ['syphilisTest']: 'No' });\r\n    }\r\n  };\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n  const otherTestInputRef = useRef();\r\n\r\n  const loadOtherTestOptions = () => {\r\n    setErrors({ ...errors, [otherTestInputRef.current.name]: '' });\r\n    if (otherTestInputRef.current.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, ['urinalysisTest']: 'Yes' });\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, ['urinalysisTest']: 'No' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        'Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        'Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = 'Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        'Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        'Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n\r\n  //Validations of the forms\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue ? '' : 'Atleast, 1 HIV test result is required';\r\n    // temp.otherTestsDone = otherTest.length\r\n    //   ? ''\r\n    //   : 'You must submit atleast, a test result.';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : 'This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : 'This field is required';\r\n\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : 'This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : 'This field is required';\r\n\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.urinalysisTest = urinalysisTest.urinalysisTest\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.testDate = urinalysisTest.testDate ? '' : 'This field is required';\r\n    temp.result = urinalysisTest.result ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.duration = objValues.duration ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.visitType = objValues.visitType ? '' : 'This field is required';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : 'This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      //objValues.visitDate = vital.encounterDate\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            toast.success('Clinic visit update successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/clinic-visit`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            //PatientDetaild();\r\n            setSaving(false);\r\n            emptyObjValues();\r\n            toast.success('Clinic Visit save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCABLA(objValues.encounterDate, response.data);\r\n\r\n          // setprepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n  function isValidDate(date) {\r\n    return date instanceof Date && !isNaN(date);\r\n  }\r\n  function areDatesSame(date1, date2) {\r\n    // if (!isValidDate(date1) || !isValidDate(date2)) return alert('Invalid eligibility or visit date.')\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet.filter(regimen => {\r\n      return regimen.id !== lastRegimenId;\r\n    });\r\n  const handleOtherTestsDone = e => {\r\n    setOtherTestResult(prev =>\r\n      prev?.filter(eachTest => eachTest?.name !== e.target.value)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHIVresult();\r\n  }, []);\r\n  const handleOtherTestDoneChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    // Handle normal inputs\r\n    if (name !== 'otherTestsDone') {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      // Handle changes for the otherTestsDone array\r\n      const { localId, field } = e.target.dataset; // Assuming you're using data attributes to pass localId and the field being edited\r\n      console.log('found dataset: ', e.target.dataset);\r\n      const updatedTests = [...objValues.otherTestsDone];\r\n\r\n      // Find the index of the test being updated\r\n      const index = updatedTests.findIndex(\r\n        test => test.localId === Number(localId)\r\n      );\r\n\r\n      console.log('found index: ', index);\r\n\r\n      if (index !== -1) {\r\n        updatedTests[index] = {\r\n          ...updatedTests[index],\r\n          [field]: value,\r\n        };\r\n      }\r\n\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherTestsDone: updatedTests,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const prepRegimenUpdateView = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const handleCheckBoxOtherPrepgiven = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setOtherPrepgiven({ ...otherPrepgiven, ['prepType']: 'Yes' });\r\n    } else {\r\n      setOtherPrepgiven({ ...otherPrepgiven, ['prepType']: 'No' });\r\n    }\r\n  };\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getLiverFunctionTestResult();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [\r\n            'LIVER_FUNCTION_TEST_RESULT_ALANINE_AMINOTRANSFERASE_(ALT)__DERANGED',\r\n          ],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  useEffect(() => {\r\n    console.log('objValues: ', objValues);\r\n    console.log('errors: : ', errors);\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <h2>Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled={disabledField}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={disabledField}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      // min={\r\n                      //   patientDto && patientDto.dateEnrolled\r\n                      //     ? patientDto.dateEnrolled\r\n                      //     : ''\r\n                      // }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"notedSideEffects\"\r\n                    id=\"notedSideEffects\"\r\n                    value={objValues.notedSideEffects}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepSideEffect.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Level of Adherence\r\n                    {/* {countPrepEligibility(recentActivities) < 2 && <span style={{ color: \"red\" }}> *</span>} */}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"A\">A</option>\r\n                      <option value=\"B\">B</option>\r\n                      <option value=\"C\">C</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    // disabled\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        ).map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType === 'PREP_TYPE_INJECTIBLES' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepgiven\"\r\n                          id=\"otherPrepgiven\"\r\n                          value={objValues.otherPrepgiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepgiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepgiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepgiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              .filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_INJECTIBLES'\r\n                              )\r\n                              .map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {['update', 'view'].includes(\r\n                              props.activeContent.actionType\r\n                            )\r\n                              ? prepRegimen\r\n                                  ?.filter(\r\n                                    (each, index) =>\r\n                                      each.code !== 'CAB-LA(600mg/3mL)'\r\n                                  )\r\n                                  .map(value => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                      {value.regimen}\r\n                                    </option>\r\n                                  ))\r\n                              : objValues?.visitType ===\r\n                                'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                              ? filterOutLastRegimen(\r\n                                  prepRegimen,\r\n                                  props.recentActivities[0]?.regimenId\r\n                                )\r\n                                  .filter(\r\n                                    (each, index) =>\r\n                                      each.code !== 'CAB-LA(600mg/3mL)'\r\n                                  )\r\n                                  .map(value => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                      {value.regimen}\r\n                                    </option>\r\n                                  ))\r\n                              : prepRegimen\r\n                                  ?.filter(\r\n                                    (each, index) =>\r\n                                      each.code !== 'CAB-LA(600mg/3mL)'\r\n                                  )\r\n                                  .map(value => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                      {value.regimen}\r\n                                    </option>\r\n                                  ))}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (Day[s])`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={(e)=>e.preventDefault()}\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepGiven !==\"\" ? (\r\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>  */}\r\n\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n\r\n              <br />\r\n              <br />\r\n              {/* <Label\r\n                as=\"a\"\r\n                color=\"purple\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherPrepgiven\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxOtherPrepgiven}\r\n                    checked={otherPrepgiven.prepType == 'Yes' ? true : false}\r\n                  />{' '}\r\n                  Other PrEP Given\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherPrepgiven.prepType === 'Yes' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName for=\"\">PrEP Type</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"prepType\"\r\n                        id=\"prepType\"\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        // disabled\r\n                        onChange={handlePrepTypeChange}\r\n                        value={objValues.prepType}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\"> Select Prep Type</option>\r\n                        {prepType.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.prepType !== '' ? (\r\n                        <span className={classes.error}>{errors.prepType}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName for=\"\">PrEP Regimen</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"regimenId\"\r\n                        id=\"regimenId\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.regimenId}\r\n                        disabled={disabledField}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        {['update', 'view'].includes(\r\n                          props.activeContent.actionType\r\n                        )\r\n                          ? prepRegimen?.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.regimen}\r\n                              </option>\r\n                            ))\r\n                          : objValues?.visitType ===\r\n                            'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                          ? filterOutLastRegimen(\r\n                              prepRegimen,\r\n                              props.recentActivities[0]?.regimenId\r\n                            ).map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.regimen}\r\n                              </option>\r\n                            ))\r\n                          : prepRegimen?.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.regimen}\r\n                              </option>\r\n                            ))}\r\n                      </Input>\r\n                      {errors.regimenId !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.regimenId}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )} */}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={\r\n                      urinalysisTest.urinalysisTest == 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Date{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest.testDate}\r\n                        // defaultValue={objValues.urinalysis?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.testDate !== '' ? (\r\n                        <span className={classes.error}>{errors.testDate}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Urinalysis Test Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={\r\n                      hepatitisTest.hepatitisTest === 'Yes' ? true : false\r\n                    }\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest.syphilisTest === 'Yes' ? true : false}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />\r\n                  Other Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {/* {otherTest.otherTest === 'Yes' && (<> */}\r\n              {otherTest.length > 0 &&\r\n                otherTest.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>Next Appointment Date</FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature</FormLabelName>\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PREGANACY_STATUS();\r\n    GetPatientDTOObj();\r\n    PrepRegimen();\r\n    PREP_ENTRY_POINT();\r\n    PREP_TYPE();\r\n    LiverFunctionTestResult();\r\n    HistoryOfDrugToDrugInteraction();\r\n    PREP_URINALYSIS_RESULT();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientCommercement(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const PrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_ENTRY_POINT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n        // console.log(\"prep\", prepEntryPoint)\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_URINALYSIS_RESULT = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const PREP_TYPE = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const LiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const HistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientCommercement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREGANACY_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        //Perform operation for updation action\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  function checkEligibleForCabLaFromLatestEligibility(\r\n    assessmentForPrepEligibility\r\n  ) {\r\n    const keysToCheck = [\r\n      'noHistoryOfDrugHypersensitivityCabLa',\r\n      'noHistoryOfDrugToDrugInteractionCabLa',\r\n      'noHistoryOrSignsOfLiverAbnormalitiesCabLa',\r\n    ];\r\n\r\n    for (let key of keysToCheck) {\r\n      if (assessmentForPrepEligibility?.[key] === 'Yes') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2> PrEP Commencement </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Date of Initial Adherence Counseling{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateInitialAdherenceCounseling\"\r\n                    id=\"dateInitialAdherenceCounseling\"\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    value={objValues.dateInitialAdherenceCounseling}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateInitialAdherenceCounseling !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateInitialAdherenceCounseling}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date PrEP started <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datePrepStart\"\r\n                    id=\"datePrepStart\"\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    value={objValues.datePrepStart}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepStart !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.datePrepStart}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Body Weight <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"weight\"\r\n                      id=\"weight\"\r\n                      onChange={handleInputChange}\r\n                      min=\"3\"\r\n                      max=\"150\"\r\n                      value={objValues.weight}\r\n                      onKeyUp={handleInputValueCheckBodyWeight}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                        borderTopRightRadius: '0',\r\n                        borderBottomRightRadius: '0',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                        borderTopRightRadius: '0.25rem',\r\n                        borderBottomRightRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      kg\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.bodyWeight !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {vitalClinicalSupport.bodyWeight}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {errors.weight !== '' ? (\r\n                    <span className={classes.error}>{errors.weight}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Height <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                        borderTopLeftRadius: '0.25rem',\r\n                        borderBottomLeftRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      cm\r\n                    </InputGroupText>\r\n                    <Input\r\n                      type=\"number\"\r\n                      name=\"height\"\r\n                      id=\"height\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.height}\r\n                      min=\"48.26\"\r\n                      max=\"216.408\"\r\n                      disabled={disabledField}\r\n                      onKeyUp={handleInputValueCheckHeight}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    />\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#992E62',\r\n                        color: '#fff',\r\n                        border: '1px solid #992E62',\r\n                        borderRadius: '0rem',\r\n                        borderTopRightRadius: '0.25rem',\r\n                        borderBottomRightRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      {objValues.height !== ''\r\n                        ? (objValues.height / 100).toFixed(2) + 'm'\r\n                        : 'm'}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.height !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {vitalClinicalSupport.height}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                  {errors.height !== '' ? (\r\n                    <span className={classes.error}>{errors.height}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                {objValues.weight !== '' && objValues.height !== '' && (\r\n                  <FormGroup>\r\n                    <Label> </Label>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        BMI :{' '}\r\n                        {(\r\n                          objValues.weight /\r\n                          ((objValues.height / 100) * (objValues.height / 100))\r\n                        ).toFixed(2)}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                )}\r\n              </div>\r\n              {(props.patientObj.gender === 'Female' ||\r\n                props.patientObj.gender === 'female' ||\r\n                props.patientObj.gender === 'FEMALE') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Pregnancy Status</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"pregnant\"\r\n                      id=\"pregnant\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.pregnant}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      <option value=\"\"></option>\r\n                      {pregnant.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"\">Breast Feeding</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"breastFeeding\"\r\n                      id=\"breastFeeding\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.breastFeeding}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"Yes\"> Yes</option>\r\n                      <option value=\"No\"> No</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">History of drug Allergies</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"drugAllergies\"\r\n                    id=\"drugAllergies\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.drugAllergies}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"urinalysisResult\">Urinalysis Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"urinalysisResult\"\r\n                    id=\"urinalysisResult\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.urinalysisResult}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {urinalysisTestResult.map(value => (\r\n                      <option key={value.id} value={value.display}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"historyOfDrugToDrugInteraction\">\r\n                    History of PrEP drug interactions\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"historyOfDrugToDrugInteraction\"\r\n                    id=\"historyOfDrugToDrugInteraction\"\r\n                    value={objValues.historyOfDrugToDrugInteraction}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select </option>\r\n                    {historyOfDrugToDrugInteraction.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.historyOfDrugToDrugInteraction !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.historyOfDrugToDrugInteraction}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={disabledField}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <Label for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      // min={\r\n                      //   patientDto && patientDto.dateEnrolled\r\n                      //     ? patientDto.dateEnrolled\r\n                      //     : ''\r\n                      // }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">\r\n                    Referred <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"referred\"\r\n                    id=\"referred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.referred}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\"> Yes</option>\r\n                    <option value=\"false\"> No</option>\r\n                  </Input>\r\n                  {errors.referred !== '' ? (\r\n                    <span className={classes.error}>{errors.referred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.referred === 'true' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"datereferred\">Date referred</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"datereferred\"\r\n                      id=\"datereferred\"\r\n                      onChange={handleInputChange}\r\n                      value={objValues.datereferred}\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.datereferred !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.datereferred}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"prepType\">\r\n                    Prep Type At Start <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    // disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select Prep Type</option>\r\n                    {prepType.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"regimenId\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRegimen.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.regimen}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint.map(value => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>{`Duration of Refill (Day[s])`}</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            {props.activeContent && props.activeContent.actionType ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: '#014d88' }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{ backgroundColor: '#014d88' }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n// import { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    //maxWidth: 752,\r\n    //flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientInterruption(props.activeContent.id);\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //    setObjValues(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_STOPPED'\r\n    ) {\r\n      objValues.reasonStopped = '';\r\n      objValues.reasonStoppedOthers = '';\r\n      setObjValues({ ...objValues, ['reasonStopped']: '' });\r\n      setObjValues({ ...objValues, ['reasonStoppedOthers']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_DEAD'\r\n    ) {\r\n      objValues.causeOfDeath = '';\r\n      objValues.sourceOfDeathInfo = '';\r\n      objValues.dateClientDied = '';\r\n      //objValues.dateClientDied\r\n      setObjValues({ ...objValues, ['causeOfDeath']: '' });\r\n      setObjValues({ ...objValues, ['sourceOfDeathInfo']: '' });\r\n      setObjValues({ ...objValues, ['dateClientDied']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_RESTART'\r\n    ) {\r\n      objValues.dateRestartPlacedBackMedication = '';\r\n      setObjValues({ ...objValues, ['dateRestartPlacedBackMedication']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_TRANSFER_OUT'\r\n    ) {\r\n      objValues.dateClientReferredOut = '';\r\n      objValues.facilityReferredTo = '';\r\n      setObjValues({ ...objValues, ['facilityReferredTo']: '' });\r\n      setObjValues({ ...objValues, ['dateClientReferredOut']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    if (\r\n      e.target.name === 'interruptionType' &&\r\n      e.target.value !== 'PREP_STATUS_SEROCONVERTED'\r\n    ) {\r\n      objValues.linkToArt = '';\r\n      objValues.dateSeroconverted = '';\r\n      setObjValues({ ...objValues, ['dateSeroconverted']: '' });\r\n      setObjValues({ ...objValues, ['linkToArt']: '' });\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n    //\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    if (\r\n      containsDiscontinued(objValues.interruptionType) &&\r\n      !objValues.reasonForPrepDiscontinuation\r\n    ) {\r\n      temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    }\r\n    temp.interruptionType = objValues.interruptionType\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    console.log(allPrepInterruptions, interruptionOption);\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    } else {\r\n      //objValues.interruptionDate = objValues.interruptionDate\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('Record save successful');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            console.log('response: ', response?.data);\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('Record save successful');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  function containsDiscontinued(inputString) {\r\n    const lowerCaseString = inputString.toLowerCase();\r\n    return lowerCaseString.includes('discontinued');\r\n  }\r\n  useEffect(() => console.log('temp: ', errors));\r\n  useEffect(() => console.log('objValues: ', objValues));\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    <option value=\"PREP_INTERRUPTIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPTIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option>\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientReferredOut}\r\n                        required\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client died </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateClientDied}\r\n                        required\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.dateSeroconverted}\r\n                        required\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          //min=\"1983-12-31\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"PREP_INTERRUPTIONS_REASON_RISK_REDUCTION\">\r\n                        Risk reduction\r\n                      </option>\r\n                      <option value=\"PREP_INTERRUPTIONS_REASON_SEVERE_ADVERSE_EVENT\">\r\n                        {' '}\r\n                        Severe adverse event\r\n                      </option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for PrEP Interruption</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"interruptionReason\"\r\n                      id=\"interruptionReason\"\r\n                      value={objValues.interruptionReason}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      <option value=\"A\">Treatment Stop</option>\r\n                      <option value=\"B\">Death</option>\r\n                      <option value=\"C\">Self-transfer</option>\r\n                      <option value=\"C\">Transfer Out</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.interruptionReason !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionReason}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n              style={{ backgroundColor: '#992E62' }}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { DateTimePicker } from 'react-widgets';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    //temp.name = details.name ? \"\" : \"This field is required\"\r\n    //temp.description = details.description ? \"\" : \"This field is required\"\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record save successful');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {/* {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" } */}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  ///const patientObj = props.patientObj;\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  //let history = useHistory();\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n    //GetPatientPrepEnrollment\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data?.htsClientDtoList[0]?.targetGroup);\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        //console.log(response.data)\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data.find((x)=> x.id===id));\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required';\r\n    //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n    //temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n    //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      //console.log(\"prep\", objValues);\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('Prep Enrollment save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('Prep Enrollment save successful!', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required ', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n        //patientObj=response.data\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n          {/* start of patient card detail */}\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          {/* End of patient card detail */}\r\n          {/* This is the submenu components */}\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n          {/* This is the submenu routes */}\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        onKeyDown={(e)=>e.preventDefault()}\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            onKeyDown={(e)=>e.preventDefault()}\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-dashboard\">\r\n            {/* This is the component to access patient dashboard */}\r\n            <PatientDetail />\r\n          </Route> \r\n          \r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            {/* This is the entry point to the application */}\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}