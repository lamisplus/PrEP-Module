{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/apiCalls/eligibility.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","statusLabel","width","display","textAlign","Patients","classes","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","className","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","Button","margin","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","Accordion","AccordionSummary","md","_Fragment","root2","ButtonMui","startIcon","TiArrowBack","textTransform","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","sexAtBirth","phoneNumber","address","Typography","activeContent","obj","newStatus","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","onClick","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","includes","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","card","flexDirection","form","submit","cardBottom","marginBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForSwitchOptions","setReasonForSwitchOptions","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","setLiverFunctionTestResult","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","reasonForSwitch","lftConducted","dateLiverFunctionTestResults","score","riskAssessment","setRiskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessmentPartner","setRiskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","setStiScreening","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","drugHistory","setDrugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","assessmentForPepIndication","setAssessmentForPepIndication","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","servicesReceivedByClient","setServicesReceivedByClient","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","assessmentForAcuteHivInfection","setAssessmentForAcuteHivInfection","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","assessmentForPrepEligibility","setAssessmentForPrepEligibility","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","getCounselingType","getReasonForDecline","getPopulationType","getPregnancyStatus","getVisitType","getPatientPrepEligibility","console","handleInputChangeRiskAssessment","riskCount","Object","values","filter","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","handleInputChangeDrugHistory","handleInputChangeAssessmentForPepIndication","handleInputChangeAssessmentForAcuteHivInfection","handleInputChangeAssessmentForPrepEligibility","handleInputChangeServicesReceivedByClient","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","prevValues","prevHistory","CardBody","FormGroup","onKeyDown","min","patientDetail","dateHivPositive","dateOfRegistration","max","Input","find","pType","FormLabel","for","event","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","personResponseDto","sex","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_filterOutLastRegimen","_props$recentActiviti","_prepType$filter","_prepType$filter$filt","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","creatinineTestResult","setCreatinineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","prepRiskReductionPlan","setPrepRiskReductionPlan","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","prepNotedSideEffects","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepGiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","creatinine","urinalysisResult","creatinineResult","why","otherDrugs","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","creatinineTest","setCreatinineTest","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","testsOptions","checkEligibleForCabLa","currentDate","regimenList","reg","pTypes","getPrepEligibilityObj","PrepRegimen","getLatestFromEligibility","latestEligibility","sort","a","b","dateA","eligibilityVisitDateSync","setEligibilityVisitDateSync","durationInDays","duration","date1","date2","handleInputChangeUrinalysisTest","handleInputChangeCreatinineTest","creatinineTestDate","handleInputChangeOtherTest","localId","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","personUuid","previousStatus","params","log","uuid","activeTab","handleError","updatePreviousPrepStatusAndSubmit","autoPopulate","visitTypeDurationMapping","updateTest","testType","setTestFunction","testData","_await$getPrepRiskRed","_await$getAdherenceLe","_getSyndromicStiScree","_getPrepStatus","_getHts","_await$getPrepSideEff","_getPatientDtoObj","_getWhyPoorFairAdhere","_getTestGroup","_getPrepUrinalysisRes","_getPrepOtherTests","_getHapetitisScreenin","_getSyphilisResult","_getPregnancyStatus","_getPrepEntryPoint","_getVisitType","_getFamilyPlanningMet","getAdherenceLevel","getPrepSideEffects","_response$data","_x$labTests","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","_response$data2","JSON","parse","stringify","getPatientVisit","_response$data3","_response$data4","_response$data5","_response$data5$","_response$data6","_response$data6$","setNotedSideEffects","prev","PREP_VISIT_TYPE_DISCONTINUATION","PREP_VISIT_TYPE_INITIATION","PREP_VISIT_TYPE_METHOD_SWITCH","PREP_VISIT_TYPE_NO_PREP_PROVIDED","PREP_VISIT_TYPE_RESTART","PREP_VISIT_TYPE_SECOND_INITIATION","PREP_VISIT_TYPE_TRANSFER_IN","dateString","daysToAdd","isNaN","getTime","setDate","String","padStart","addDaysToDate","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","effect","plan","codeSet","lastRegimenId","getOptions","_objValues$otherTests","otherTestName","eachTest","handleRemoveTest","test","TiTrash","component","AddIcon","handleCreateNewTest","comment","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setPrepRegimen","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setPregnant","setPrepEntryPoint","urinalysisTestResult","setUrinalysisTestResult","getPatientDTOObj","fetchPrepRegimen","fetchPrepEntryPoint","fetchPrepType","fetchLiverFunctionTestResult","fetchHistoryOfDrugToDrugInteraction","fetchPrepUrinalysisResult","getPatientCommencement","isBefore","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","reasonForDiscontinuationOptions","setReasonForDiscontinuationOptions","PREP_STATUS","PREP_STATUS_STOPPED_REASON","GetPatientDTOObj","CAUSE_DEATH","getReasonForDiscontinuationOptions","linkToArt","prevErrors","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","_ref","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","city","setStateByCountryId","getStateId","enrollment","patientAge","alert","useCallback","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","organisationUnitId","postalCode","assignerId","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.b6eb1c86.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzM0MTM1NTUzfQ.5IpmbzNPBC3X62V6bpWPg_U4Y8uMXOtdX-uQCgklYdzVZAvDLeOx7HrPPKDqKKIkj_jIqMXDyiId777hBd9WcQ'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { token as token, url as baseUrl } from './../../../api';\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport '@reach/menu-button/styles.css';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n// Create styles using makeStyles\r\nconst useStyles = makeStyles({\r\n  statusLabel: {\r\n    width: '150px', // Set a constant width for the Label component\r\n    display: 'inline-block', // Ensure the width is respected\r\n    textAlign: 'center', // Center the text within the label\r\n  },\r\n});\r\n\r\nconst Patients = props => {\r\n  const classes = useStyles(); // Use the styles\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          { title: 'Patient Name', field: 'name', hidden: showPPI },\r\n          {\r\n            title: 'Hospital Number',\r\n            field: 'hospital_number',\r\n            filtering: false,\r\n          },\r\n          { title: 'PrEP Code', field: 'clientCode', filtering: false },\r\n          { title: 'Sex', field: 'gender', filtering: false },\r\n          { title: 'Age', field: 'age', filtering: false },\r\n          {\r\n            title: 'PrEP Status',\r\n            field: 'status',\r\n            filtering: false,\r\n          },\r\n          { title: 'Actions', field: 'actions', filtering: false },\r\n        ]}\r\n        data={query =>\r\n          new Promise((resolve, reject) => {\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then(response => response)\r\n              .then(result => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.(row => ({\r\n                    name: row.firstName + ' ' + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : '',\r\n                    age: row.age,\r\n                    status: (\r\n                      <Label\r\n                        className={classes.statusLabel}\r\n                        color=\"blue\"\r\n                        size=\"mini\"\r\n                      >\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: '/patient-dashboard',\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: 'rgb(153, 46, 98)',\r\n                              height: '30px',\r\n                              width: '215px',\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{\r\n                                backgroundColor: 'rgb(153, 46, 98)',\r\n                                margin: 'auto',\r\n                              }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: '12px',\r\n                                  color: '#fff',\r\n                                  fontWeight: 'bolder',\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              });\r\n          })\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n          },\r\n          searchFieldStyle: {\r\n            width: '200%',\r\n            margingLeft: '250px',\r\n          },\r\n          filtering: false,\r\n          exportButton: true,\r\n          searchFieldAlignment: 'left',\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: '#014d88', fontWeight: 'bold' }}>\r\n                    {' '}\r\n                    SHOW PII{' '}\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Card, Tab, Tabs } from 'react-bootstrap';\r\nimport PatientList from './Patient/PatientList';\r\n\r\nconst divStyle = {\r\n  borderRadius: '2px',\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ marginTop: '3em' }} className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PrEP</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={k => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject);\r\n    var age_now = today?.getFullYear() - birthDate?.getFullYear();\r\n    var m = today?.getMonth() - birthDate?.getMonth();\r\n    if (m < 0 || (m === 0 && today?.getDate() < birthDate?.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now + ' year(s)';\r\n  };\r\n  const getHospitalNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const hospitalNumber = identifiers?.identifier?.find?.(\r\n      obj => obj.type === 'HospitalNumber'\r\n    );\r\n    return hospitalNumber ? hospitalNumber?.value : '';\r\n  };\r\n  const getPhoneNumber = identifier => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers?.contactPoint?.find?.(\r\n      obj => obj?.type === 'phone'\r\n    );\r\n    return phoneNumber ? phoneNumber?.value : '';\r\n  };\r\n  const getAddress = identifier => {\r\n    console.log('identifier: ', identifier);\r\n    const identifiers = identifier;\r\n    const address = identifiers?.address?.find?.(obj => obj?.city);\r\n    const houseAddress =\r\n      Array.isArray(address?.line) && address?.line[0] != null\r\n        ? address?.line[0]\r\n        : '';\r\n    const landMark =\r\n      address && address?.city && address?.city !== null ? address?.city : '';\r\n    return address ? houseAddress + ' ' + landMark : '';\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {patientObj?.firstName + ' ' + patientObj?.surname}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculate_age(\r\n                            moment(patientObj?.dateOfBirth).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>{patientObj?.gender}</b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth || patientObj?.gender}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input } from 'reactstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  FormLabel,\r\n  makeStyles,\r\n  Button as MatButton,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Message, Dropdown } from 'semantic-ui-react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {\r\n  savePrepEligibility,\r\n  getCounselingType,\r\n  getPatientPrepEligibility,\r\n  getVisitType,\r\n  getRecentActivities,\r\n  getPregnancyStatus,\r\n  getReasonForDecline,\r\n  getLiverFunctionTestResult,\r\n} from '../../../apiCalls/eligibility';\r\n\r\nimport '../../index.css';\r\nimport { getPopulationType } from '../../../apiCalls/eligibility';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult?.map(value => ({\r\n    value: value?.code,\r\n    label: value?.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options || []}\r\n      selected={selectedValues || []}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '',\r\n    lastTest: '',\r\n  });\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCounselingType((await getCounselingType()).data);\r\n    setReasonForDecline((await getReasonForDecline()).data);\r\n    setPopulationType((await getPopulationType()).data);\r\n    setPregnancyStatus((await getPregnancyStatus()).data);\r\n    setVisitType((await getVisitType()).data);\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const getPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const {\r\n          personalHivRiskAssessment,\r\n          sexPartnerRisk,\r\n          stiScreening,\r\n          drugUseHistory,\r\n          assessmentForPepIndication,\r\n          assessmentForAcuteHivInfection,\r\n          servicesReceivedByClient,\r\n          assessmentForPrepEligibility,\r\n        } = response.data;\r\n        setObjValues(response.data);\r\n        setRiskAssessment(personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(sexPartnerRisk);\r\n        setStiScreening(stiScreening);\r\n        setDrugHistory(drugUseHistory);\r\n        setAssessmentForPepIndication(assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(assessmentForAcuteHivInfection);\r\n        setServicesReceivedByClient(servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(assessmentForPrepEligibility);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patient eligibility data:', error);\r\n      });\r\n  };\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeRiskAssessment = e => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.visitDate = objValues.visitDate ? '' : 'This field is required.';\r\n    temp.lftConducted = objValues.lftConducted ? '' : 'This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? 'LFT is required'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : 'This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : 'This field is required.';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : 'This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep eligilibility saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep eligilibility saved successfull! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ⚠', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n    getReasonForSwitch();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (objValues.lftConducted === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n    }\r\n  }, [objValues.lftConducted]);\r\n  useEffect(() => {\r\n    if (drugHistory.hivTestedBefore === 'false') {\r\n      setDrugHistory(prevHistory => ({\r\n        ...prevHistory,\r\n        lastTest: '',\r\n      }));\r\n    }\r\n  }, [drugHistory.hivTestedBefore]);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h1 style={{ fontSize: '1.1rem' }}>\r\n            PrEP Eligibility Screening Form\r\n          </h1>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>Reason for switch</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option value={value.code}> {value.display} </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option value={value.code}> {value.display} </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import axios from 'axios';\r\nimport { token, url as baseUrl } from '../api';\r\n\r\nexport const getPatientPrepEligibility = async id => {\r\n  return await axios.get(`${baseUrl}prep/eligibility/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getCounselingType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getVisitType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getReasonForDecline = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPopulationType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getPregnancyStatus = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getRecentActivities = async personId => {\r\n  return await axios.get(\r\n    `${baseUrl}prep/activities/patients/${personId}?full=true`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiverFunctionTestResult = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const savePrepEligibility = async (id, objValues, actionType) => {\r\n  const url =\r\n    actionType === 'update'\r\n      ? `${baseUrl}prep-eligibility/${id}`\r\n      : `${baseUrl}prep/eligibility`;\r\n  const method = actionType === 'update' ? 'put' : 'post';\r\n  return await axios[method](url, objValues, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label } from 'semantic-ui-react';\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { makeStyles, Button as MatButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\nexport const CleanupWrapper = ({ isVisible, cleanup, children }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isVisible) {\r\n        cleanup();\r\n      }\r\n    };\r\n  }, [isVisible, cleanup]);\r\n  return isVisible ? children : null;\r\n};\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [creatinineTestResult, setCreatinineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n  //faciliId\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    prepNotedSideEffects: [],\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepGiven: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    creatinine: {},\r\n    urinalysisResult: '',\r\n    creatinineResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [creatinineTest, setCreatinineTest] = useState({\r\n    creatinineTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'Yes',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let temp = { ...errors };\r\n  let testsOptions = [];\r\n\r\n  const getPregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getTestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response?.data?.map(x => {\r\n          x?.labTests?.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const checkEligibleForCabLa = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          let isEligibleForCABLA = response?.data;\r\n          if (\r\n            isEligibleForCABLA ||\r\n            objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n          ) {\r\n            setPrepType(prepType);\r\n            setprepRegimen(regimenList);\r\n          } else {\r\n            let reg = regimenList?.filter(\r\n              each => each.code !== 'CAB-LA(600mg/3mL)'\r\n            );\r\n            let pTypes = prepType?.filter(\r\n              each => each.code !== 'PREP_TYPE_INJECTIBLES'\r\n            );\r\n            setPrepType(pTypes);\r\n            setprepRegimen(reg);\r\n          }\r\n          return response?.data;\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        setOtherTest(response?.data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHivResult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            '⚠ No HTS record found. Atleast, 1 test result is required to proceed'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('👍 HTS record found. You may proceed ✔');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPatientDtoObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        console.log('pat obj: ', props.patientObj);\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        checkEligibleForCabLa(currentDate, response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepRiskReductionPlan = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepSideEffects = async () => {\r\n    return await axios.get(\r\n      `${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n  };\r\n\r\n  const getHts = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  function sortByVisitDateDescending(data) {\r\n    return data.sort((a, b) => {\r\n      const dateA = new Date(a.visitDate);\r\n      const dateB = new Date(b.visitDate);\r\n      return dateB - dateA;\r\n    });\r\n  }\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = sortByVisitDateDescending(response?.data)[0];\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPopulationType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getVisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getWhyPoorFairAdherence = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyndromicStiScreening = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getCreatinineTestResultOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CREATININE_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCreatinineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepOtherTests = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyphilisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHapetitisScreeningResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getFamilyPlanningMethod = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  async function getAdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const [eligibilityVisitDateSync, setEligibilityVisitDateSync] =\r\n    useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      setEligibilityVisitDateSync(\r\n        areDatesInSync(e.target.value, latestFromEligibility?.visitDate)\r\n      );\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else if (e.target.name === 'otherPrepGiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!eligibilityVisitDateSync) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: '',\r\n        visitType: '',\r\n        pregnant: '',\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n      setSelectedPopulationType('');\r\n    }\r\n  }, [eligibilityVisitDateSync]);\r\n\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCreatinineTest = e => {\r\n    setErrors({\r\n      ...errors,\r\n      creatinineResult: '',\r\n      creatinineTestDate: '',\r\n    });\r\n    setCreatinineTest({ ...creatinineTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n    temp[index][e.target.name] = e.target.value;\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev?.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ syphilisTest: 'Yes', testDate: '', result: '' });\r\n    } else {\r\n      setSyphilisTest({ syphilisTest: 'Yes', testDate: '', result: '' });\r\n    }\r\n  };\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (!e.target.checked) {\r\n      setHepatitisTest({ hepatitisTest: 'Yes', testDate: '', result: '' });\r\n    } else {\r\n      setHepatitisTest({ hepatitisTest: 'No', testDate: '', result: '' });\r\n    }\r\n  };\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.checked) {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    } else {\r\n      setOtherTest([]);\r\n    }\r\n  };\r\n\r\n  const otherTestInputRef = useRef();\r\n\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (!e.target.checked) {\r\n      setUrinalysisTest({ urinalysisTest: 'Yes', testDate: '', result: '' });\r\n    } else {\r\n      setUrinalysisTest({ urinalysisTest: 'Yes', testDate: '', result: '' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxCreatinineTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (!e.target.checked) {\r\n      setCreatinineTest({ creatinineTest: 'Yes', testDate: '', result: '' });\r\n    } else {\r\n      setCreatinineTest({ creatinineTest: 'No', testDate: '', result: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        '⚠ Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        '⚠ Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = '⚠ Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        '⚠ Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        '⚠ Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      prepNotedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      creatinine: {},\r\n      creatinineResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setCreatinineTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue\r\n      ? ''\r\n      : '⚠ Atleast, 1 HIV test result is required';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : '⚠ This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    temp.height = objValues.height ? '' : '⚠ This field is required';\r\n    if (objValues.prepType === 'PREP_TYPE_INJECTIBLES') {\r\n      temp.otherPrepGiven = objValues.otherPrepGiven\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    }\r\n    temp.weight = objValues.weight ? '' : '⚠ This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : '⚠ This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.visitType = objValues.visitType ? '' : '⚠ This field is required';\r\n\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updatePreviousPrepStatusAndSubmit(\r\n      props.patientObj?.personUuid,\r\n      props.patientObj?.prepStatus\r\n    );\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCabLa(objValues.encounterDate, response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function areDatesSame(date1, date2) {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet?.filter(regimen => regimen.id !== lastRegimenId);\r\n\r\n  const prepRegimenUpdateView = () =>\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  const getLiverFunctionTestResult = () =>\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility !== null) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === latestFromEligibility?.populationType\r\n      );\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: latestFromEligibility?.populationType || '',\r\n        visitType: latestFromEligibility?.visitType || '',\r\n        monthsOfRefill:\r\n          visitTypeDurationMapping[`${latestFromEligibility?.visitType}`] || '',\r\n        reasonForSwitch: latestFromEligibility?.reasonForSwitch || '',\r\n        pregnant: latestFromEligibility?.pregnancyStatus || '',\r\n      }));\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync, populationType]);\r\n\r\n  useEffect(() => {\r\n    const updateTest = (testType, setTestFunction) => {\r\n      const testData = objValues[testType];\r\n      if (\r\n        testData?.testDate &&\r\n        testData?.result &&\r\n        testData?.[`${testType}Test`]\r\n      ) {\r\n        setTestFunction({\r\n          ...testData,\r\n          testDate: testData.testDate,\r\n          result: testData.result,\r\n          [`${testType}Test`]: testData[`${testType}Test`],\r\n        });\r\n      }\r\n    };\r\n\r\n    updateTest('urinalysis', setUrinalysisTest);\r\n    updateTest('creatinine', setCreatinineTest);\r\n    updateTest('syphilis', setSyphilisTest);\r\n    updateTest('hepatitis', setHepatitisTest);\r\n  }, [objValues]);\r\n\r\n  useEffect(async () => {\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPrepEligibilityObj(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(async () => {\r\n    setPrepRiskReductionPlan((await getPrepRiskReductionPlan())?.data);\r\n    setAdherenceLevel((await getAdherenceLevel())?.data);\r\n    setPrepRiskReductionPlan(getSyndromicStiScreening()?.data);\r\n    setPrepStatus(getPrepStatus()?.data);\r\n    setHtsResult(getHts()?.data);\r\n    setPrepSideEffect((await getPrepSideEffects())?.data);\r\n    setPatientDto(getPatientDtoObj()?.data);\r\n    setWhyAdherenceLevelPoor(getWhyPoorFairAdherence()?.data);\r\n    getPrepEligibilityObj();\r\n    setLabTestOptions(getTestGroup()?.data);\r\n    setUrineTestResult(getPrepUrinalysisResult()?.data);\r\n    setOtherTestResult(getPrepOtherTests()?.data);\r\n    setHepaTestResult(getHapetitisScreeningResult()?.data);\r\n    setSyphilisTest(getSyphilisResult()?.data);\r\n    setpregnant(getPregnancyStatus()?.data);\r\n    setPrepEntryPoints(getPrepEntryPoint()?.data);\r\n    // setPrepType(getPrepType()?.data);\r\n    getPrepType();\r\n    setPopulationType(getPopulationType().data);\r\n    setVisitType(getVisitType()?.data);\r\n    setFamilyPlanningMethod(getFamilyPlanningMethod()?.data);\r\n    getPatientVisit(props.activeContent.id);\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHivResult();\r\n    getReasonForSwitch();\r\n    getCreatinineTestResultOptions();\r\n    getLiverFunctionTestResult();\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults,\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync]);\r\n\r\n  function areDatesInSync(date1, date2) {\r\n    return date1 === date2;\r\n  }\r\n  const getOptions = () => {\r\n    switch (objValues.otherPrepType) {\r\n      case 'PREP_TYPE_ORAL':\r\n        return <option value=\"1\">TDF(300mg)+3TC(300mg)</option>;\r\n      case 'PREP_TYPE_INJECTIBLES':\r\n        return <option value=\"2\">IM CAB-LA(600mg/3mL)</option>;\r\n      case 'PREP_TYPE_ED_PREP':\r\n        return (\r\n          <>\r\n            <option value=\"2\">IM CAB-LA(600mg/3mL)</option>\r\n            <option value=\"1\">TDF(300mg)+3TC(300mg)</option>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const [notedSideEffects, setNotedSideEffects] = useState([]);\r\n  const handleNotedSideEffectsChange = selected => {\r\n    setNotedSideEffects(selected);\r\n    setObjValues({ ...objValues, notedSideEffects: selected });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (objValues.otherPrepGiven === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    }\r\n  }, [objValues.otherPrepGiven]);\r\n\r\n  const visitTypeDurationMapping = {\r\n    PREP_VISIT_TYPE_DISCONTINUATION: null,\r\n    'PREP_VISIT_TYPE_DISCONTINUATION_FOLLOW-UP': null,\r\n    PREP_VISIT_TYPE_INITIATION: 30,\r\n    PREP_VISIT_TYPE_METHOD_SWITCH: null,\r\n    PREP_VISIT_TYPE_NO_PREP_PROVIDED: null,\r\n    'PREP_VISIT_TYPE_REFILL_RE-INJECTION': 60,\r\n    PREP_VISIT_TYPE_RESTART: 30,\r\n    PREP_VISIT_TYPE_SECOND_INITIATION: 60,\r\n    PREP_VISIT_TYPE_TRANSFER_IN: null,\r\n  };\r\n  function addDaysToDate(dateString, daysToAdd) {\r\n    const date = new Date(dateString);\r\n    if (\r\n      isNaN(date.getTime()) ||\r\n      typeof daysToAdd !== 'number' ||\r\n      isNaN(daysToAdd)\r\n    ) {\r\n      return '';\r\n    }\r\n    date.setDate(date.getDate() + daysToAdd);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let nextAppointment = addDaysToDate(\r\n      objValues.encounterDate,\r\n      objValues.monthsOfRefill\r\n    );\r\n    setObjValues(prev => ({ ...prev, nextAppointment }));\r\n  }, [objValues.encounterDate, objValues.monthsOfRefill]);\r\n  console.log('error:', temp);\r\n  useEffect(() => console.log('objValues: ', objValues));\r\n  async function updatePreviousPrepStatusAndSubmit(personUuid, previousStatus) {\r\n    try {\r\n      const response = await axios.put(\r\n        `${baseUrl}prep-clinic/updatePreviousPrepStatus`,\r\n        null,\r\n        {\r\n          params: {\r\n            personUuid,\r\n            previousStatus,\r\n          },\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      console.log('Update response:', response);\r\n      console.log('error:', temp);\r\n\r\n      if (validate()) {\r\n        console.log('Validation passed 111');\r\n        setSaving(true);\r\n        objValues.hivTestResultDate = hivTestResultDate;\r\n        objValues.hivTestResult = hivTestValue;\r\n        objValues.syphilis = syphilisTest;\r\n        objValues.hepatitis = hepatitisTest;\r\n        objValues.urinalysis = urinalysisTest;\r\n        objValues.creatinine = creatinineTest;\r\n        objValues.otherTestsDone = otherTest;\r\n        objValues.prepEnrollmentUuid = patientDto.uuid;\r\n        objValues.prepNotedSideEffects = notedSideEffects;\r\n        objValues.notedSideEffects = '';\r\n\r\n        if (\r\n          props.activeContent &&\r\n          props.activeContent.actionType === 'update'\r\n        ) {\r\n          try {\r\n            const updateResponse = await axios.put(\r\n              `${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n              objValues,\r\n              {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n              }\r\n            );\r\n            setSaving(false);\r\n            toast.success('Clinic visit updated successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        } else {\r\n          try {\r\n            const postResponse = await axios.post(\r\n              `${baseUrl}prep/clinic-visit`,\r\n              objValues,\r\n              {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n              }\r\n            );\r\n            setSaving(false);\r\n            emptyObjValues();\r\n            toast.success('Clinic Visit saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'consultation',\r\n              activeTab: 'history',\r\n              actionType: 'view',\r\n            });\r\n          } catch (error) {\r\n            handleError(error);\r\n          }\r\n        }\r\n      } else {\r\n        console.log('Validation failed 222');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating previous prep status:', error);\r\n      if (error.response) {\r\n        console.error('Response data:', error.response.data);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleError(error) {\r\n    setSaving(false);\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again';\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    } else {\r\n      toast.error('Something went wrong ❌ please try again...', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.root} container-fluid`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"p-2\">Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant?.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={true}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects</FormLabelName>\r\n                  <DualListBox\r\n                    options={prepSideEffect?.map(effect => ({\r\n                      value: effect.code,\r\n                      label: effect.display,\r\n                    }))}\r\n                    selected={notedSideEffects}\r\n                    onChange={handleNotedSideEffectsChange}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.notedSideEffects !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.notedSideEffects}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti?.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan?.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Level of Adherence</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        )?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (days)`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepGiven\"\r\n                          id=\"otherPrepGiven\"\r\n                          value={objValues.otherPrepGiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepGiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepGiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepGiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_ED_PREP'\r\n                              )\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== objValues.prepType\r\n                              )\r\n                              ?.map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {getOptions()}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">Family Planning</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"familyPlanning\"\r\n                    id=\"familyPlanning\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.familyPlanning}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {familyPlanningMethod?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Date of Family Planning </FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfFamilyPlanning\"\r\n                    id=\"dateOfFamilyPlanning\"\r\n                    value={objValues.dateOfFamilyPlanning}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfFamilyPlanning !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfFamilyPlanning}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"creatinineTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxCreatinineTest}\r\n                    checked={creatinineTest.creatinineTest === 'Yes'}\r\n                  />{' '}\r\n                  Creatinine Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {creatinineTest.creatinineTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={creatinineTest.testDate}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.creatinineTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        placeholder=\"Enter test result...\"\r\n                        value={creatinineTest.result}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                      {errors.creatinineResult !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineResult}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={urinalysisTest?.urinalysisTest === 'Yes'}\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest?.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.testDate !== '' ? (\r\n                        <span className={classes.error}>{errors.testDate}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest?.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={hepatitisTest.hepatitisTest === 'Yes'}\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest?.syphilisTest === 'Yes'}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest?.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest?.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest?.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest?.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />{' '}\r\n                  Other Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherTest.length > 0 &&\r\n                otherTest?.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div className=\"p-2\">\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving || disabledField}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE</h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>\r\n                  Next Appointment Date <span style={{ color: 'red' }}> *</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature </FormLabelName>\r\n\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}></h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\" mb-3 col-md-8\">\r\n                <FormLabelName>Comment</FormLabelName>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  placeholder=\"Enter comment...\"\r\n                  value={objValues.comment}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                    height: '10em',\r\n                  }}\r\n                />\r\n                {errors.comment !== '' ? (\r\n                  <span className={classes.error}>{errors.comment}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [prepRegimen, setPrepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setPregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoint] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    pregnancyStatus();\r\n    getPatientDTOObj();\r\n    fetchPrepRegimen();\r\n    fetchPrepEntryPoint();\r\n    fetchPrepType();\r\n    fetchLiverFunctionTestResult();\r\n    fetchHistoryOfDrugToDrugInteraction();\r\n    fetchPrepUrinalysisResult();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientCommencement(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, []);\r\n\r\n  const fetchPrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const fetchPrepType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchHistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientCommencement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const pregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      fetchPrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setPrepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardBody>\r\n        <form>\r\n          <div className=\"row\">\r\n            <h2>PrEP Commencement</h2>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"uniqueId\">\r\n                  Date of Initial Adherence Counseling{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateInitialAdherenceCounseling\"\r\n                  id=\"dateInitialAdherenceCounseling\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateInitialAdherenceCounseling}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.dateInitialAdherenceCounseling && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateInitialAdherenceCounseling}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date PrEP started <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"datePrepStart\"\r\n                  id=\"datePrepStart\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.datePrepStart}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.datePrepStart && (\r\n                  <span className={classes.error}>{errors.datePrepStart}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Body Weight <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    id=\"weight\"\r\n                    onChange={handleInputChange}\r\n                    min=\"3\"\r\n                    max=\"150\"\r\n                    value={objValues.weight}\r\n                    onKeyUp={handleInputValueCheckBodyWeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    kg\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.bodyWeight && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.bodyWeight}\r\n                  </span>\r\n                )}\r\n                {errors.weight && (\r\n                  <span className={classes.error}>{errors.weight}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Height <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopLeftRadius: '0.25rem',\r\n                      borderBottomLeftRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    cm\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.height}\r\n                    min=\"48.26\"\r\n                    max=\"216.408\"\r\n                    disabled={disabledField}\r\n                    onKeyUp={handleInputValueCheckHeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                    }}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#992E62',\r\n                      color: '#fff',\r\n                      border: '1px solid #992E62',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    {objValues.height\r\n                      ? (objValues.height / 100).toFixed(2) + 'm'\r\n                      : 'm'}\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.height && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.height}\r\n                  </span>\r\n                )}\r\n                {errors.height && (\r\n                  <span className={classes.error}>{errors.height}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n              {objValues.weight && objValues.height && (\r\n                <FormGroup>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    >\r\n                      BMI:{' '}\r\n                      {(\r\n                        objValues.weight /\r\n                        (objValues.height / 100) ** 2\r\n                      ).toFixed(2)}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n            {props.patientObj.gender.toLowerCase() === 'female' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Pregnancy Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"pregnant\"\r\n                    id=\"pregnant\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.pregnant}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {pregnant.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Breast Feeding</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"breastFeeding\"\r\n                    id=\"breastFeeding\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.breastFeeding}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of drug Allergies</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"drugAllergies\"\r\n                  id=\"drugAllergies\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.drugAllergies}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Urinalysis Result</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"urinalysisResult\"\r\n                  id=\"urinalysisResult\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.urinalysisResult}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {urinalysisTestResult.map(value => (\r\n                    <option key={value.id} value={value.display}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of PrEP drug interactions</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"select\"\r\n                  name=\"historyOfDrugToDrugInteraction\"\r\n                  id=\"historyOfDrugToDrugInteraction\"\r\n                  value={objValues.historyOfDrugToDrugInteraction}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {historyOfDrugToDrugInteraction.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.historyOfDrugToDrugInteraction && (\r\n                  <span className={classes.error}>\r\n                    {errors.historyOfDrugToDrugInteraction}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Liver Function Tests Result{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <LiverFunctionTest\r\n                  objValues={objValues}\r\n                  handleInputChange={handleLftInputChange}\r\n                  liverFunctionTestResult={liverFunctionTestResult}\r\n                  disabledField={disabledField}\r\n                  isAutoPop={true}\r\n                />\r\n                {errors.liverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.liverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date of Liver Function Tests Result{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateLiverFunctionTestResults\"\r\n                  id=\"dateLiverFunctionTestResults\"\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateLiverFunctionTestResults}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled\r\n                />\r\n                {errors.dateLiverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateLiverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Referred <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"referred\"\r\n                  id=\"referred\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.referred}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n                {errors.referred && (\r\n                  <span className={classes.error}>{errors.referred}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {objValues.referred === 'true' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date referred</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datereferred\"\r\n                    id=\"datereferred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.datereferred}\r\n                    min={patientDto?.dateEnrolled || ''}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datereferred && (\r\n                    <span className={classes.error}>{errors.datereferred}</span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName for=\"prepType\">\r\n                  Prep Type At Start <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepType\"\r\n                  id=\"prepType\"\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  onChange={handlePrepTypeChange}\r\n                  value={objValues.prepType}\r\n                >\r\n                  <option value=\"\">Select Prep Type</option>\r\n                  {prepType.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepType && (\r\n                  <span className={classes.error}>{errors.prepType}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  PrEP Regimen <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {prepRegimen.map(value => (\r\n                    <option key={value.id} value={value.id}>\r\n                      {value.regimen}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.regimenId && (\r\n                  <span className={classes.error}>{errors.regimenId}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName>\r\n                  Prep Distribution Setting{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepDistributionSetting\"\r\n                  id=\"prepDistributionSetting\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.prepDistributionSetting}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {prepEntryPoint.map(value => (\r\n                    <option key={value.code} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepDistributionSetting && (\r\n                  <span className={classes.error}>\r\n                    {errors.prepDistributionSetting}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Duration of Refill (Day[s])</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"monthsOfRefill\"\r\n                  id=\"monthsOfRefill\"\r\n                  value={objValues.monthsOfRefill}\r\n                  min={0}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          {saving && <Spinner />}\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{ backgroundColor: '#014d88' }}\r\n            onClick={handleSubmit}\r\n            disabled={saving}\r\n          >\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              {saving\r\n                ? 'Saving...'\r\n                : props.activeContent?.actionType\r\n                ? 'Update'\r\n                : 'Save'}\r\n            </span>\r\n          </MatButton>\r\n        </form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [reasonForDiscontinuationOptions, setReasonForDiscontinuationOptions] =\r\n    useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    getReasonForDiscontinuationOptions();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getReasonForDiscontinuationOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_FOR_DISCONTINUATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDiscontinuationOptions(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'interruptionType') {\r\n      switch (e.target.value) {\r\n        case 'PREP_STATUS_STOPPED':\r\n          setObjValues({\r\n            ...objValues,\r\n            reasonStopped: '',\r\n            reasonStoppedOthers: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_DEAD':\r\n          setObjValues({\r\n            ...objValues,\r\n            causeOfDeath: '',\r\n            sourceOfDeathInfo: '',\r\n            dateClientDied: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_RESTART':\r\n          setObjValues({ ...objValues, dateRestartPlacedBackMedication: '' });\r\n          break;\r\n        case 'PREP_STATUS_TRANSFER_OUT':\r\n          setObjValues({\r\n            ...objValues,\r\n            dateClientReferredOut: '',\r\n            facilityReferredTo: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_SEROCONVERTED':\r\n          setObjValues({ ...objValues, linkToArt: '', dateSeroconverted: '' });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    // if (\r\n    //   containsDiscontinued(objValues.interruptionType) &&\r\n    //   !objValues.reasonForPrepDiscontinuation\r\n    // ) {\r\n    //   temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    // }\r\n    if (\r\n      (objValues.interruptionType === 'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n        objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n        objValues.interruptionType === 'PREP_STATUS_LOSS_TO_FOLLOW_UP') &&\r\n      !objValues.interruptionDate\r\n    ) {\r\n      temp.interruptionDate = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' &&\r\n      !objValues.dateClientReferredOut\r\n    ) {\r\n      temp.dateClientReferredOut = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_DEAD' &&\r\n      !objValues.dateClientDied\r\n    ) {\r\n      temp.dateClientDied = 'This field is required';\r\n    }\r\n    if (!objValues.interruptionType) {\r\n      temp.interruptionType = 'This field is required';\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    }\r\n    if (validate()) {\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = error => {\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again...';\r\n      toast.error(errorMessage);\r\n    } else {\r\n      toast.error('❌ Something went wrong. Please try again...');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReasonForDiscontinuationOptions();\r\n  }, []);\r\n\r\n  // function containsDiscontinued(inputString) {\r\n  //   const lowerCaseString = inputString.toLowerCase();\r\n  //   return lowerCaseString.includes('discontinued');\r\n  // }\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!['view', 'update'].includes(props.activeContent.actionType)) {\r\n        setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          dateInterruption: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          causeOfDeath: '',\r\n          dateClientDied: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          interruptionDate: '',\r\n          sourceOfDeathInfo: '',\r\n          dateSeroconverted: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n\r\n        setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          interruptionDate: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          dateClientDied: '',\r\n          causeOfDeath: '',\r\n          sourceOfDeathInfo: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          dateSeroconverted: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n      }\r\n    };\r\n  }, [objValues.interruptionType]);\r\n\r\n  useEffect(() => {\r\n    GetPatientInterruption(props.activeContent.id);\r\n  }, [props.activeContent.id]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    {/* <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option> */}\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_CABLA' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                          disabled={disabledField}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientReferredOut ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of Client's Death </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientDied || objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateSeroconverted ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          disabled={disabledField}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {/* {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      placeholder=\"Enter reason for PrEP discontinuation...\"\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : null} */}\r\n            </div>\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent.actionType !== 'view' && (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                  onClick={props.toggle}\r\n                  style={{ backgroundColor: '#992E62' }}\r\n                >\r\n                  <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                    {' '}\r\n                    Cancel{' '}\r\n                  </span>\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [transferIn, setTransferIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record saved successfully! ✔');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong ❌');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required⚠';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required⚠';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required⚠';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required⚠';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required❌', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n  //console.log(patientObj)\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n        //patientObj=response.data\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          {/* This component is where the patient menu and route is define and manage */}\r\n          {/* start of patient card detail */}\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          {/* End of patient card detail */}\r\n          {/* This is the submenu components */}\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n          {/* This is the submenu routes */}\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormGroup, Label, Spinner, Input, Form } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport * as moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { useForm } from 'react-hook-form';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getValue } from '@syncfusion/ej2-base';\r\nimport './patient.css';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst UserRegistration = props => {\r\n  console.log(props);\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: '',\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: '',\r\n    genderId: '',\r\n    identifier: '',\r\n    otherName: '',\r\n    maritalStatusId: '',\r\n    educationId: '',\r\n    employmentStatusId: '',\r\n    dateOfRegistration: '',\r\n    isDateOfBirthEstimated: null,\r\n    age: '',\r\n    phoneNumber: '',\r\n    altPhonenumber: '',\r\n    dob: '',\r\n    countryId: '',\r\n    stateId: '',\r\n    district: '',\r\n    landmark: '',\r\n    sexId: '',\r\n    ninNumber: '',\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: '',\r\n    phone: '',\r\n    firstName: '',\r\n    email: '',\r\n    relationshipId: '',\r\n    lastName: '',\r\n    middleName: '',\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace('T', ' ')\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: '',\r\n    hivEnrollment: '',\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrerId: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n    householdNumber: '',\r\n    referredToOVCPartner: '',\r\n    dateReferredToOVCPartner: '',\r\n    referredFromOVCPartner: '',\r\n    dateReferredFromOVCPartner: '',\r\n    careEntryPointOther: '',\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState('false');\r\n\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts = patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(contacts.contact);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map(x => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: '',\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        obj => obj.type == 'HospitalNumber'\r\n      );\r\n      const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n      const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n      const altphone = contactPoint.contactPoint.find(\r\n        obj => obj.type == 'altphone'\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber = hospitalNumber ? hospitalNumber.value : '';\r\n      basicInfo.maritalStatusId = patientObj.maritalStatus.id;\r\n      basicInfo.employmentStatusId = patientObj.employmentStatus.id;\r\n      basicInfo.genderId = patientObj.gender ? patientObj.gender.id : null;\r\n      basicInfo.sexId = patientObj.sex;\r\n      basicInfo.educationId = patientObj.education.id;\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : '';\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : '';\r\n      basicInfo.email = email && email.value ? email.value : '';\r\n      basicInfo.address = country && country.city ? country.city : '';\r\n      basicInfo.landmark = country.line[0];\r\n      basicInfo.countryId = country.countryId;\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country.stateId);\r\n      basicInfo.stateId = country.stateId;\r\n      basicInfo.district = country.district;\r\n      setObjValues(patientObj.enrollment);\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format('DD-MM-YYYY')\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === 'Female' ? true : false);\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert('Date of registration can not be earlier than date of birth');\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async parentId => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now;\r\n  };\r\n  //Get States from selected country\r\n  const getStates = e => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setStates(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //fetch province\r\n  const getProvinces = e => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = e => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: '' });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = e => {\r\n    if (e.target.value == 'Actual') {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == 'Estimated') {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = e => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, 'years');\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format('YYYY-MM-DD');\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = e => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === 'sexId' && e.target.value === 'Female') {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === 'firstName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'lastName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'middleName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'hospitalNumber' && e.target.value !== '') {\r\n      async function getCharacters() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'text/plain',\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          setHospitalNumStatus(false);\r\n          setHospitalNumStatus2(true);\r\n        }\r\n      }\r\n      getCharacters();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: '/' });\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? '' : 'First Name is required';\r\n    temp.lastName = relatives.lastName ? '' : 'Last Name  is required.';\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? ''\r\n      : 'Relationship Type is required.';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = e => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = index => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = relationshipId => {\r\n    const relationship = relationshipOptions.find(\r\n      obj => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : '';\r\n  };\r\n  const handleInputChangeRelatives = e => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? '' : 'First Name is required';\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? ''\r\n      : 'Hospital Number  is required.';\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? '' : 'Last Name  is required.';\r\n    temp.sexId = basicInfo.sexId ? '' : 'Sex is required.';\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.educationId = basicInfo.educationId ? '' : 'Education is required.';\r\n    temp.address = basicInfo.address ? '' : 'Address is required.';\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? ''\r\n      : 'Phone Number  is required.';\r\n    temp.countryId = basicInfo.countryId ? '' : 'Country is required.';\r\n    temp.stateId = basicInfo.stateId ? '' : 'State is required.';\r\n    temp.district = basicInfo.district ? '' : 'Province/LGA is required.';\r\n    //HIV FORM VALIDATION\r\n    temp.targetGroupId = objValues.targetGroupId\r\n      ? ''\r\n      : 'Target group is required.';\r\n    temp.dateConfirmedHiv = objValues.dateConfirmedHiv\r\n      ? ''\r\n      : 'date confirm HIV is required.';\r\n    temp.sourceOfReferrerId = objValues.sourceOfReferrerId\r\n      ? ''\r\n      : 'Source of referrer is required.';\r\n    temp.enrollmentSettingId = objValues.enrollmentSettingId\r\n      ? ''\r\n      : 'Enrollment Setting Number  is required.';\r\n    temp.tbStatusId = objValues.tbStatusId ? '' : 'TB status is required.';\r\n    temp.statusAtRegistrationId = objValues.statusAtRegistrationId\r\n      ? ''\r\n      : 'Status at Registration is required.';\r\n    temp.entryPointId = objValues.entryPointId\r\n      ? ''\r\n      : 'Care Entry Point is required.';\r\n    temp.dateOfRegistration = objValues.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'Unique ID is required.';\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find(x => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId.id;\r\n    if (validate()) {\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map(x => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: 'phone',\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + ' ' + x.middleName + ' ' + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: '',\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.genderId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: 'HospitalNumber',\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == 'Actual' ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: 'phone',\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: 'email',\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: 'altphone',\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.hivEnrollment = objValues;\r\n        const response = await axios.put(\r\n          `${baseUrl}hiv/patient/${patientObj.id}`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success('Patient Updated successfully! ✔');\r\n        history.push('/');\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data && error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = value => {\r\n    const result = value.replace(/[^a-z]/gi, '');\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n    if (e.target.name === 'pregnancyStatusId') {\r\n      console.log(e.target.value);\r\n      if (e.target.value === '72') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: '/patient-history',\r\n              state: { patientObj: patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Back{' '}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Edit User Information\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{' '}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.dateOfRegistration1 !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            disabled={\r\n                              locationState.actionType === 'update'\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {'Hospital number already exist'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus2 === true ? (\r\n                            <span className={classes.success}>\r\n                              {'Hospital number is OK.'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={Math.floor(Math.random() * 1094328)}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.firstName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.lastName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            max={today}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={'row'}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            National Identity Number (NIN){' '}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nin\"\r\n                            id=\"nin\"\r\n                            value={basicInfo.ninNumber}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'phoneNumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.phoneNumber !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'altPhonenumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={getProvinces}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.address !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: '100%' }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      ' ' +\r\n                                      item.middleName +\r\n                                      ' ' +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={e => handleDeleteRelative(index)}\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  >\r\n                                    <option value={''}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.firstName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.lastName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: '100%',\r\n                                      border: '1px solid #014D88',\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: '100%',\r\n                                      borderRadius: '0px',\r\n                                    }}\r\n                                    country={'ng'}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    onChange={e => {\r\n                                      checkPhoneNumber(e.slice(0, 10), 'phone');\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    HIV Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique ID No * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueId\"\r\n                          id=\"uniqueId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.uniqueId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of Enrollment *{' '}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          min={basicInfo.dateOfRegistration}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateOfRegistration}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfRegistration !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"entryPointId\"\r\n                          id=\"entryPointId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.entryPointId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.entryPointId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.entryPointId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      {transferIn === true ? (\r\n                        <FormGroup>\r\n                          <Label>Facility Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityName\"\r\n                            id=\"facilityName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityName}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Status at Registration *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"statusAtRegistrationId\"\r\n                          id=\"statusAtRegistrationId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.statusAtRegistrationId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {hivStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.statusAtRegistrationId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.statusAtRegistrationId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of Confirmed HIV Test *</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateConfirmedHiv\"\r\n                          id=\"dateConfirmedHiv\"\r\n                          min={basicInfo.dob}\r\n                          max={objValues.dateOfRegistration}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateConfirmedHiv}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateConfirmedHiv !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateConfirmedHiv}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Source of Referral *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"sourceOfReferrerId\"\r\n                          id=\"sourceOfReferrerId\"\r\n                          value={objValues.sourceOfReferrerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          {sourceReferral.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.sourceOfReferrerId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.sourceOfReferrerId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Enrollment Setting *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"enrollmentSettingId\"\r\n                          id=\"enrollmentSettingId\"\r\n                          value={objValues.enrollmentSettingId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChange}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n\r\n                          {enrollSetting.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.enrollmentSettingId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.enrollmentSettingId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {femaleStatus && basicInfo.age > 9 && (\r\n                      <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label> Pregnancy </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"pregnancyStatusId\"\r\n                              id=\"pregnancyStatusId\"\r\n                              value={objValues.pregnancyStatusId}\r\n                              style={{\r\n                                border: '1px solid #014D88',\r\n                                borderRadius: '0.2rem',\r\n                              }}\r\n                              onChange={handleInputChange}\r\n                              //disabled={locationState.actionType==='update'? false : true}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {pregnancyStatus.map(value => (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.pregnancyStatusId !== '72' && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                              <FormGroup>\r\n                                <Label>Date of LMP </Label>\r\n                                <Input\r\n                                  type=\"date\"\r\n                                  onKeyDown={e => e.preventDefault()}\r\n                                  name=\"dateOfLpm\"\r\n                                  id=\"dateOfLpm\"\r\n                                  max={today}\r\n                                  onChange={handleInputChange}\r\n                                  value={objValues.dateOfLpm}\r\n                                  style={{\r\n                                    border: '1px solid #014D88',\r\n                                    borderRadius: '0.2rem',\r\n                                  }}\r\n                                  //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>TB Status * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbStatusId\"\r\n                          id=\"tbStatusId\"\r\n                          value={objValues.tbStatusId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {tbStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.tbStatusId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.tbStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {hideTargetGroup === 'false' ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>Target Group *</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"targetGroupId\"\r\n                            id=\"targetGroupId\"\r\n                            value={objValues.targetGroupId}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {kP.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.targetGroupId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.targetGroupId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <div className=\"form-check custom-checkbox ml-1 \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"ovc_enrolled\"\r\n                          id=\"ovc_enrolled\"\r\n                          onChange={handleCheckBox}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                          Enrolled into OVC?\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    {basicInfo.age <= 14 && (\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name=\"ovc_enrolled\"\r\n                            id=\"ovc_enrolled\"\r\n                            onChange={handleCheckBox}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                          >\r\n                            Enrolled into OVC?\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n\r\n                    {ovcEnrolled === true && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Household Unique Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"householdNumber\"\r\n                                id=\"householdNumber\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.householdNumber}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\"></div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredToOVCPartner\"\r\n                                id=\"referredToOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredToOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredToOVCPartner\"\r\n                                id=\"dateReferredToOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredToOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredFromOVCPartner\"\r\n                                id=\"referredFromOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredFromOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredFromOVCPartner\"\r\n                                id=\"dateReferredFromOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredFromOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : ''}\r\n\r\n              <br />\r\n\r\n              {locationState.actionType === 'update' ? (\r\n                <>\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Update\r\n                      </span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Updating...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n\r\n                  <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancel}\r\n                    style={{ backgroundColor: '#992E62' }}\r\n                  >\r\n                    <span\r\n                      style={{ textTransform: 'capitalize', color: '#fff' }}\r\n                    >\r\n                      Cancel\r\n                    </span>\r\n                  </MatButton>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from 'react';\r\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport './../src/main/webapp/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ marginTop: '3em' }}>\r\n      <Router>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/patient-dashboard\">\r\n              {/* This is the component to access patient dashboard */}\r\n              <PatientDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              {/* This is the entry point to the application */}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}