{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Consultation/Alert/Alert.jsx","main/webapp/hooks/patientCard/useGetPhoneNumber.jsx","main/webapp/hooks/patientCard/useCalculateAge.jsx","main/webapp/hooks/patientCard/useGetReminderAlert.jsx","main/webapp/hooks/patientCard/useBasicPatientDetails.jsx","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/hooks/patientCard/useGetAddress.jsx","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/apiCalls/eligibility.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["url","token","URLSearchParams","window","location","search","get","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","_objectSpread","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","useStyles","makeStyles","statusLabel","width","display","textAlign","Patients","classes","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","concat","baseUrl","headers","Authorization","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","_result$data","_result$data$records","_result$data$records$","records","map","call","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","className","color","size","prepStatus","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","Button","margin","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","Alert","_ref","show","body","footer","onClose","Modal","centered","Header","Title","Footer","onClick","_Fragment","useGetPhoneNumber","getPhoneNumber","_data$personResponseD","_data$personResponseD2","_data$personResponseD3","phoneContact","personResponseDto","contactPoint","find","contact","useCalculateAge","calculateAge","dob","today","Date","dateParts","split","dateObject","birthDate","ageNow","getFullYear","m","getMonth","getDate","useGetReminderAlert","reminderConfig","useMemo","getReminderAlert","sendCabLaAlert","useBasicPatientDetails","getSex","sex","getUniqueId","getDateOfBirth","dateOfBirth","getFirstName","getSurname","_data$personResponseD4","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","_props$activeContent","_props$activeContent$","_props$activeContent$2","getAddress","address","city","addressLine","district","includes","getAge","showReminder","setShowReminder","parseInt","Reminder","toggleModal","Accordion","AccordionSummary","md","root2","ButtonMui","startIcon","TiArrowBack","textTransform","patientDetail","moment","format","sexAtBirth","phoneNumber","Typography","activeContent","obj","newStatus","Divider","SubMenu","loadPrEPDiscontinuationsInterruptions","setActiveContent","route","loadPrEPRegistrationForm","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","onClickConsultation","onClickHome","loadPatientHistory","useHistory","Menu","inverted","createdBy","Item","eligibilityCount","prepCount","commencementCount","hivresultAtVisit","RecentHistory","_props$patientObj","recentActivities","setRecentActivities","summary","setSummary","saving","setSaving","open","setOpen","React","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","PerfectScrollbar","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","LoadModal","count","relevantActivities","forEach","entry","_entry$activities","countPrepEligibility","encounterDate","nextAppointment","regimen","weight","toFixed","backdrop","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","PatientHistory","isLoading","position","item","viewable","Icon","editable","exportButton","card","flexDirection","form","submit","cardBottom","marginBottom","Select","button","demo","background","default","inline","LiverFunctionTest","_ref2","objValues","handleInputChange","disabledField","liverFunctionTestResult","isAutoPop","selectedValues","setSelectedValues","liverFunctionTestResults","code","label","DualListBox","selected","canFilter","BasicInfo","_servicesReceivedByCl","setSisabledField","errors","setErrors","counselingType","setCounselingType","visitType","setVisitType","reasonForSwitchOptions","setReasonForSwitchOptions","reasonForDecline","setReasonForDecline","populationType","setPopulationType","pregnancyStatus","setPregnancyStatus","setLiverFunctionTestResult","temp","setObjValues","drugUseHistory","extra","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","stiScreening","targetGroup","visitDate","reasonForSwitch","lftConducted","dateLiverFunctionTestResults","score","riskAssessment","setRiskAssessment","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessmentPartner","setRiskAssessmentPartner","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","setStiScreening","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","drugHistory","setDrugHistory","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","assessmentForPepIndication","setAssessmentForPepIndication","unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours","sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours","servicesReceivedByClient","setServicesReceivedByClient","willingToCommencePrep","reasonsForDecline","otherReasonsForDecline","assessmentForAcuteHivInfection","setAssessmentForAcuteHivInfection","acuteHivSymptomsLasttwoWeeks","unprotectedAnalOrVaginalOrSharedNeedlesLast28Days","assessmentForPrepEligibility","setAssessmentForPrepEligibility","hivNegative","hivRiskScore","noIndicationForPep","hasNoProteinuria","noHistoryOrSignsOfLiverAbnormalitiesCabLa","noHistoryOfDrugToDrugInteractionCabLa","noHistoryOfDrugHypersensitivityCabLa","getCounselingType","getReasonForDecline","getPopulationType","getPregnancyStatus","getVisitType","getPatientPrepEligibility","console","handleInputChangeRiskAssessment","riskCount","Object","values","filter","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","handleInputChangeStiScreening","stiCount","handleInputChangeDrugHistory","handleInputChangeAssessmentForPepIndication","handleInputChangeAssessmentForAcuteHivInfection","handleInputChangeAssessmentForPrepEligibility","handleInputChangeServicesReceivedByClient","handleSubmit","_props$patientObj2","preventDefault","length","every","getPrepEligibilityScore","put","PatientObject","POSITION","BOTTOM_CENTER","post","isFemale","toLowerCase","is30AndAbove","Number","getIndicationForPepResult","undefined","each","getAcuteHivResult","prevValues","prevHistory","CardBody","FormGroup","onKeyDown","min","dateHivPositive","dateOfRegistration","max","Input","FormLabel","for","event","moreThanOneSexPartnerLastThreeMonths","Message","warning","fever","flex","placeholder","handleInputReasonsForDecline","fluid","multiple","selection","one","Spinner","MatButton","SaveIcon","flexGrow","input","ClinicVisit","_filterOutLastRegimen","_props$recentActiviti","_prepType$filter","_prepType$filter$filt","setDisabledField","patientDto","setPatientDto","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","labTestOptions","setLabTestOptions","urineTestResult","setUrineTestResult","creatinineTestResult","setCreatinineTestResult","otherTestResult","setOtherTestResult","sphylisTestResult","setSphylisTestResult","hepaTestResult","setHepaTestResult","familyPlanningMethod","setFamilyPlanningMethod","pregnant","setpregnant","prepEntryPoint","setPrepEntryPoints","prepType","setPrepType","selectedPopulationType","setSelectedPopulationType","latestFromEligibility","setLatestFromEligibility","hivTestValue","setHivTestValue","hivTestResultDate","setHivTestResultDate","prepRiskReductionPlan","setPrepRiskReductionPlan","vitalClinicalSupport","setVitalClinicalSupport","diastolic","systolic","pulse","temperature","respiratoryRate","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","hepatitis","prepNotedSideEffects","notedSideEffects","wasPrepAdministered","otherTestsDone","prepEnrollmentUuid","referred","regimenId","otherRegimenId","otherPrepGiven","riskReductionServices","healthCareWorkerSignature","syndromicStiScreening","syphilis","urinalysis","creatinine","urinalysisResult","creatinineResult","why","otherDrugs","prepGiven","hivTestResult","otherPrepType","prepDistributionSetting","familyPlanning","dateOfFamilyPlanning","monthsOfRefill","urinalysisTest","setUrinalysisTest","testDate","creatinineTest","setCreatinineTest","syphilisTest","setSyphilisTest","others","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","testsOptions","fullPrepTypeList","setFullPrepTypeList","checkEligibleForCabLa","currentDate","regimenList","isEligibleForCABLA","reg","pTypes","getPrepEligibilityObj","PrepRegimen","getLatestFromEligibility","latestEligibility","sort","a","b","dateA","eligibilityVisitDateSync","setEligibilityVisitDateSync","durationInDays","duration","date1","date2","checkDateMismatch","eligibilityDate","handleInputChangeUrinalysisTest","handleInputChangeCreatinineTest","creatinineTestDate","handleInputChangeOtherTest","localId","findIndex","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","otherTestInputRef","useRef","emptyObjValues","validate","lastHts","targetDate","activitiesArray","activityGroup","areDatesSame","hasPrepEligibility","encounters","_props$patientObj3","uuid","previousPrepStatus","activeTab","handleError","updatePreviousPrepStatusAndSubmit","personUuid","autoPopulate","visitTypeDurationMapping","updateTest","testType","setTestFunction","testData","_await$getPrepRiskRed","_await$getAdherenceLe","_getSyndromicStiScree","_getPrepStatus","_getHts","_await$getPrepSideEff","_getPatientDtoObj","_getWhyPoorFairAdhere","_getTestGroup","_getPrepUrinalysisRes","_getPrepOtherTests","_getHapetitisScreenin","_getSyphilisResult","_getPregnancyStatus","_getPrepEntryPoint","_getVisitType","_getFamilyPlanningMet","getAdherenceLevel","getPrepSideEffects","_response$data","_x$labTests","labTests","x2","push","labTestName","testGroupId","testGroupName","groupName","sampleType","JSON","parse","stringify","getPatientVisit","_response$data2","_response$data3","_response$data4","_response$data4$","_response$data5","_response$data5$","setNotedSideEffects","prev","PREP_VISIT_TYPE_DISCONTINUATION","PREP_VISIT_TYPE_INITIATION","PREP_VISIT_TYPE_METHOD_SWITCH","PREP_VISIT_TYPE_NO_PREP_PROVIDED","PREP_VISIT_TYPE_RESTART","PREP_VISIT_TYPE_SECOND_INITIATION","PREP_VISIT_TYPE_TRANSFER_IN","dateString","daysToAdd","isNaN","getTime","setDate","year","month","String","padStart","day","addDaysToDate","Grid","Column","Segment","ribbon","FormLabelName","dateEnrolled","InputGroup","onKeyUp","borderTopRightRadius","borderBottomRightRadius","InputGroupText","addonType","borderTopLeftRadius","borderBottomLeftRadius","borderTopLefttRadius","lastHtsDate","effect","plan","pType","codeSet","lastRegimenId","getOptions","urinalysisTestDate","_objValues$otherTests","otherTestName","eachTest","handleRemoveTest","test","TiTrash","component","AddIcon","handleCreateNewTest","comment","filterOutLastRegimen","getPatientHistory","ClinicVisitPage","setEncounters","ConsultationPage","ClinicHistoryPage","PrEPCommencementForm","setPrepRegimen","historyOfDrugToDrugInteraction","setHistoryOfDrugToDrugInteraction","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setPregnant","setPrepEntryPoint","urinalysisTestResult","setUrinalysisTestResult","getPatientDTOObj","fetchPrepRegimen","fetchPrepEntryPoint","fetchPrepType","fetchLiverFunctionTestResult","fetchHistoryOfDrugToDrugInteraction","fetchPrepUrinalysisResult","getPatientCommencement","isBefore","bodyWeight","breastFeeding","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","reasonStopped","reasonStoppedOthers","reasonForPrepDiscontinuation","reasonStooped","setReasonStooped","setCauseOfDeath","reasonForDiscontinuationOptions","setReasonForDiscontinuationOptions","PREP_STATUS","PREP_STATUS_STOPPED_REASON","GetPatientDTOObj","CAUSE_DEATH","getReasonForDiscontinuationOptions","linkToArt","prevErrors","required","interruption","reasonStoppedOther","dateLinkToArt","getNewPrepStatus","interruptionOption","allPrepInterruptions","_interruptionOption$i","transformedInterruption","_interruption$display","replace","CancelIcon","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","setCarePoints","hivStatus","setHivStatus","transferIn","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","targetGroupValue","setTargetGroupValue","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","_response$data$htsCli","htsClientDtoList","ancUniqueArtNo","PhoneInput","containerStyle","inputStyle","country","maxLength","masks","ng","at","checkPhoneNumberBasic","inputName","slice","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","devices","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","tryAgain","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","selectedFingers","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","log","clear_storelist","TemplateType","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlns","xmlnsXlink","alignRight","deleteBiometric","finger","newStoredBiometrics","updatePatientBiometricStatus","DeleteIcon","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","ToastContainer","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","FingerprintIcon","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","PatientCardDetail","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","maxWidth","UserRegistration","basicInfo","setBasicInfo","active","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","landmark","sexId","ninNumber","phone","email","relationshipId","lastName","middleName","setToday","toISOString","substr","contacts","setContacts","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","user","useLocation","femaleStatus","setfemaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","setSourceReferral","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","locationState","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","newConatctsInfo","contactInfo","line","identifiers","altphone","maritalStatus","employmentStatus","education","setStateByCountryId","getStateId","enrollment","patientAge","calculate_age","alert","useCallback","age_now","getCountryId","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","getCharacters","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","autoClose","hideProgressBar","Form","dateOfRegistration1","Math","floor","random","defaultChecked","setMonth","dobNew","maritalStatusOption","occupationOption","educationOption","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","validateRelatives","handleCancelSaveRelationship","handleAddRelative","getSexId","fullName","patientForm","organisationUnitId","postalCode","assignerId","handleCancel","App","Router","Switch","Route","PatientDetail","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.2a79236c.chunk.js","sourcesContent":["export const url =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:8383/api/v1/'\r\n    : '/api/v1/';\r\nexport const token =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzQ0OTEzNjY3fQ.bEHnW78rJ3WfK5XWmx_5StX5nvzqo35FnFyZofrSwkDUskYeFHnisfRBJvy5V_Y0OEKFHyKaLtAja_5O_4DqDg'\r\n    : new URLSearchParams(window.location.search).get('jwt');\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport MaterialTable, { MTableToolbar } from 'material-table';\r\nimport { token as token, url as baseUrl } from './../../../api';\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from 'react-icons/md';\r\nimport '@reach/menu-button/styles.css';\r\nimport { Label } from 'semantic-ui-react';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\n\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\n// Create styles using makeStyles\r\nconst useStyles = makeStyles({\r\n  statusLabel: {\r\n    width: '150px', // Set a constant width for the Label component\r\n    display: 'inline-block', // Ensure the width is respected\r\n    textAlign: 'center', // Center the text within the label\r\n  },\r\n});\r\n\r\nconst Patients = props => {\r\n  const classes = useStyles(); // Use the styles\r\n  const [patientList, setPatientList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showPPI, setShowPPI] = useState(true);\r\n\r\n  useEffect(() => {\r\n    patients();\r\n  }, []);\r\n\r\n  async function patients() {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${baseUrl}prep/persons`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLoading(false);\r\n        setPatientList(response.data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          { title: 'Patient Name', field: 'name', hidden: showPPI },\r\n          {\r\n            title: 'Hospital Number',\r\n            field: 'hospital_number',\r\n            filtering: false,\r\n          },\r\n          { title: 'PrEP Code', field: 'clientCode', filtering: false },\r\n          { title: 'Sex', field: 'gender', filtering: false },\r\n          { title: 'Age', field: 'age', filtering: false },\r\n          {\r\n            title: 'PrEP Status',\r\n            field: 'status',\r\n            filtering: false,\r\n          },\r\n          { title: 'Actions', field: 'actions', filtering: false },\r\n        ]}\r\n        data={query =>\r\n          new Promise((resolve, reject) => {\r\n            axios\r\n              .get(\r\n                `${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n              )\r\n              .then(response => response)\r\n              .then(result => {\r\n                resolve({\r\n                  data: result?.data?.records?.map?.(row => ({\r\n                    name: row.firstName + ' ' + row.surname,\r\n                    hospital_number: row.hospitalNumber,\r\n                    clientCode: row.uniqueId,\r\n                    gender: row && row.gender ? row.gender : '',\r\n                    age: row.age,\r\n                    status: (\r\n                      <Label\r\n                        className={classes.statusLabel}\r\n                        color=\"blue\"\r\n                        size=\"mini\"\r\n                      >\r\n                        {row.prepStatus}\r\n                      </Label>\r\n                    ),\r\n                    actions: (\r\n                      <div>\r\n                        <Link\r\n                          to={{\r\n                            pathname: '/patient-dashboard',\r\n                            state: { patientObj: row },\r\n                          }}\r\n                        >\r\n                          <ButtonGroup\r\n                            variant=\"contained\"\r\n                            aria-label=\"split button\"\r\n                            style={{\r\n                              backgroundColor: 'rgb(153, 46, 98)',\r\n                              height: '30px',\r\n                              width: '215px',\r\n                            }}\r\n                            size=\"large\"\r\n                          >\r\n                            <Button\r\n                              color=\"primary\"\r\n                              size=\"small\"\r\n                              aria-label=\"select merge strategy\"\r\n                              aria-haspopup=\"menu\"\r\n                              style={{\r\n                                backgroundColor: 'rgb(153, 46, 98)',\r\n                                margin: 'auto',\r\n                              }}\r\n                            >\r\n                              <MdDashboard />\r\n                            </Button>\r\n                            <Button\r\n                              style={{ backgroundColor: 'rgb(153, 46, 98)' }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  fontSize: '12px',\r\n                                  color: '#fff',\r\n                                  fontWeight: 'bolder',\r\n                                }}\r\n                              >\r\n                                Patient Dashboard\r\n                              </span>\r\n                            </Button>\r\n                          </ButtonGroup>\r\n                        </Link>\r\n                      </div>\r\n                    ),\r\n                  })),\r\n                  page: query.page,\r\n                  totalCount: result.data.totalRecords,\r\n                });\r\n              });\r\n          })\r\n        }\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n          },\r\n          searchFieldStyle: {\r\n            width: '100%',\r\n            margingLeft: '250px',\r\n          },\r\n          filtering: false,\r\n          searchFieldAlignment: 'left',\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        components={{\r\n          Toolbar: props => (\r\n            <div className=\"p-2\">\r\n              <div className=\"form-check custom-checkbox float-left mt-4 ml-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: '#014d88', fontWeight: 'bold' }}>\r\n                    {' '}\r\n                    SHOW PII{' '}\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Row, Col, Card, Tab, Tabs } from 'react-bootstrap';\r\nimport PatientList from './Patient/PatientList';\r\n\r\nconst divStyle = {\r\n  borderRadius: '2px',\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState('home');\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={{ marginTop: '3em' }} className=\"page-titles\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>PrEP</h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={k => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { CardContent, Card, CardHeader, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { CardFooter } from 'reactstrap';\r\n\r\nexport const Alert = ({ show, title, body, footer, onClose }) => {\r\n  if (!show) return <></>;\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      className=\"fade text-grey\"\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title\r\n          className=\"text-info\"\r\n          id=\"contained-modal-title-vcenter\"\r\n          style={{}}\r\n        >\r\n          <h2>\r\n            {' '}\r\n            <span> Reminder: </span> <br />{' '}\r\n            <span style={{ fontSize: '.7em' }}>{title}</span>\r\n          </h2>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{body}</p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          onClick={onClose}\r\n          style={{\r\n            backgroundColor: '#014d88',\r\n            color: '#fff',\r\n            margin: 'auto .2em',\r\n          }}\r\n          size=\"small\"\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const useGetPhoneNumber = () => {\r\n  const getPhoneNumber = data => {\r\n    const phoneContact =\r\n      data?.personResponseDto?.contactPoint?.contactPoint?.find(\r\n        contact => contact.type === 'phone'\r\n      );\r\n    return phoneContact ? phoneContact.value : '';\r\n  };\r\n  return { getPhoneNumber };\r\n};\r\n\r\nexport default useGetPhoneNumber;\r\n","import React from 'react';\r\n\r\nexport const useCalculateAge = () => {\r\n  const calculateAge = dob => {\r\n    const today = new Date();\r\n    const dateParts = dob.split('-');\r\n    const dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    const birthDate = new Date(dateObject);\r\n    let ageNow = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      ageNow--;\r\n    }\r\n\r\n    if (ageNow === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return ageNow + ' year(s)';\r\n  };\r\n  return { calculateAge };\r\n};\r\n\r\nexport default useCalculateAge;\r\n","import React, { useMemo } from 'react';\r\n\r\nconst useGetReminderAlert = () => {\r\n  const reminderConfig = useMemo(() => {\r\n    return [\r\n      null,\r\n      {\r\n        title: 'Upcoming CabLA Appointment!',\r\n        body: `CabLA appointment is due tommorrow`,\r\n      },\r\n      {\r\n        title: 'Missed CabLA Appointment!',\r\n        body: `CabLA appointment is overdue!`,\r\n      },\r\n    ];\r\n  }, []);\r\n\r\n  const getReminderAlert = sendCabLaAlert => reminderConfig[sendCabLaAlert];\r\n\r\n  return {\r\n    getReminderAlert,\r\n  };\r\n};\r\n\r\nexport default useGetReminderAlert;\r\n","export const useBasicPatientDetails = () => {\r\n  const getSex = data => data?.personResponseDto?.sex || '';\r\n  const getUniqueId = data => data?.uniqueId || '';\r\n  const getDateOfBirth = data => data?.personResponseDto?.dateOfBirth || '';\r\n  const getFirstName = data => data?.personResponseDto?.firstName || '';\r\n  const getSurname = data => data?.personResponseDto?.surname || '';\r\n\r\n  return {\r\n    getSex,\r\n    getUniqueId,\r\n    getDateOfBirth,\r\n    getFirstName,\r\n    getSurname,\r\n  };\r\n};\r\n\r\nexport default useBasicPatientDetails;\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonMui from '@material-ui/core/Button';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport momentLocalizer from 'react-widgets-moment';\r\nimport moment from 'moment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AccordionSummary } from '@material-ui/core';\r\nimport { Alert as Reminder } from '../Consultation/Alert/Alert';\r\nimport { useGetAddress } from '../../../hooks/patientCard/useGetAddress';\r\nimport useGetPhoneNumber from '../../../hooks/patientCard/useGetPhoneNumber';\r\nimport useCalculateAge from '../../../hooks/patientCard/useCalculateAge';\r\nimport useGetReminderAlert from '../../../hooks/patientCard/useGetReminderAlert';\r\nimport useBasicPatientDetails from '../../../hooks/patientCard/useBasicPatientDetails';\r\nMoment.locale('en');\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props?.patientObj;\r\n\r\n  const { getAddress } = useGetAddress();\r\n  const { getPhoneNumber } = useGetPhoneNumber();\r\n  const { calculateAge } = useCalculateAge();\r\n  const { getReminderAlert } = useGetReminderAlert();\r\n  const {\r\n    getSex,\r\n    getUniqueId,\r\n    getDateOfBirth,\r\n    getAge,\r\n    getFirstName,\r\n    getSurname,\r\n  } = useBasicPatientDetails();\r\n  const [showReminder, setShowReminder] = useState(0);\r\n  const toggleModal = () => setShowReminder(0);\r\n\r\n  useEffect(() => {\r\n    setShowReminder(getReminderAlert(parseInt(patientObj?.sendCabLaAlert)));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Reminder\r\n        show={showReminder}\r\n        title={showReminder?.title}\r\n        body={showReminder?.body}\r\n        patientObj={patientObj}\r\n        onClose={toggleModal}\r\n      />\r\n      <Accordion>\r\n        <AccordionSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              {patientObj && patientObj !== null ? (\r\n                <>\r\n                  <Row className={'mt-1'}>\r\n                    <Col md={12} className={classes?.root2}>\r\n                      <b\r\n                        style={{ fontSize: '25px', color: 'rgb(153, 46, 98)' }}\r\n                      >\r\n                        {(patientObj?.firstName || getFirstName()) +\r\n                          ' ' +\r\n                          (patientObj?.surname || getSurname())}\r\n                      </b>\r\n                      <Link to={'/'}>\r\n                        <ButtonMui\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className=\" float-end ms-2 mr-2 mt-2\"\r\n                          startIcon={<TiArrowBack />}\r\n                          style={{\r\n                            backgroundColor: 'rgb(153, 46, 98)',\r\n                            color: '#fff',\r\n                            height: '35px',\r\n                          }}\r\n                        >\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Back\r\n                          </span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Patient ID :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.hospitalNumber ||\r\n                            getUniqueId(props?.patientDetail)}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        Date Of Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.dateOfBirth ||\r\n                            getDateOfBirth(props?.patientDetail)}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Age :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {calculateAge(\r\n                            moment(\r\n                              patientObj?.dateOfBirth ||\r\n                                getDateOfBirth(props?.patientDetail)\r\n                            ).format('DD-MM-YYYY')\r\n                          )}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Gender :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.gender || getSex(props?.patientDetail)}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <span>\r\n                        {' '}\r\n                        Sex at Birth :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.sexAtBirth ||\r\n                            patientObj?.gender ||\r\n                            getSex(props?.patientDetail)}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Phone Number :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.phoneNumber ||\r\n                            getPhoneNumber(props?.patientDetail)}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    <Col md={6} className={classes.root2}>\r\n                      <span>\r\n                        {' '}\r\n                        Address :{' '}\r\n                        <b style={{ color: '#0B72AA' }}>\r\n                          {patientObj?.address ||\r\n                            getAddress(props?.patientDetail)}{' '}\r\n                        </b>\r\n                      </span>\r\n                    </Col>\r\n                    {patientObj?.prepStatus !== null && (\r\n                      <Col md={12}>\r\n                        <div>\r\n                          <Typography variant=\"caption\">\r\n                            <Label color={'teal'} size={'mini'}>\r\n                              STATUS :{' '}\r\n                              {props.activeContent?.obj?.newStatus?.display ||\r\n                                patientObj?.prepStatus}\r\n                            </Label>\r\n                          </Typography>\r\n                        </div>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p>Loading please wait..</p>\r\n                </>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </AccordionSummary>\r\n        <Divider />\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React from 'react';\r\n\r\nexport const useGetAddress = () => {\r\n  const getAddress = data => {\r\n    const address = data?.personResponseDto?.address?.address?.[0];\r\n    const city = address?.city || '';\r\n    const addressLine = address?.district || '';\r\n    const formattedAddress =\r\n      city.includes(addressLine) || !addressLine\r\n        ? city\r\n        : `${city}, ${addressLine}`;\r\n    return formattedAddress;\r\n  };\r\n  return { getAddress };\r\n};\r\nexport default useGetAddress;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { Menu, Popup } from 'semantic-ui-react';\r\n\r\nfunction SubMenu(props) {\r\n  const patientObj = props.patientObj;\r\n  useEffect(() => {\r\n    //Observation();\r\n  }, [props.patientObj]);\r\n\r\n  const loadPrEPDiscontinuationsInterruptions = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-interruptions',\r\n    });\r\n  };\r\n  const loadPrEPRegistrationForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-registration',\r\n    });\r\n  };\r\n  const loadPrEPCommencementForm = row => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'prep-commencement',\r\n    });\r\n  };\r\n  const loadPrEPEligibiltyScreeningForm = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'prep-screening' });\r\n  };\r\n\r\n  const onClickConsultation = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'consultation' });\r\n  };\r\n  const onClickHome = row => {\r\n    props.setActiveContent({ ...props.activeContent, route: 'recent-history' });\r\n  };\r\n  const loadPatientHistory = () => {\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: 'patient-history',\r\n    });\r\n  };\r\n  const history = useHistory();\r\n  useEffect(() => {});\r\n  return (\r\n    <div>\r\n      <Menu size=\"large\" color={'black'} inverted>\r\n        {patientObj?.createdBy !== 'ETL' ? ( //The menu will show if the patient is not migrated\r\n          <>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                onClickHome();\r\n              }}\r\n            >\r\n              Home\r\n            </Menu.Item>\r\n\r\n            {patientObj?.eligibilityCount <= 0 ||\r\n            patientObj?.eligibilityCount === null ? (\r\n              <>\r\n                <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                  PrEP Eligibility Screening\r\n                </Menu.Item>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {/* check if the patient has done prep commencement */}\r\n                {patientObj?.prepCount === '0' ||\r\n                patientObj?.commencementCount === null ? (\r\n                  <>\r\n                    {patientObj?.prepCount === '0' &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Menu.Item\r\n                      onClick={() => loadPrEPEligibiltyScreeningForm()}\r\n                    >\r\n                      {' '}\r\n                      PrEP Eligibility Screening{' '}\r\n                    </Menu.Item>\r\n                    {(patientObj?.prepCount === null ||\r\n                      patientObj?.prepCount < 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                          PrEP Enrollment\r\n                        </Menu.Item>\r\n                      )}\r\n                    {(patientObj?.commencementCount === null ||\r\n                      patientObj?.commencementCount <= 0) &&\r\n                      patientObj?.hivresultAtVisit === 'Negative' && (\r\n                        <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                          PrEP Commencement\r\n                        </Menu.Item>\r\n                      )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item onClick={() => onClickConsultation()}>\r\n                        {' '}\r\n                        PrEP Visit\r\n                      </Menu.Item>\r\n                    )}\r\n                    {patientObj?.hivresultAtVisit === 'Negative' && (\r\n                      <Menu.Item\r\n                        onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n                      >\r\n                        PrEP Discontinuations & Interruptions\r\n                      </Menu.Item>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {/* This menu will show only if the patient is migrated  and check if the patient last HIV test result is not positive*/}\r\n            <Menu.Item onClick={() => onClickHome()}>Home</Menu.Item>\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()}>\r\n                PrEP Eligibility Screening\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              patientObj?.prepCount === '0' && (\r\n                <Menu.Item onClick={() => loadPrEPRegistrationForm()}>\r\n                  PrEP Enrollment\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) &&\r\n              (patientObj?.commencementCount === null ||\r\n                patientObj?.commencementCount <= 0) && (\r\n                <Menu.Item onClick={() => loadPrEPCommencementForm()}>\r\n                  PrEP Commencement\r\n                </Menu.Item>\r\n              )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item onClick={() => onClickConsultation()}>\r\n                {' '}\r\n                PrEP Visit\r\n              </Menu.Item>\r\n            )}\r\n            {(patientObj?.hivresultAtVisit === 'Negative' ||\r\n              patientObj?.hivresultAtVisit === null) && (\r\n              <Menu.Item\r\n                onClick={() => loadPrEPDiscontinuationsInterruptions()}\r\n              >\r\n                PrEP Discontinuations & Interruptions\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={() => loadPatientHistory(patientObj)}>\r\n              History\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n// BS\r\nimport { Dropdown } from 'react-bootstrap';\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from '../../../api';\r\n//import { Alert } from \"react-bootstrap\";\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst RecentHistory = props => {\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [summary, setSummary] = useState(null);\r\n  const [saving, setSaving] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [record, setRecord] = useState(null);\r\n  const toggle = () => setOpen(!open);\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary();\r\n    RecentActivities();\r\n  }, [props?.patientObj?.personId]);\r\n\r\n  const RecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const Summary = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setSummary(response.data[0]);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  function countPrepEligibility(data) {\r\n    let count = 0;\r\n    let relevantActivities = ['Prep Commencement', 'Prep Clinic'];\r\n    data.forEach(entry => {\r\n      entry?.activities?.forEach(activity => {\r\n        if (relevantActivities.includes(activity?.name)) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  const ActivityName = name => {\r\n    if (name === 'HIV Enrollment') {\r\n      return 'HE';\r\n    } else if (name === 'Prep Clinic') {\r\n      return 'PC';\r\n    } else if (name === 'Prep Enrollment') {\r\n      return 'PE';\r\n    } else if (name === 'Prep Eligibility') {\r\n      return 'PE';\r\n    } else if (name === 'ART Commencement') {\r\n      return 'AC';\r\n    } else {\r\n      return 'RA';\r\n    }\r\n  };\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.path === 'prep-eligibility') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-screening',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-registration',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-clinic') {\r\n      //prep-commencement\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'consultation',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-commencement') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-commencement',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.path === 'prep-interruption') {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: 'prep-interruptions',\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  const LoadModal = row => {\r\n    toggle();\r\n    setRecord(row);\r\n  };\r\n  const LoadDeletePage = row => {\r\n    if (row.path === 'prep-eligibility') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-eligibility/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-clinic') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-enrollment') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-enrollment/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-commencement') {\r\n      setSaving(true);\r\n      axios\r\n        .delete(`${baseUrl}prep-clinic/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else if (row.path === 'prep-interruption') {\r\n      setSaving(true);\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n        .delete(`${baseUrl}prep-interruption/${row.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setSaving(false);\r\n          toast.success('Record Deleted Successfully');\r\n          RecentActivities();\r\n          toggle();\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== ''\r\n                ? error.response.data.apierror.message\r\n                : 'Something went wrong, please try again';\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error('Something went wrong. Please try again...');\r\n          }\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  function joinActivities(data) {\r\n    return data.reduce((acc, item) => {\r\n      return acc.concat(item.activities);\r\n    }, []);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\">\r\n              <h4 className=\"card-title\">Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: '370px' }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                  className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                  defaultActiveKey=\"0\"\r\n                >\r\n                  <>\r\n                    {recentActivities.map((data, i) => (\r\n                      <div className=\"accordion-item\" key={i}>\r\n                        <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? '' : 'collapsed'\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                        >\r\n                          <span className=\"accordion-header-icon\"></span>\r\n                          <span className=\"accordion-header-text\">\r\n                            Encounter Date :{' '}\r\n                            <span className=\"\">{data.date}</span>{' '}\r\n                          </span>\r\n                          <span className=\"accordion-header-indicator\"></span>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse\r\n                          eventKey={`${i}`}\r\n                          className=\"accordion__body\"\r\n                        >\r\n                          <div className=\"accordion-body-text\">\r\n                            <ul className=\"timeline\">\r\n                              {data?.activities &&\r\n                                data?.activities.map((activity, index) => (\r\n                                  <li key={activity.id}>\r\n                                    <div className=\"timeline-panel\">\r\n                                      <div\r\n                                        key={0}\r\n                                        className={\r\n                                          index % 2 === 0\r\n                                            ? 'media me-2 media-info'\r\n                                            : 'media me-2 media-success'\r\n                                        }\r\n                                      >\r\n                                        {ActivityName(data.name)}\r\n                                      </div>\r\n                                      <div key={1} className=\"media-body\">\r\n                                        <h5 className=\"mb-1\">\r\n                                          {activity.name}\r\n                                        </h5>\r\n                                        <small className=\"d-block\">\r\n                                          {activity.date}\r\n                                        </small>\r\n                                      </div>\r\n                                      <Dropdown className=\"dropdown\">\r\n                                        <Dropdown.Toggle\r\n                                          variant=\"light\"\r\n                                          className=\"i-false p-0 btn-info sharp\"\r\n                                        >\r\n                                          <svg\r\n                                            width=\"18px\"\r\n                                            height=\"18px\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            version=\"1.1\"\r\n                                          >\r\n                                            <g\r\n                                              stroke=\"none\"\r\n                                              strokeWidth=\"1\"\r\n                                              fill=\"none\"\r\n                                              fillRule=\"evenodd\"\r\n                                            >\r\n                                              <rect\r\n                                                x=\"0\"\r\n                                                y=\"0\"\r\n                                                width=\"24\"\r\n                                                height=\"24\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"5\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"12\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                              <circle\r\n                                                fill=\"#000000\"\r\n                                                cx=\"19\"\r\n                                                cy=\"12\"\r\n                                                r=\"2\"\r\n                                              />\r\n                                            </g>\r\n                                          </svg>\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"dropdown-menu\">\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'view')\r\n                                            }\r\n                                          >\r\n                                            View\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            onClick={() =>\r\n                                              LoadViewPage(activity, 'update')\r\n                                            }\r\n                                          >\r\n                                            Update\r\n                                          </Dropdown.Item>\r\n                                          <Dropdown.Item\r\n                                            className=\"dropdown-item\"\r\n                                            to=\"/widget-basic\"\r\n                                            onClick={() => LoadModal(activity)}\r\n                                          >\r\n                                            Delete\r\n                                          </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                      </Dropdown>\r\n                                    </div>\r\n                                  </li>\r\n                                ))}\r\n                            </ul>\r\n                          </div>\r\n                        </Accordion.Collapse>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                </Accordion>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"card-header border-0  pb-2\"\r\n              style={{ backgroundColor: '#EEEEEE' }}\r\n            >\r\n              <h4 className=\"card-title\">Summary </h4>\r\n            </div>\r\n            <div className=\"row\">\r\n              {\r\n                <>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"social-graph-wrapper widget-facebook\">\r\n                            <span className=\"s-icon\">\r\n                              <span style={{ fontSize: '16px' }}>\r\n                                Total Clinic Visit :{' '}\r\n                                {countPrepEligibility(recentActivities)}\r\n                              </span>\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-6 border-right\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.encounterDate}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Last Visit </b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                              <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                                <h4 className=\"m-1\">\r\n                                  <span className=\"counter\">\r\n                                    <b>{summary?.nextAppointment}</b>\r\n                                  </span>\r\n                                </h4>\r\n                                {summary && (\r\n                                  <p className=\"m-0\">\r\n                                    <b>Next Visit</b>\r\n                                  </p>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                        <div className=\"widget-stat card\">\r\n                          <div\r\n                            className=\"card-body p-4\"\r\n                            style={{ backgroundColor: '#fff' }}\r\n                          >\r\n                            <h4\r\n                              className=\"card-title\"\r\n                              style={{ fontSize: '15px' }}\r\n                            >\r\n                              <b>Current Regimen Given</b>\r\n                            </h4>\r\n                            <h4 className=\"text-info \">\r\n                              {summary ? summary?.regimen : 'NIL'}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"card overflow-hidden\">\r\n                        <div className=\"social-graph-wrapper widget-linkedin\">\r\n                          <span className=\"s-icon\">\r\n                            <span style={{ fontSize: '16px' }}>\r\n                              {\r\n                                <>\r\n                                  BMI :{' '}\r\n                                  {summary\r\n                                    ? (\r\n                                        summary?.weight /\r\n                                        ((summary?.height / 100) *\r\n                                          (summary?.height / 100))\r\n                                      ).toFixed(2)\r\n                                    : 'NIL'}{' '}\r\n                                  {summary && (\r\n                                    <>\r\n                                      kg/m<sup>2</sup>\r\n                                      <span></span>\r\n                                    </>\r\n                                  )}\r\n                                </>\r\n                              }\r\n                            </span>\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-6 border-right\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.weight : '0'} Kg\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Weight </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-6\">\r\n                            <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                              {summary && (\r\n                                <>\r\n                                  <h4 className=\"m-1\">\r\n                                    <span className=\"counter\">\r\n                                      {summary ? summary.height : '0'} cm\r\n                                    </span>\r\n                                  </h4>\r\n                                  <p className=\"m-0\">\r\n                                    <b>Height </b>\r\n                                  </p>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>\r\n            Are you Sure you want to delete <b>{record && record.name}</b>\r\n          </h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => LoadDeletePage(record)}\r\n            style={{ backgroundColor: 'red', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            {saving === false ? 'Yes' : 'Deleting...'}\r\n          </Button>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: '#014d88', color: '#fff' }}\r\n            disabled={saving}\r\n          >\r\n            No\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', recentActivities, id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-interruptions', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-interruption'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-interruption/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.editable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { FormGroup, Label, CardBody, Spinner, Input } from 'reactstrap';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport {\r\n  Card,\r\n  FormLabel,\r\n  makeStyles,\r\n  Button as MatButton,\r\n} from '@material-ui/core';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { Message, Dropdown } from 'semantic-ui-react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nimport {\r\n  savePrepEligibility,\r\n  getCounselingType,\r\n  getPatientPrepEligibility,\r\n  getVisitType,\r\n  getRecentActivities,\r\n  getPregnancyStatus,\r\n  getReasonForDecline,\r\n  getLiverFunctionTestResult,\r\n} from '../../../apiCalls/eligibility';\r\n\r\nimport '../../index.css';\r\nimport { getPopulationType } from '../../../apiCalls/eligibility';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nexport const DateInputWrapper = ({ children }) => {\r\n  const handleKeyDown = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clonedChildren = React.cloneElement(children, {\r\n    onKeydown: handleKeyDown,\r\n  });\r\n\r\n  return clonedChildren;\r\n};\r\nexport const LiverFunctionTest = ({\r\n  objValues,\r\n  handleInputChange,\r\n  disabledField,\r\n  liverFunctionTestResult,\r\n  isAutoPop,\r\n}) => {\r\n  const [selectedValues, setSelectedValues] = useState(\r\n    objValues?.liverFunctionTestResults\r\n  );\r\n\r\n  const handleChange = selected => {\r\n    setSelectedValues(selected);\r\n    handleInputChange({\r\n      target: { name: 'liverFunctionTestResults', value: selected },\r\n    });\r\n  };\r\n\r\n  const options = liverFunctionTestResult?.map(value => ({\r\n    value: value?.code,\r\n    label: value?.display,\r\n  }));\r\n  useEffect(() => {\r\n    setSelectedValues(objValues.liverFunctionTestResults);\r\n  }, [objValues.liverFunctionTestResults]);\r\n  return (\r\n    <DualListBox\r\n      options={options || []}\r\n      selected={selectedValues || []}\r\n      onChange={handleChange}\r\n      disabled={isAutoPop || disabledField}\r\n      canFilter\r\n    />\r\n  );\r\n};\r\n\r\nconst BasicInfo = props => {\r\n  const classes = useStyles();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [counselingType, setCounselingType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [reasonForDecline, setReasonForDecline] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n\r\n  let temp = { ...errors };\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    counselingType: '',\r\n    drugUseHistory: {},\r\n    extra: {},\r\n    firstTimeVisit: true,\r\n    hivRisk: {},\r\n    numChildrenLessThanFive: '',\r\n    numWives: '',\r\n    personId: '',\r\n    personalHivRiskAssessment: {},\r\n    sexPartner: 'TARGET_GROUP_GEN_POP',\r\n    sexPartnerRisk: {},\r\n    stiScreening: {},\r\n    targetGroup: 'TARGET_GROUP_GEN_POP',\r\n    uniqueId: '',\r\n    visitDate: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    populationType: '',\r\n    pregnancyStatus: '',\r\n    lftConducted: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    score: 0,\r\n  });\r\n  const [riskAssessment, setRiskAssessment] = useState({\r\n    unprotectedVaginalSexCasual: '',\r\n    unprotectedVaginalSexRegular: '',\r\n    uprotectedAnalSexWithCasual: '',\r\n    uprotectedAnalSexWithRegular: '',\r\n    stiHistory: '',\r\n    sharedNeedles: '',\r\n    moreThan1SexPartner: '',\r\n    analSexWithPartner: '',\r\n    unprotectedAnalSexWithPartner: '',\r\n    haveYouPaidForSex: '',\r\n    haveSexWithoutCondom: '',\r\n    experienceCondomBreakage: '',\r\n    takenPartInSexualOrgy: '',\r\n  });\r\n  const [riskAssessmentPartner, setRiskAssessmentPartner] = useState({\r\n    haveSexWithHIVPositive: '',\r\n    haveSexWithPartnerInjectDrug: '',\r\n    haveSexWithPartnerWhoHasSexWithMen: '',\r\n    haveSexWithPartnerTransgender: '',\r\n    sexWithPartnersWithoutCondoms: '',\r\n  });\r\n  const [stiScreening, setStiScreening] = useState({\r\n    vaginalDischarge: '',\r\n    lowerAbdominalPains: '',\r\n    urethralDischarge: '',\r\n    complaintsOfScrotal: '',\r\n    complaintsGenitalSore: '',\r\n    analDischarge: '',\r\n    analItching: '',\r\n    analpain: '',\r\n    swollenIguinal: '',\r\n    genitalScore: '',\r\n  });\r\n\r\n  const [drugHistory, setDrugHistory] = useState({\r\n    useAnyOfTheseDrugs: '',\r\n    inject: '',\r\n    sniff: '',\r\n    smoke: '',\r\n    Snort: '',\r\n    useDrugSexualPerformance: '',\r\n    hivTestedBefore: '',\r\n    recommendHivRetest: '',\r\n    clinicalSetting: '',\r\n    reportHivRisk: '',\r\n    hivExposure: '',\r\n    hivTestResultAtvisit: '',\r\n    lastTest: '',\r\n  });\r\n  const [assessmentForPepIndication, setAssessmentForPepIndication] = useState({\r\n    unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n    sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours: '',\r\n  });\r\n  const [servicesReceivedByClient, setServicesReceivedByClient] = useState({\r\n    willingToCommencePrep: '',\r\n    reasonsForDecline: [],\r\n    otherReasonsForDecline: '',\r\n  });\r\n  const [assessmentForAcuteHivInfection, setAssessmentForAcuteHivInfection] =\r\n    useState({\r\n      acuteHivSymptomsLasttwoWeeks: '',\r\n      unprotectedAnalOrVaginalOrSharedNeedlesLast28Days: '',\r\n    });\r\n  const [assessmentForPrepEligibility, setAssessmentForPrepEligibility] =\r\n    useState({\r\n      hivNegative: '',\r\n      hivRiskScore: '',\r\n      noIndicationForPep: '',\r\n      hasNoProteinuria: '',\r\n      noHistoryOrSignsOfLiverAbnormalitiesCabLa: '',\r\n      noHistoryOfDrugToDrugInteractionCabLa: '',\r\n      noHistoryOfDrugHypersensitivityCabLa: '',\r\n    });\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setCounselingType((await getCounselingType()).data);\r\n    setReasonForDecline((await getReasonForDecline()).data);\r\n    setPopulationType((await getPopulationType()).data);\r\n    setPregnancyStatus((await getPregnancyStatus()).data);\r\n    setVisitType((await getVisitType()).data);\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientPrepEligibility(props.activeContent.id);\r\n      setSisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  const getPatientPrepEligibility = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/eligibility/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const {\r\n          personalHivRiskAssessment,\r\n          sexPartnerRisk,\r\n          stiScreening,\r\n          drugUseHistory,\r\n          assessmentForPepIndication,\r\n          assessmentForAcuteHivInfection,\r\n          servicesReceivedByClient,\r\n          assessmentForPrepEligibility,\r\n        } = response.data;\r\n        setObjValues(response.data);\r\n        setRiskAssessment(personalHivRiskAssessment);\r\n        setRiskAssessmentPartner(sexPartnerRisk);\r\n        setStiScreening(stiScreening);\r\n        setDrugHistory(drugUseHistory);\r\n        setAssessmentForPepIndication(assessmentForPepIndication);\r\n        setAssessmentForAcuteHivInfection(assessmentForAcuteHivInfection);\r\n        setServicesReceivedByClient(servicesReceivedByClient);\r\n        setAssessmentForPrepEligibility(assessmentForPrepEligibility);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching patient eligibility data:', error);\r\n      });\r\n  };\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeRiskAssessment = e => {\r\n    setRiskAssessment({ ...riskAssessment, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualRiskCountTrue = Object.values(riskAssessment);\r\n  const riskCount = actualRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeRiskAssessmentPartner = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setRiskAssessmentPartner({\r\n      ...riskAssessmentPartner,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const actualSexPartRiskCountTrue = Object.values(riskAssessmentPartner);\r\n  const sexPartRiskCount = actualSexPartRiskCountTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeStiScreening = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setStiScreening({ ...stiScreening, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const actualStiTrue = Object.values(stiScreening);\r\n  const stiCount = actualStiTrue.filter(x => x === 'true');\r\n\r\n  const handleInputChangeDrugHistory = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    if (drugHistory.hivTestedBefore === 'true') {\r\n      setDrugHistory({ ...drugHistory, lastTest: '' });\r\n    }\r\n    setDrugHistory({ ...drugHistory, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPepIndication = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPepIndication({\r\n      ...assessmentForPepIndication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForAcuteHivInfection = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForAcuteHivInfection({\r\n      ...assessmentForAcuteHivInfection,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeAssessmentForPrepEligibility = e => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n    setAssessmentForPrepEligibility({\r\n      ...assessmentForPrepEligibility,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleInputChangeServicesReceivedByClient = (e, data) => {\r\n    setErrors({ ...temp, [e.target.name]: '' });\r\n\r\n    if (e.target.name === 'willingToCommencePrep') {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n        reasonsForDecline: [],\r\n      });\r\n    } else {\r\n      setServicesReceivedByClient({\r\n        ...servicesReceivedByClient,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputReasonsForDecline = (e, data) => {\r\n    setServicesReceivedByClient({\r\n      ...servicesReceivedByClient,\r\n      reasonsForDecline: data.value,\r\n    });\r\n  };\r\n\r\n  const validate = () => {\r\n    temp.visitDate = objValues.visitDate ? '' : '⚠ This field is required.';\r\n    temp.lftConducted = objValues.lftConducted\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.liverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      objValues.liverFunctionTestResults.length === 0\r\n        ? '⚠ LFT is required'\r\n        : '';\r\n    temp.dateLiverFunctionTestResults =\r\n      objValues.lftConducted === 'true' &&\r\n      !objValues.dateLiverFunctionTestResults\r\n        ? '⚠ This field is required.'\r\n        : '';\r\n    temp.sexPartner = objValues.sexPartner ? '' : '⚠ This field is required.';\r\n    temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit\r\n      ? ''\r\n      : '⚠ This field is required.';\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n    setErrors({ ...temp });\r\n\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.drugUseHistory = drugHistory;\r\n      objValues.personalHivRiskAssessment = riskAssessment;\r\n      objValues.sexPartnerRisk = riskAssessmentPartner;\r\n      objValues.stiScreening = stiScreening;\r\n      objValues.personId = props?.patientObj?.personId;\r\n      objValues.uniqueId = props?.patientObj?.uniqueId;\r\n      objValues.assessmentForAcuteHivInfection = assessmentForAcuteHivInfection;\r\n      objValues.assessmentForPepIndication = assessmentForPepIndication;\r\n      objValues.assessmentForPrepEligibility = assessmentForPrepEligibility;\r\n      objValues.servicesReceivedByClient = servicesReceivedByClient;\r\n      objValues.score = getPrepEligibilityScore();\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-eligibility/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            props.PatientObject();\r\n            toast.success('Prep eligilibility saved successfully! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/eligibility`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.eligibilityCount = 1;\r\n            props.patientObj.hivresultAtVisit =\r\n              drugHistory.hivTestResultAtvisit;\r\n            toast.success('Prep eligilibility saved successfull! ✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong ❌ please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong ❌ please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      setSaving(false);\r\n      toast.error('All field are required ⚠', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n\r\n  const is30AndAbove = () => {\r\n    return Number(props.patientObj.age) >= 30;\r\n  };\r\n\r\n  const getIndicationForPepResult = () => {\r\n    if (\r\n      assessmentForPepIndication !== null &&\r\n      assessmentForPepIndication !== undefined\r\n    ) {\r\n      return Object.values(assessmentForPepIndication).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getAcuteHivResult = () => {\r\n    if (\r\n      assessmentForAcuteHivInfection !== null &&\r\n      assessmentForAcuteHivInfection !== undefined\r\n    ) {\r\n      return Object.values(assessmentForAcuteHivInfection).filter(\r\n        each => each === 'true'\r\n      ).length > 0\r\n        ? 0\r\n        : 1;\r\n    }\r\n  };\r\n\r\n  const getPrepEligibilityScore = () => {\r\n    var score = 0;\r\n    score += drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0;\r\n    score += riskCount.length > 0 ? 1 : 0;\r\n    score += getAcuteHivResult();\r\n    score += getIndicationForPepResult();\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      score +=\r\n        assessmentForPrepEligibility?.hasNoProteinuria === 'true' ? 1 : 0;\r\n    }\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n    score +=\r\n      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n      'true'\r\n        ? 1\r\n        : 0;\r\n\r\n    if (is30AndAbove() && isFemale() === false) {\r\n      return score >= 8 ? 1 : 0;\r\n    } else {\r\n      return score >= 7 ? 1 : 0;\r\n    }\r\n  };\r\n\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getLiverFunctionTestResult();\r\n    getReasonForSwitch();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (objValues.lftConducted === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n    }\r\n  }, [objValues.lftConducted]);\r\n  useEffect(() => {\r\n    if (drugHistory.hivTestedBefore === 'false') {\r\n      setDrugHistory(prevHistory => ({\r\n        ...prevHistory,\r\n        lastTest: '',\r\n      }));\r\n    }\r\n  }, [drugHistory.hivTestedBefore]);\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <h1 style={{ fontSize: '1.1rem' }}>\r\n            PrEP Eligibility Screening Form\r\n          </h1>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit Date <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    className=\"form-control\"\r\n                    name=\"visitDate\"\r\n                    id=\"visitDate\"\r\n                    value={objValues.visitDate}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      props.patientDetail &&\r\n                      props.patientDetail.dateHivPositive !== null\r\n                        ? props.patientDetail.dateHivPositive\r\n                        : props.patientObj.dateOfRegistration\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.visitDate !== '' ? (\r\n                    <span className={classes.error}>{errors.visitDate}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Visit type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    value={objValues.visitType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {visitType.map(value => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>Reason for switch</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Population type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    value={objValues.populationType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {populationType.map(value => (\r\n                      <option key={value.code} value={value.code}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {isFemale() && (\r\n                <div className=\"form-group col-md-4 p-2\">\r\n                  <FormGroup className=\"p-2\">\r\n                    <Label>\r\n                      Pregnancy Status <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"pregnancyStatus\"\r\n                      id=\"pregnancyStatus\"\r\n                      value={objValues.pregnancyStatus}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      {pregnancyStatus.map(value => (\r\n                        <option key={value.code} value={value.code}>\r\n                          {' '}\r\n                          {value.display}{' '}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                    {errors.pregnancyStatus !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.pregnancyStatus}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Sex partners <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexPartner\"\r\n                    id=\"sexPartner\"\r\n                    value={objValues.sexPartner}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Both\">Both</option>\r\n                  </select>\r\n                  {errors.sexPartner !== '' ? (\r\n                    <span className={classes.error}>{errors.sexPartner}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {props.patientObj.gender === 'Male' ||\r\n                (props.patientObj.gender === 'male' && (\r\n                  <div className=\"form-group col-md-4 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label>Number of wives </Label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        name=\"numWives\"\r\n                        id=\"numWives\"\r\n                        value={objValues.numWives}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.numWives !== '' ? (\r\n                        <span className={classes.error}>{errors.numWives}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                ))}\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>\r\n                    Type of counseling <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"counselingType\"\r\n                    id=\"counselingType\"\r\n                    value={objValues.counselingType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    {counselingType.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {' '}\r\n                        {value.display}{' '}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {errors.counselingType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.counselingType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <FormLabel>Liver Function Test conducted</FormLabel>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"lftConducted\"\r\n                    id=\"lftConducted\"\r\n                    value={objValues.lftConducted}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value={true}>Yes</option>\r\n                    <option value={false}>No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.lftConducted !== '' ? (\r\n                  <span className={classes.error}>{errors.lftConducted}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              {objValues.lftConducted === 'true' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-8\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"liverFunctionTestResults\">\r\n                        Liver Function Tests Result\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <LiverFunctionTest\r\n                        objValues={objValues}\r\n                        handleInputChange={handleLftInputChange}\r\n                        liverFunctionTestResult={liverFunctionTestResult}\r\n                        disabledField={disabledField}\r\n                      />\r\n                      {errors.liverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.liverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-8 p-2\">\r\n                    <FormGroup className=\"p-2\">\r\n                      <Label for=\"dateLiverFunctionTestResults\">\r\n                        Date of Liver Function Tests Result{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateLiverFunctionTestResults\"\r\n                        id=\"dateLiverFunctionTestResults\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        value={objValues.dateLiverFunctionTestResults}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateLiverFunctionTestResults !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateLiverFunctionTestResults}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div\r\n                className=\"form-group my-4 col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                HIV Risk Assessment (Last 3 months)\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexCasual\"\r\n                    id=\"unprotectedVaginalSexCasual\"\r\n                    value={riskAssessment.unprotectedVaginalSexCasual}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexCasual !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexCasual}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-2\">\r\n                <FormGroup className=\"p-2\">\r\n                  <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedVaginalSexRegular\"\r\n                    id=\"unprotectedVaginalSexRegular\"\r\n                    value={riskAssessment.unprotectedVaginalSexRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedVaginalSexRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedVaginalSexRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with regular partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"uprotectedAnalSexWithRegular\"\r\n                    id=\"uprotectedAnalSexWithRegular\"\r\n                    value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.uprotectedAnalSexWithRegular !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.uprotectedAnalSexWithRegular}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>History of STI</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"stiHistory\"\r\n                    id=\"stiHistory\"\r\n                    value={riskAssessment.stiHistory}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.stiHistory !== '' ? (\r\n                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Shared needles/injecting materials</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedNeedles\"\r\n                    id=\"sharedNeedles\"\r\n                    value={riskAssessment.sharedNeedles}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedNeedles !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sharedNeedles}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>More than 1 sex partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThan1SexPartner\"\r\n                    id=\"moreThan1SexPartner\"\r\n                    value={riskAssessment.moreThan1SexPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThan1SexPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThan1SexPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal sex with Male/Female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analSexWithPartner\"\r\n                    id=\"analSexWithPartner\"\r\n                    value={riskAssessment.analSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Unprotected Anal sex with male/female partner</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalSexWithPartner\"\r\n                    id=\"unprotectedAnalSexWithPartner\"\r\n                    value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalSexWithPartner !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalSexWithPartner}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you paid for sex in the last 6 months?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveYouPaidForSex\"\r\n                    id=\"haveYouPaidForSex\"\r\n                    value={riskAssessment.haveYouPaidForSex}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveYouPaidForSex !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveYouPaidForSex}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you been paid for sex in the last 6 months?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                    value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.moreThanOneSexPartnerLastThreeMonths !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.moreThanOneSexPartnerLastThreeMonths}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you experienced condom breakage?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"experienceCondomBreakage\"\r\n                    id=\"experienceCondomBreakage\"\r\n                    value={riskAssessment.experienceCondomBreakage}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.experienceCondomBreakage !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.experienceCondomBreakage}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Have you taken part in sexual orgy?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"takenPartInSexualOrgy\"\r\n                    id=\"takenPartInSexualOrgy\"\r\n                    value={riskAssessment.takenPartInSexualOrgy}\r\n                    onChange={handleInputChangeRiskAssessment}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.takenPartInSexualOrgy !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.takenPartInSexualOrgy}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Personal HIV Risk assessment score (sum of all 7 answers)\r\n                </h4>\r\n                <b>Score : {riskCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Sex Partner Risk Assessment (Last 3 months)\r\n              </div>\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is HIV positive?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithHIVPositive\"\r\n                    id=\"haveSexWithHIVPositive\"\r\n                    value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithHIVPositive !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithHIVPositive}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who injects drugs?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerInjectDrug\"\r\n                    id=\"haveSexWithPartnerInjectDrug\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerInjectDrug !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerInjectDrug}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with men?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                    value={\r\n                      riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen\r\n                    }\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerWhoHasSexWithMen !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerWhoHasSexWithMen}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who is a transgender person?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"haveSexWithPartnerTransgender\"\r\n                    id=\"haveSexWithPartnerTransgender\"\r\n                    value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.haveSexWithPartnerTransgender !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.haveSexWithPartnerTransgender}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had sex with a partner who has sex with multiple\r\n                    partners without condoms?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sexWithPartnersWithoutCondoms\"\r\n                    id=\"sexWithPartnersWithoutCondoms\"\r\n                    value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                    onChange={handleInputChangeRiskAssessmentPartner}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sexWithPartnersWithoutCondoms !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.sexWithPartnersWithoutCondoms}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <Message warning>\r\n                <h4>\r\n                  Sex Partner Risk Assessment score (sum of all 6 answers)\r\n                </h4>\r\n                <b>Score: {sexPartRiskCount.length}</b>\r\n              </Message>\r\n\r\n              <hr />\r\n              <br />\r\n\r\n              <div\r\n                className=\"form-group col-md-12 text-center p-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PEP Indication\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 72 hours, have you had sex without a condom with\r\n                    someone whose HIV status is positive or not known to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.unprotectedSexWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you shared injection equipment like needles with\r\n                    someone whose HIV status is positive or unknown to you?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    id=\"sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\"\r\n                    value={\r\n                      assessmentForPepIndication?.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPepIndication}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {\r\n                        errors.sharedInjectionOrNeedleWithHivPositiveOrUnknownStatusLast72Hours\r\n                      }\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#992E62',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for Acute HIV Infection\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    In the past 2 weeks: Have you had a cold or flu such as\r\n                    fever, sore throat, abnormal sweats, swollen lymph nodes,\r\n                    mouth sores, headache or rash?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    id=\"acuteHivSymptomsLasttwoWeeks\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.acuteHivSymptomsLasttwoWeeks\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.acuteHivSymptomsLasttwoWeeks !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.acuteHivSymptomsLasttwoWeeks}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Have you had condomless anal or vaginal sex or shared\r\n                    injection materials and/or equipment in the past 28 days?\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    id=\"unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\"\r\n                    value={\r\n                      assessmentForAcuteHivInfection?.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForAcuteHivInfection}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days !==\r\n                  '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.unprotectedAnalOrVaginalOrSharedNeedlesLast28Days}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#000',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Drug Use History\r\n              </div>\r\n              <hr />\r\n              <h3>Route of Administration</h3>\r\n              <h4>Do you use any of these drugs/substances ?</h4>\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Inject</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"inject\"\r\n                      id=\"inject\"\r\n                      value={drugHistory.inject}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.inject !== '' ? (\r\n                      <span className={classes.error}>{errors.inject}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Sniff</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"sniff\"\r\n                      id=\"sniff\"\r\n                      value={drugHistory.sniff}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.sniff !== '' ? (\r\n                      <span className={classes.error}>{errors.sniff}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Snort</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"Snort\"\r\n                      id=\"Snort\"\r\n                      value={drugHistory.fever}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.Snort !== '' ? (\r\n                      <span className={classes.error}>{errors.Snort}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-6 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Smoke</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"smoke\"\r\n                      id=\"smoke\"\r\n                      value={drugHistory.smoke}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.smoke !== '' ? (\r\n                      <span className={classes.error}>{errors.smoke}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Have you used drugs to enhance sexual performance ?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"useDrugSexualPerformance\"\r\n                      id=\"useDrugSexualPerformance\"\r\n                      value={drugHistory.useDrugSexualPerformance}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.useDrugSexualPerformance !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.useDrugSexualPerformance}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Have you had HIV testing before ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestedBefore\"\r\n                      id=\"hivTestedBefore\"\r\n                      value={drugHistory.hivTestedBefore}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivTestedBefore !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestedBefore}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {drugHistory.hivTestedBefore === 'true' && (\r\n                  <div className=\"form-group col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>When was your last test?</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"lastTest\"\r\n                        id=\"lastTest\"\r\n                        value={drugHistory.lastTest}\r\n                        onChange={handleInputChangeDrugHistory}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"1 Month\">{'<'}1 Month</option>\r\n                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                        <option value=\"4-6Months\">4-6 Months</option>\r\n                        <option value=\"6Months\">{'>'}6 months</option>\r\n                      </select>\r\n                      {errors.lastTest !== '' ? (\r\n                        <span className={classes.error}>{errors.lastTest}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      HIV test result at visit{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivTestResultAtvisit\"\r\n                      id=\"hivTestResultAtvisit\"\r\n                      value={drugHistory.hivTestResultAtvisit}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"Positive\">Positive</option>\r\n                      <option value=\"Negative\">Negative</option>\r\n                    </select>\r\n                    {errors.hivTestResultAtvisit !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivTestResultAtvisit}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Recommended for HIV Retest ?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"recommendHivRetest\"\r\n                      id=\"recommendHivRetest\"\r\n                      value={drugHistory.recommendHivRetest}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.recommendHivRetest !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.recommendHivRetest}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Tested in certain Clinical settings, such as STI clinics?\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"clinicalSetting\"\r\n                      id=\"clinicalSetting\"\r\n                      value={drugHistory.clinicalSetting}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.clinicalSetting !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.clinicalSetting}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"reportHivRisk\"\r\n                      id=\"reportHivRisk\"\r\n                      value={drugHistory.reportHivRisk}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.reportHivRisk !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reportHivRisk}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group  col-md-4 p-3\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Report a specific HIV exposure within the last 3 months\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"hivExposure\"\r\n                      id=\"hivExposure\"\r\n                      value={drugHistory.hivExposure}\r\n                      onChange={handleInputChangeDrugHistory}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value={''}>Select</option>\r\n                      <option value=\"true\">Yes</option>\r\n                      <option value=\"false\">No</option>\r\n                    </select>\r\n                    {errors.hivExposure !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.hivExposure}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"col-md-12 text-center pt-2 mb-4\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Syndromic STI Screening\r\n              </div>\r\n              {props.patientDetail &&\r\n                props.patientDetail.personResponseDto.sex === 'Female' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of vaginal discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"vaginalDischarge\"\r\n                          id=\"vaginalDischarge\"\r\n                          value={stiScreening.vaginalDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.vaginalDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.vaginalDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of lower abdominal pains with or without\r\n                          vaginal discharge?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"lowerAbdominalPains\"\r\n                          id=\"lowerAbdominalPains\"\r\n                          value={stiScreening.lowerAbdominalPains}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.lowerAbdominalPains !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.lowerAbdominalPains}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              {props.patientObj.personResponseDto &&\r\n                props.patientDetail.personResponseDto.sex === 'Male' && (\r\n                  <>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of urethral discharge or burning when\r\n                          urinating?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"urethralDischarge\"\r\n                          id=\"urethralDischarge\"\r\n                          value={stiScreening.urethralDischarge}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.urethralDischarge !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.urethralDischarge}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>Complaints of scrotal swelling and pain</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsOfScrotal\"\r\n                          id=\"complaintsOfScrotal\"\r\n                          value={stiScreening.complaintsOfScrotal}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsOfScrotal !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsOfScrotal}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group  col-md-4 p-3\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Complaints of genital sore(s) or swollen inguinal\r\n                          lymph nodes with or without pains?\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"complaintsGenitalSore\"\r\n                          id=\"complaintsGenitalSore\"\r\n                          value={stiScreening.complaintsGenitalSore}\r\n                          onChange={handleInputChangeStiScreening}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </select>\r\n                        {errors.complaintsGenitalSore !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.complaintsGenitalSore}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Genital sore +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"genitalScore\"\r\n                    id=\"genitalScore\"\r\n                    value={stiScreening.genitalScore}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.genitalScore !== '' ? (\r\n                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"swollenIguinal\"\r\n                    id=\"swollenIguinal\"\r\n                    value={stiScreening.swollenIguinal}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.swollenIguinal !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.swollenIguinal}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal pain on stooling?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analpain\"\r\n                    id=\"analpain\"\r\n                    value={stiScreening.analpain}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analpain !== '' ? (\r\n                    <span className={classes.error}>{errors.analpain}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal itching?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analItching\"\r\n                    id=\"analItching\"\r\n                    value={stiScreening.analItching}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analItching !== '' ? (\r\n                    <span className={classes.error}>{errors.analItching}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>Anal discharge?</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"analDischarge\"\r\n                    id=\"analDischarge\"\r\n                    value={stiScreening.analDischarge}\r\n                    onChange={handleInputChangeStiScreening}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.analDischarge !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.analDischarge}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of the STI screening. If {'>= '}1, should be\r\n                  referred for STI test{' '}\r\n                </h4>\r\n                <b>Score :{stiCount.length}</b>\r\n              </Message>\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center pt-2 mb-4 p-3\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  height: '35px',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Assessment for PrEP Eligibilty\r\n              </div>\r\n\r\n              <div className=\"col-md-6 p-3\">\r\n                <div className=\"d-flex\">\r\n                  <div style={{ flex: 1 }}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        HIV Negative:{' '}\r\n                        <span className=\"badge badge-info\">{`${\r\n                          drugHistory.hivTestResultAtvisit === 'Negative'\r\n                            ? 1\r\n                            : 0\r\n                        }`}</span>{' '}\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div style={{ flex: 1 }}>\r\n                    <Label>\r\n                      HIV Risk Score &gt; 1:{' '}\r\n                      <span className=\"badge badge-info\">{`${\r\n                        riskCount.length > 0 ? 1 : 0\r\n                      }`}</span>\r\n                    </Label>\r\n                  </div>\r\n                </div>\r\n\r\n                {true && (\r\n                  <div className=\"form-group  col-md-4 p-3\">\r\n                    <FormGroup>\r\n                      <Label>{`Has no proteinuria (>=30 Years)`}</Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"hasNoProteinuria\"\r\n                        id=\"hasNoProteinuria\"\r\n                        value={assessmentForPrepEligibility?.hasNoProteinuria}\r\n                        onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.2rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value={''}>Select</option>\r\n                        <option value=\"true\">Yes</option>\r\n                        <option value=\"false\">No</option>\r\n                      </select>\r\n                      {errors.hasNoProteinuria !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.hasNoProteinuria}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group  col-md-6 p-3\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    {`No history/signs & symptoms of Liver abnormalities (CAB-LA)`}\r\n                  </Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    id=\"noHistoryOrSignsOfLiverAbnormalitiesCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOrSignsOfLiverAbnormalitiesCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-4 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of PrEP drug interaction (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    id=\"noHistoryOfDrugToDrugInteractionCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugToDrugInteractionCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugToDrugInteractionCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group  col-md-8 p-3\">\r\n                <FormGroup>\r\n                  <Label>{`No history of drug hypersensitivity (CAB-LA)`}</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    id=\"noHistoryOfDrugHypersensitivityCabLa\"\r\n                    value={\r\n                      assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa\r\n                    }\r\n                    onChange={handleInputChangeAssessmentForPrepEligibility}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.noHistoryOfDrugHypersensitivityCabLa !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.noHistoryOfDrugHypersensitivityCabLa}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility. If {'>= '}1 client is\r\n                  Eligible for PrEP. (Score: Count Yes=1, No=0).\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`HIV Negative: ${\r\n                  drugHistory.hivTestResultAtvisit === 'Negative' ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`HIV risk score >=1 : ${\r\n                  riskCount.length > 0 ? 1 : 0\r\n                }`}</h5>\r\n                <h5>{`No signs & symptoms of acute HIV infection: ${getAcuteHivResult()}`}</h5>\r\n                <h5>{`No Indication for PEP: ${getIndicationForPepResult()}`}</h5>\r\n                {is30AndAbove() && isFemale() === false && (\r\n                  <h5>{`Has no proteinuria: ${\r\n                    assessmentForPrepEligibility?.hasNoProteinuria === 'true'\r\n                      ? 1\r\n                      : 0\r\n                  }`}</h5>\r\n                )}\r\n              </Message>\r\n              <Message warning>\r\n                <h4>\r\n                  Calculate the sum of PrEP Eligibility for CAB-LA regimen. If\r\n                  the following below =1 client is Eligible for CAB-LA.{' '}\r\n                  {`(Score: Count Yes=1, No=0)`}\r\n                </h4>\r\n                {/* <b>Score :{stiCount.length}</b> */}\r\n                <h5>{`No history / signs & symptoms of Liver abnormalities (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOrSignsOfLiverAbnormalitiesCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of PrEP drug interaction (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugToDrugInteractionCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n                <h5>{`No history of drug hypersensitivity (CAB-LA): ${\r\n                  assessmentForPrepEligibility?.noHistoryOfDrugHypersensitivityCabLa ===\r\n                  'true'\r\n                    ? 1\r\n                    : 0\r\n                }`}</h5>\r\n              </Message>\r\n              {/* <Message warning>\r\n                                <h3>{`Final Prep Eligibility Score: ${getPrepEligibilityScore()}`}</h3>\r\n                            </Message> */}\r\n              <hr />\r\n              <br />\r\n              <div\r\n                className=\"form-group  col-md-12 text-center mb-4 p-2\"\r\n                style={{\r\n                  backgroundColor: '#014D88',\r\n                  width: '125%',\r\n                  color: '#fff',\r\n                  fontWeight: 'bold',\r\n                }}\r\n              >\r\n                Services Received by Client\r\n              </div>\r\n              <div className=\"form-group  col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Willing to commence PrEP</Label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    name=\"willingToCommencePrep\"\r\n                    id=\"willingToCommencePrep\"\r\n                    value={servicesReceivedByClient?.willingToCommencePrep}\r\n                    onChange={handleInputChangeServicesReceivedByClient}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value={''}>Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </select>\r\n                  {errors.willingToCommencePrep !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.willingToCommencePrep}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {/* <Dropdown placeholder='Skills' fluid multiple selection options={reasonForDecline} /> */}\r\n              {servicesReceivedByClient?.willingToCommencePrep === 'false' && (\r\n                <div className=\"form-group  col-md-4\">\r\n                  <FormGroup>\r\n                    <Label>Reasons for Declining PrEP</Label>\r\n                    <Dropdown\r\n                      value={servicesReceivedByClient?.reasonsForDecline}\r\n                      placeholder=\"select reasons for decline\"\r\n                      onChange={handleInputReasonsForDecline}\r\n                      fluid\r\n                      multiple\r\n                      selection\r\n                      options={reasonForDecline.map(each => {\r\n                        return {\r\n                          key: each.code,\r\n                          text: each.display,\r\n                          value: each.code,\r\n                        };\r\n                      })}\r\n                    />\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {servicesReceivedByClient?.reasonsForDecline?.find(\r\n                one => one === 'REASON_PREP_DECLINED_OTHERS_(SPECIFY)'\r\n              ) !== (null || undefined) && (\r\n                <div className=\"form-group  col-md-12 p-3\">\r\n                  <FormGroup>\r\n                    <Label>{`Other Reasons for Declining PrEP (Specify)`}</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"otherReasonsForDecline\"\r\n                      id=\"otherReasonsForDecline\"\r\n                      value={servicesReceivedByClient?.otherReasonsForDecline}\r\n                      onChange={handleInputChangeServicesReceivedByClient}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    />\r\n\r\n                    {errors.reasonsForDecline !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.reasonsForDecline}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              {saving ? <Spinner /> : ''}\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12 p-3\">\r\n                  {props.activeContent &&\r\n                  props.activeContent.actionType === 'update' ? (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Update\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Updating...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{ backgroundColor: '#014d88' }}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                      >\r\n                        {!saving ? (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Save\r\n                          </span>\r\n                        ) : (\r\n                          <span style={{ textTransform: 'capitalize' }}>\r\n                            Saving...\r\n                          </span>\r\n                        )}\r\n                      </MatButton>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;\r\n","import axios from 'axios';\r\nimport { token, url as baseUrl } from '../api';\r\n\r\nexport const getPatientPrepEligibility = async id => {\r\n  return await axios.get(`${baseUrl}prep/eligibility/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getCounselingType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getVisitType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getReasonForDecline = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/REASON_PREP_DECLINED`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getPopulationType = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getPregnancyStatus = async () => {\r\n  return await axios.get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n\r\nexport const getRecentActivities = async personId => {\r\n  return await axios.get(\r\n    `${baseUrl}prep/activities/patients/${personId}?full=true`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const getLiverFunctionTestResult = async () => {\r\n  return await axios.get(\r\n    `${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n};\r\n\r\nexport const savePrepEligibility = async (id, objValues, actionType) => {\r\n  const url =\r\n    actionType === 'update'\r\n      ? `${baseUrl}prep-eligibility/${id}`\r\n      : `${baseUrl}prep/eligibility`;\r\n  const method = actionType === 'update' ? 'put' : 'post';\r\n  return await axios[method](url, objValues, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Grid, Segment, Label } from 'semantic-ui-react';\r\nimport {\r\n  FormGroup,\r\n  Label as FormLabelName,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { makeStyles, Button as MatButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport Divider from '@mui/material/Divider';\r\nimport { TiTrash } from 'react-icons/ti';\r\nimport DualListBox from 'react-dual-listbox';\r\nimport 'react-dual-listbox/lib/react-dual-listbox.css';\r\nimport { LiverFunctionTest } from '../PrepServices/PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\nexport const CleanupWrapper = ({ isVisible, cleanup, children }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!isVisible) {\r\n        cleanup();\r\n      }\r\n    };\r\n  }, [isVisible, cleanup]);\r\n  return isVisible ? children : null;\r\n};\r\n\r\nconst ClinicVisit = props => {\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  const [labTestOptions, setLabTestOptions] = useState([]);\r\n  const [urineTestResult, setUrineTestResult] = useState([]);\r\n  const [creatinineTestResult, setCreatinineTestResult] = useState([]);\r\n  const [otherTestResult, setOtherTestResult] = useState([]);\r\n  const [sphylisTestResult, setSphylisTestResult] = useState([]);\r\n  const [hepaTestResult, setHepaTestResult] = useState([]);\r\n  const [familyPlanningMethod, setFamilyPlanningMethod] = useState([]);\r\n  const [pregnant, setpregnant] = useState([]);\r\n  const [prepEntryPoint, setPrepEntryPoints] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [populationType, setPopulationType] = useState([]);\r\n  const [visitType, setVisitType] = useState([]);\r\n  const [selectedPopulationType, setSelectedPopulationType] = useState('');\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n  const [hivTestValue, setHivTestValue] = useState('');\r\n  const [hivTestResultDate, setHivTestResultDate] = useState('');\r\n  const [reasonForSwitchOptions, setReasonForSwitchOptions] = useState([]);\r\n  const [prepRiskReductionPlan, setPrepRiskReductionPlan] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    diastolic: '',\r\n    height: '',\r\n    systolic: '',\r\n    pulse: '',\r\n    temperature: '',\r\n    respiratoryRate: '',\r\n  });\r\n\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: '',\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepGiven: '',\r\n    datePrepStart: '',\r\n    dateReferre: '',\r\n    diastolic: '',\r\n    encounterDate: '',\r\n    extra: {},\r\n    height: '',\r\n    hepatitis: {},\r\n    nextAppointment: '',\r\n    prepNotedSideEffects: [],\r\n    notedSideEffects: '',\r\n    wasPrepAdministered: '',\r\n    otherTestsDone: [],\r\n    personId: props.patientObj.personId,\r\n    pregnant: '',\r\n    prepEnrollmentUuid: '',\r\n    pulse: '',\r\n    referred: '',\r\n    regimenId: '',\r\n    otherRegimenId: '',\r\n    otherPrepGiven: '',\r\n    respiratoryRate: '',\r\n    riskReductionServices: '',\r\n    healthCareWorkerSignature: '',\r\n    stiScreening: '',\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: '',\r\n    temperature: '',\r\n    urinalysis: {},\r\n    creatinine: {},\r\n    urinalysisResult: '',\r\n    creatinineResult: '',\r\n    weight: '',\r\n    why: '',\r\n    otherDrugs: '',\r\n    prepGiven: '',\r\n    hivTestResult: '',\r\n    hivTestResultDate: '',\r\n    prepType: '',\r\n    otherPrepType: '',\r\n    populationType: '',\r\n    prepDistributionSetting: '',\r\n    familyPlanning: '',\r\n    dateOfFamilyPlanning: '',\r\n    monthsOfRefill: '',\r\n    visitType: '',\r\n    reasonForSwitch: '',\r\n    dateLiverFunctionTestResults: '',\r\n    liverFunctionTestResults: [],\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [creatinineTest, setCreatinineTest] = useState({\r\n    creatinineTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n    others: '',\r\n  });\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: 'No',\r\n    testDate: '',\r\n    result: '',\r\n  });\r\n\r\n  const [otherTest, setOtherTest] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  let temp = { ...errors };\r\n  let testsOptions = [];\r\n\r\n  const getPregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setpregnant(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoints(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFullPrepTypeList(response.data);\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getTestGroup = () => {\r\n    axios\r\n      .get(`${baseUrl}laboratory/labtestgroups`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        response?.data?.map(x => {\r\n          x?.labTests?.map(x2 => {\r\n            testsOptions.push({\r\n              value: x2.id,\r\n              label: x2.labTestName,\r\n              testGroupId: x.id,\r\n              testGroupName: x.groupName,\r\n              sampleType: x2.sampleType,\r\n            });\r\n          });\r\n        });\r\n        setLabTestOptions(testsOptions);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getReasonForSwitch = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_METHOD_SWITCH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForSwitchOptions(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const [fullPrepTypeList, setFullPrepTypeList] = useState([]);\r\n  const checkEligibleForCabLa = async (currentDate, regimenList) => {\r\n    if (currentDate) {\r\n      await axios\r\n        .get(\r\n          `${baseUrl}prep-clinic/checkEnableCab/${props.patientObj.personId}/${currentDate}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then(response => {\r\n          let isEligibleForCABLA = response?.data;\r\n          let reg = regimenList?.filter(\r\n            each => each.code !== 'CAB-LA(600mg/3mL)'\r\n          );\r\n          let pTypes = [...prepType]?.filter(\r\n            each => each.code !== 'PREP_TYPE_INJECTIBLES'\r\n          );\r\n          if (\r\n            isEligibleForCABLA ||\r\n            objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' ||\r\n            ['update'].includes(props.activeContent.actionType)\r\n          ) {\r\n            setPrepType(fullPrepTypeList);\r\n            setprepRegimen(regimenList);\r\n          } else {\r\n            setPrepType(pTypes);\r\n            setprepRegimen(reg);\r\n          }\r\n          return response?.data;\r\n        })\r\n        .catch(error => {});\r\n    }\r\n  };\r\n\r\n  const getPatientVisit = async id => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        const { data } = JSON.parse(JSON.stringify(response));\r\n        setUrinalysisTest(data.urinalysis);\r\n        setOtherTest(data?.otherTestsDone);\r\n        setObjValues(data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHivResult = () => {\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/hts-record/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        if (response.data?.length === 0) {\r\n          toast.error(\r\n            '⚠ No HTS record found. Atleast, 1 test result is required to proceed'\r\n          );\r\n        } else if (response.data?.length > 0) {\r\n          toast.success('👍 HTS record found. You may proceed ✔');\r\n        }\r\n        setHivTestValue(response?.data?.[0]?.hivTestResult);\r\n        setHivTestResultDate(response?.data?.[0]?.visitDate);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPatientDtoObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepEligibilityObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        objValues.prepEnrollmentUuid = '';\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const PrepRegimen = currentDate => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        checkEligibleForCabLa(currentDate, response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  const getPrepStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepRiskReductionPlan = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_RISK_REDUCTION_PLAN`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRiskReductionPlan(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepSideEffects = async () => {\r\n    return await axios.get(\r\n      `${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n      {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      }\r\n    );\r\n  };\r\n\r\n  const getHts = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n  function sortByVisitDateDescending(data) {\r\n    return data.sort((a, b) => {\r\n      const dateA = new Date(a.visitDate);\r\n      const dateB = new Date(b.visitDate);\r\n      return dateB - dateA;\r\n    });\r\n  }\r\n  const getLatestFromEligibility = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-eligibility/person/${objValues?.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(async response => {\r\n        const latestEligibility = sortByVisitDateDescending(response?.data)[0];\r\n        setLatestFromEligibility(latestEligibility);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPopulationType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POPULATION_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPopulationType(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getVisitType = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_VISIT_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setVisitType(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getWhyPoorFairAdherence = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyndromicStiScreening = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSti(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getCreatinineTestResultOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CREATININE_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCreatinineTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getPrepOtherTests = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_OTHER_TEST`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setOtherTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getSyphilisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SYPHILIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSphylisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getHapetitisScreeningResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HEPATITIS_SCREENING_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setHepaTestResult(response?.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const getFamilyPlanningMethod = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FAMILY_PLANNING_METHOD`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setFamilyPlanningMethod(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  async function getAdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setAdherenceLevel(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  const [eligibilityVisitDateSync, setEligibilityVisitDateSync] =\r\n    useState(false);\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value);\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: `${durationInDays}`,\r\n      });\r\n    } else if (e.target.name === 'encounterDate') {\r\n      setEligibilityVisitDateSync(\r\n        areDatesInSync(e.target.value, latestFromEligibility?.visitDate)\r\n      );\r\n      PrepRegimen(e.target.value);\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      checkDateMismatch(e.target.value, latestFromEligibility?.visitDate);\r\n    } else if (e.target.name === 'otherPrepGiven') {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    } else {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const checkDateMismatch = (visitDate, eligibilityDate) => {\r\n    if (visitDate !== eligibilityDate) {\r\n      toast.error(\r\n        '⚠ Please enter a date that matches the latest eligibility date!'\r\n      );\r\n    } else {\r\n      toast.success(\r\n        'The visit date matches the latest eligibility date. Great job! 👍'\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!eligibilityVisitDateSync) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: '',\r\n        visitType: '',\r\n        pregnant: '',\r\n        liverFunctionTestResults: [],\r\n        dateLiverFunctionTestResults: '',\r\n      }));\r\n      setSelectedPopulationType('');\r\n    }\r\n  }, [eligibilityVisitDateSync]);\r\n\r\n  const handleInputChangeUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeCreatinineTest = e => {\r\n    setErrors({\r\n      ...errors,\r\n      creatinineResult: '',\r\n      creatinineTestDate: '',\r\n    });\r\n    setCreatinineTest({ ...creatinineTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeOtherTest = (e, localId) => {\r\n    let temp = [...otherTest];\r\n    let index = temp.findIndex(x => Number(x.localId) === Number(localId));\r\n    temp[index][e.target.name] = e.target.value;\r\n    setOtherTest(temp);\r\n  };\r\n  const handleRemoveTest = localId => {\r\n    setOtherTest(prev => prev?.filter(test => test.localId !== localId));\r\n  };\r\n  const handleInputChangeHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleInputChangeSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'result' && e.target.value !== 'Others') {\r\n      syphilisTest.others = '';\r\n      setSyphilisTest({ ...syphilisTest, ['others']: '' });\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n    setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n  };\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (urinalysisTest?.urinalysisTest === 'Yes') {\r\n      setUrinalysisTest({ urinalysisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setUrinalysisTest({ ...urinalysisTest, urinalysisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxCreatinineTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (creatinineTest?.creatinineTest === 'Yes') {\r\n      setCreatinineTest({ creatinineTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setCreatinineTest({ ...creatinineTest, creatinineTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (syphilisTest?.syphilisTest === 'Yes') {\r\n      setSyphilisTest({\r\n        syphilisTest: 'No',\r\n        testDate: '',\r\n        result: '',\r\n        others: '',\r\n      });\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, syphilisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (hepatitisTest?.hepatitisTest === 'Yes') {\r\n      setHepatitisTest({ hepatitisTest: 'No', testDate: '', result: '' });\r\n    } else {\r\n      setHepatitisTest({ ...hepatitisTest, hepatitisTest: 'Yes' });\r\n    }\r\n  };\r\n\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (otherTest.length > 0) {\r\n      setOtherTest([]);\r\n    } else {\r\n      setOtherTest([\r\n        ...otherTest,\r\n        ...objValues.otherTestsDone,\r\n        {\r\n          localId: objValues.otherTestsDone?.length || 0,\r\n          otherTest: 'Yes',\r\n          testDate: '',\r\n          result: '',\r\n          name: '',\r\n          otherTestName: '',\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const otherTestInputRef = useRef();\r\n\r\n  const handleInputValueCheckHeight = e => {\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        '⚠ Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckweight = e => {\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        '⚠ Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckSystolic = e => {\r\n    if (\r\n      e.target.name === 'systolic' &&\r\n      (e.target.value < 90 || e.target.value > 240)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure systolic must not be greater than 240 and less than 90';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, systolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckDiastolic = e => {\r\n    if (\r\n      e.target.name === 'diastolic' &&\r\n      (e.target.value < 60 || e.target.value > 140)\r\n    ) {\r\n      const message =\r\n        '⚠ Blood Pressure diastolic must not be greater than 140 and less than 60';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, diastolic: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckPulse = e => {\r\n    if (\r\n      e.target.name === 'pulse' &&\r\n      (e.target.value < 40 || e.target.value > 120)\r\n    ) {\r\n      const message = '⚠ Pulse must not be greater than 120 and less than 40';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, pulse: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckRespiratoryRate = e => {\r\n    if (\r\n      e.target.name === 'respiratoryRate' &&\r\n      (e.target.value < 10 || e.target.value > 70)\r\n    ) {\r\n      const message =\r\n        '⚠ Respiratory Rate must not be greater than 70 and less than 10';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        respiratoryRate: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, respiratoryRate: '' });\r\n    }\r\n  };\r\n  const handleInputValueCheckTemperature = e => {\r\n    if (\r\n      e.target.name === 'temperature' &&\r\n      (e.target.value < 35 || e.target.value > 47)\r\n    ) {\r\n      const message =\r\n        '⚠ Temperature must not be greater than 47 and less than 35';\r\n      setVitalClinicalSupport({\r\n        ...vitalClinicalSupport,\r\n        temperature: message,\r\n      });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, temperature: '' });\r\n    }\r\n  };\r\n\r\n  const emptyObjValues = () => {\r\n    setObjValues({\r\n      adherenceLevel: '',\r\n      dateInitialAdherenceCounseling: '',\r\n      datePrepGiven: '',\r\n      datePrepStart: '',\r\n      dateReferre: '',\r\n      diastolic: '',\r\n      encounterDate: '',\r\n      extra: {},\r\n      height: '',\r\n      hepatitis: {},\r\n      nextAppointment: '',\r\n      notedSideEffects: '',\r\n      prepNotedSideEffects: '',\r\n      otherTestsDone: [],\r\n      personId: props.patientObj.personId,\r\n      pregnant: '',\r\n      prepEnrollmentUuid: '',\r\n      pulse: '',\r\n      referred: '',\r\n      regimenId: '',\r\n      respiratoryRate: '',\r\n      riskReductionServices: '',\r\n      stiScreening: '',\r\n      syndromicStiScreening: null,\r\n      syphilis: {},\r\n      systolic: '',\r\n      temperature: '',\r\n      urinalysis: {},\r\n      urinalysisResult: '',\r\n      creatinine: {},\r\n      creatinineResult: '',\r\n      weight: '',\r\n      why: '',\r\n      otherDrugs: '',\r\n      hivTestResult: '',\r\n      duration: '',\r\n      prepGiven: '',\r\n      prepDistributionSetting: '',\r\n      visitType: '',\r\n    });\r\n    setUrinalysisTest({});\r\n    setCreatinineTest({});\r\n    setSyphilisTest({});\r\n    setHepatitisTest({});\r\n    setOtherTest([]);\r\n  };\r\n  const isFemale = () => {\r\n    return props.patientObj.gender.toLowerCase() === 'female';\r\n  };\r\n  const validate = () => {\r\n    temp.lastHts = hivTestValue\r\n      ? ''\r\n      : '⚠ Atleast, 1 HIV test result is required';\r\n    temp.monthsOfRefill = objValues.monthsOfRefill\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.prepType = objValues.prepType ? '' : '⚠ This field is required';\r\n    temp.wasPrepAdministered = objValues.wasPrepAdministered\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    hasPrepEligibility(temp.encounterDate, props.encounters);\r\n    temp.encounterDate = objValues.encounterDate\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    if (isFemale()) {\r\n      temp.pregnant = objValues.pregnant ? '' : '⚠ This field is required';\r\n    }\r\n    temp.nextAppointment = objValues.nextAppointment\r\n      ? ''\r\n      : '⚠ This field is required';\r\n\r\n    temp.height = objValues.height ? '' : '⚠ This field is required';\r\n    if (objValues.prepType === 'PREP_TYPE_INJECTIBLES') {\r\n      temp.otherPrepGiven = objValues.otherPrepGiven\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    }\r\n    temp.weight = objValues.weight ? '' : '⚠ This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : '⚠ This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.populationType = objValues.populationType\r\n      ? ''\r\n      : '⚠ This field is required';\r\n    temp.visitType = objValues.visitType ? '' : '⚠ This field is required';\r\n\r\n    if (objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH') {\r\n      temp.reasonForSwitch = objValues.reasonForSwitch\r\n        ? ''\r\n        : '⚠ This field is required';\r\n    } else {\r\n      temp.reasonForSwitch = '';\r\n    }\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    updatePreviousPrepStatusAndSubmit(\r\n      props.patientObj?.personUuid,\r\n      props.patientObj?.prepStatus\r\n    );\r\n  };\r\n\r\n  const handleCreateNewTest = () => {\r\n    setOtherTest([\r\n      ...otherTest,\r\n      {\r\n        localId: otherTest.length,\r\n        otherTest: 'Yes',\r\n        testDate: '',\r\n        result: '',\r\n        name: '',\r\n        otherTestName: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      PrepRegimen(objValues.encounterDate);\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          checkEligibleForCabLa(objValues.encounterDate, response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  function areDatesSame(date1, date2) {\r\n    return (\r\n      date1.getFullYear() === date2.getFullYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    );\r\n  }\r\n  function hasPrepEligibility(targetDate, activitiesArray) {\r\n    for (const activityGroup of activitiesArray) {\r\n      for (const activity of activityGroup?.activities) {\r\n        if (\r\n          activity.name === 'Prep Eligibility' &&\r\n          areDatesSame(new Date(activity.date), new Date(targetDate))\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getRecentActivities = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setRecentActivities(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const filterOutLastRegimen = (codeSet, lastRegimenId) =>\r\n    codeSet?.filter(regimen => regimen.id !== lastRegimenId);\r\n\r\n  const prepRegimenUpdateView = () =>\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  const getLiverFunctionTestResult = () =>\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.activeContent.actionType === '' ||\r\n      props.activeContent.actionType === null\r\n    ) {\r\n      emptyObjValues();\r\n    }\r\n  }, [props.activeContent.actionType]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      objValues.populationType !== null &&\r\n      objValues.populationType !== undefined\r\n    ) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === objValues.populationType\r\n      );\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [objValues.populationType]);\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility !== null) {\r\n      const autoPopulate = populationType?.find(\r\n        type => type.code === latestFromEligibility?.populationType\r\n      );\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        populationType: latestFromEligibility?.populationType || '',\r\n        visitType: latestFromEligibility?.visitType || '',\r\n        monthsOfRefill:\r\n          visitTypeDurationMapping[`${latestFromEligibility?.visitType}`] || '',\r\n        reasonForSwitch: latestFromEligibility?.reasonForSwitch || '',\r\n        pregnant: latestFromEligibility?.pregnancyStatus || '',\r\n      }));\r\n\r\n      setSelectedPopulationType(autoPopulate ? autoPopulate.display : '');\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync, populationType]);\r\n\r\n  useEffect(() => {\r\n    const updateTest = (testType, setTestFunction) => {\r\n      const testData = objValues[testType];\r\n      if (\r\n        testData?.testDate &&\r\n        testData?.result &&\r\n        testData?.[`${testType}Test`]\r\n      ) {\r\n        setTestFunction({\r\n          ...testData,\r\n          testDate: testData.testDate,\r\n          result: testData.result,\r\n          [`${testType}Test`]: testData[`${testType}Test`],\r\n        });\r\n      }\r\n    };\r\n\r\n    updateTest('urinalysis', setUrinalysisTest);\r\n    updateTest('creatinine', setCreatinineTest);\r\n    updateTest('syphilis', setSyphilisTest);\r\n    updateTest('hepatitis', setHepatitisTest);\r\n  }, [objValues]);\r\n\r\n  useEffect(async () => {\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPrepEligibilityObj(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(async () => {\r\n    setPrepRiskReductionPlan((await getPrepRiskReductionPlan())?.data);\r\n    setAdherenceLevel((await getAdherenceLevel())?.data);\r\n    setPrepRiskReductionPlan(getSyndromicStiScreening()?.data);\r\n    setPrepStatus(getPrepStatus()?.data);\r\n    setHtsResult(getHts()?.data);\r\n    setPrepSideEffect((await getPrepSideEffects())?.data);\r\n    setPatientDto(getPatientDtoObj()?.data);\r\n    setWhyAdherenceLevelPoor(getWhyPoorFairAdherence()?.data);\r\n    getPrepEligibilityObj();\r\n    setLabTestOptions(getTestGroup()?.data);\r\n    setUrineTestResult(getPrepUrinalysisResult()?.data);\r\n    setOtherTestResult(getPrepOtherTests()?.data);\r\n    setHepaTestResult(getHapetitisScreeningResult()?.data);\r\n    setSyphilisTest(getSyphilisResult()?.data);\r\n    setpregnant(getPregnancyStatus()?.data);\r\n    setPrepEntryPoints(getPrepEntryPoint()?.data);\r\n    getPrepType();\r\n    setPopulationType(getPopulationType().data);\r\n    setVisitType(getVisitType()?.data);\r\n    setFamilyPlanningMethod(getFamilyPlanningMethod()?.data);\r\n    getPatientVisit(props.activeContent.id);\r\n    setDisabledField(\r\n      !['update', undefined].includes(props.activeContent.actionType)\r\n    );\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => {\r\n    getRecentActivities();\r\n    getHivResult();\r\n    getReasonForSwitch();\r\n    getCreatinineTestResultOptions();\r\n    getLiverFunctionTestResult();\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (['update', 'view'].includes(props.activeContent.actionType))\r\n      prepRegimenUpdateView();\r\n  }, [props.activeContent.actionType]);\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (eligibilityVisitDateSync && latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults,\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility, eligibilityVisitDateSync]);\r\n\r\n  function areDatesInSync(date1, date2) {\r\n    return date1 === date2;\r\n  }\r\n  const getOptions = () => {\r\n    switch (objValues.otherPrepType) {\r\n      case 'PREP_TYPE_ORAL':\r\n        return <option value=\"1\">TDF(300mg)+3TC(300mg)</option>;\r\n      case 'PREP_TYPE_INJECTIBLES':\r\n        return <option value=\"2\">IM CAB-LA(600mg/3mL)</option>;\r\n      case 'PREP_TYPE_ED_PREP':\r\n        return (\r\n          <>\r\n            <option value=\"2\">IM CAB-LA(600mg/3mL)</option>\r\n            <option value=\"1\">TDF(300mg)+3TC(300mg)</option>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const [notedSideEffects, setNotedSideEffects] = useState([]);\r\n  const handleNotedSideEffectsChange = selected => {\r\n    setNotedSideEffects(selected);\r\n    setObjValues({ ...objValues, notedSideEffects: selected });\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setObjValues(prev => ({\r\n        ...prev,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (objValues.otherPrepGiven === 'false') {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        otherPrepType: '',\r\n        otherRegimenId: '',\r\n      }));\r\n    }\r\n  }, [objValues.otherPrepGiven]);\r\n\r\n  const visitTypeDurationMapping = {\r\n    PREP_VISIT_TYPE_DISCONTINUATION: null,\r\n    'PREP_VISIT_TYPE_DISCONTINUATION_FOLLOW-UP': null,\r\n    PREP_VISIT_TYPE_INITIATION: 30,\r\n    PREP_VISIT_TYPE_METHOD_SWITCH: null,\r\n    PREP_VISIT_TYPE_NO_PREP_PROVIDED: null,\r\n    'PREP_VISIT_TYPE_REFILL_RE-INJECTION': 60,\r\n    PREP_VISIT_TYPE_RESTART: 30,\r\n    PREP_VISIT_TYPE_SECOND_INITIATION: 60,\r\n    PREP_VISIT_TYPE_TRANSFER_IN: null,\r\n  };\r\n  function addDaysToDate(dateString, daysToAdd) {\r\n    const date = new Date(dateString);\r\n    if (\r\n      isNaN(date.getTime()) ||\r\n      typeof daysToAdd !== 'number' ||\r\n      isNaN(daysToAdd)\r\n    ) {\r\n      return '';\r\n    }\r\n    date.setDate(date.getDate() + daysToAdd);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let nextAppointment = addDaysToDate(\r\n      objValues.encounterDate,\r\n      objValues.monthsOfRefill\r\n    );\r\n    setObjValues(prev => ({ ...prev, nextAppointment }));\r\n  }, [objValues.encounterDate, objValues.monthsOfRefill]);\r\n\r\n  async function updatePreviousPrepStatusAndSubmit(personUuid, previousStatus) {\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.duration = objValues.monthsOfRefill;\r\n      objValues.hivTestResultDate = hivTestResultDate;\r\n      objValues.hivTestResult = hivTestValue;\r\n      objValues.syphilis = syphilisTest;\r\n      objValues.hepatitis = hepatitisTest;\r\n      objValues.urinalysis = urinalysisTest;\r\n      objValues.creatinine = creatinineTest;\r\n      objValues.otherTestsDone = otherTest;\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      objValues.prepNotedSideEffects = notedSideEffects;\r\n      objValues.notedSideEffects = '';\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        try {\r\n          const updateResponse = await axios.put(\r\n            `${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          toast.success('Clinic visit updated successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      } else {\r\n        try {\r\n          const postResponse = await axios.post(\r\n            `${baseUrl}prep/clinic-visit`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          );\r\n          setSaving(false);\r\n          emptyObjValues();\r\n          toast.success('Clinic Visit saved successfully! ✔', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n          props.setActiveContent({\r\n            ...props.activeContent,\r\n            route: 'consultation',\r\n            activeTab: 'history',\r\n            actionType: 'view',\r\n          });\r\n        } catch (error) {\r\n          handleError(error);\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  function handleError(error) {\r\n    setSaving(false);\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again';\r\n      toast.error(errorMessage, {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    } else {\r\n      toast.error('Something went wrong ❌ please try again...', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`${classes.root} container-fluid`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2 className=\"p-2\">Clinic Follow-up Visit</h2>\r\n        </div>\r\n      </div>\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Segment>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"blue\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}>VITAL SIGNS</h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Visit <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    value={objValues.encounterDate}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handleInputChange}\r\n                    min={\r\n                      patientDto && patientDto.dateEnrolled\r\n                        ? patientDto.dateEnrolled\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.encounterDate !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.encounterDate}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Pulse</FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"pulse\"\r\n                        id=\"pulse\"\r\n                        onChange={handleInputChange}\r\n                        min=\"40\"\r\n                        max=\"120\"\r\n                        value={objValues.pulse}\r\n                        onKeyUp={handleInputValueCheckPulse}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                          borderTopRightRadius: '0',\r\n                          borderBottomRightRadius: '0',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.pulse !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.pulse}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.pulse !== '' ? (\r\n                      <span className={classes.error}>{errors.pulse}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Respiratory Rate </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"respiratoryRate\"\r\n                        id=\"respiratoryRate\"\r\n                        onChange={handleInputChange}\r\n                        min=\"10\"\r\n                        max=\"70\"\r\n                        value={objValues.respiratoryRate}\r\n                        onKeyUp={handleInputValueCheckRespiratoryRate}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        bmp\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.respiratoryRate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.respiratoryRate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\" mb-3 col-md-4\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Temperature </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"temperature\"\r\n                        id=\"temperature\"\r\n                        onChange={handleInputChange}\r\n                        min=\"35\"\r\n                        max=\"47\"\r\n                        value={objValues.temperature}\r\n                        onKeyUp={handleInputValueCheckTemperature}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <sup>o</sup>c\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.temperature !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.temperature}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <div className=\" mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Body Weight <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"weight\"\r\n                        id=\"weight\"\r\n                        onChange={handleInputChange}\r\n                        min=\"3\"\r\n                        max=\"150\"\r\n                        value={objValues.weight}\r\n                        onKeyUp={handleInputValueCheckweight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        kg\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.weight !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.weight}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.weight !== '' ? (\r\n                      <span className={classes.error}>{errors.weight}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-5\">\r\n                  <FormGroup>\r\n                    <FormLabelName>\r\n                      Height <span style={{ color: 'red' }}> *</span>\r\n                    </FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLeftRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        cm\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"height\"\r\n                        id=\"height\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.height}\r\n                        min=\"48.26\"\r\n                        max=\"216.408\"\r\n                        onKeyUp={handleInputValueCheckHeight}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#992E62',\r\n                          color: '#fff',\r\n                          border: '1px solid #992E62',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        {objValues.height !== ''\r\n                          ? (objValues.height / 100).toFixed(2) + 'm'\r\n                          : 'm'}\r\n                      </InputGroupText>\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.height !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.height}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.height !== '' ? (\r\n                      <span className={classes.error}>{errors.height}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                  {objValues.weight !== '' && objValues.height !== '' && (\r\n                    <FormGroup>\r\n                      <Label> </Label>\r\n                      <InputGroup>\r\n                        <InputGroupText\r\n                          addonType=\"append\"\r\n                          style={{\r\n                            backgroundColor: '#014D88',\r\n                            color: '#fff',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                        >\r\n                          BMI :{' '}\r\n                          {(\r\n                            objValues.weight /\r\n                            ((objValues.height / 100) *\r\n                              (objValues.height / 100))\r\n                          ).toFixed(2)}\r\n                        </InputGroupText>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Blood Pressure</FormLabelName>\r\n                    <InputGroup>\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopLefttRadius: '0.25rem',\r\n                          borderBottomLeftRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        systolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"systolic\"\r\n                        id=\"systolic\"\r\n                        min=\"90\"\r\n                        max=\"240\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.systolic}\r\n                        onKeyUp={handleInputValueCheckSystolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n\r\n                      <InputGroupText\r\n                        addonType=\"append\"\r\n                        style={{\r\n                          backgroundColor: '#014D88',\r\n                          color: '#fff',\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                        }}\r\n                      >\r\n                        diastolic(mmHg)\r\n                      </InputGroupText>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"diastolic\"\r\n                        id=\"diastolic\"\r\n                        min={0}\r\n                        max={140}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.diastolic}\r\n                        onKeyUp={handleInputValueCheckDiastolic}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0rem',\r\n                          borderTopRightRadius: '0.25rem',\r\n                          borderBottomRightRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </InputGroup>\r\n                    {vitalClinicalSupport.systolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.systolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.systolic !== '' ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n\r\n                    {vitalClinicalSupport.diastolic !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {vitalClinicalSupport.diastolic}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    {errors.diastolic !== '' ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                {isFemale() && (\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n                    <FormGroup>\r\n                      <FormLabelName>\r\n                        Pregnancy Status{' '}\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                      </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"pregnant\"\r\n                        id=\"pregnant\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.pregnant}\r\n                        disabled\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Pregnancy Status</option>\r\n                        {pregnant?.map(value => (\r\n                          <option key={value.id} value={value.code}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.pregnant !== '' ? (\r\n                        <span className={classes.error}>{errors.pregnant}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Label\r\n              as=\"a\"\r\n              color=\"black\"\r\n              style={{ width: '106%', height: '35px' }}\r\n              ribbon\r\n            >\r\n              <h4 style={{ color: '#fff' }}></h4>\r\n            </Label>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"row\">\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Result of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={hivTestValue}\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHts !== '' ? (\r\n                      <span className={classes.error}>{errors.lastHts}</span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    Date of Last HIV Test{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type={hivTestValue == 'NOT DONE' ? 'text' : 'date'}\r\n                    name=\"hivTestResultDate\"\r\n                    id=\"hivTestResultDate\"\r\n                    value={\r\n                      hivTestValue == 'NOT DONE'\r\n                        ? 'NOT APPLICABLE'\r\n                        : hivTestResultDate\r\n                    }\r\n                    onChange={e => {\r\n                      setHivTestValue(e.target.value);\r\n                      handleInputChange(e);\r\n                    }}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled\r\n                  />\r\n                  <div className=\"p-1\">\r\n                    {errors.lastHtsDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.lastHtsDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <>\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"liverFunctionTestResults\">\r\n                      Liver Function Tests Result\r\n                    </FormLabelName>\r\n                    <LiverFunctionTest\r\n                      objValues={objValues}\r\n                      handleInputChange={handleLftInputChange}\r\n                      liverFunctionTestResult={liverFunctionTestResult}\r\n                      disabledField={true}\r\n                      isAutoPop={true}\r\n                    />\r\n                    {errors.liverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.liverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n                <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                    <FormLabelName for=\"dateLiverFunctionTestResults\">\r\n                      Date of Liver Function Tests Result{' '}\r\n                    </FormLabelName>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateLiverFunctionTestResults\"\r\n                      id=\"dateLiverFunctionTestResults\"\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateLiverFunctionTestResults}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.dateLiverFunctionTestResults !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateLiverFunctionTestResults}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              </>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Noted Side Effects</FormLabelName>\r\n                  <DualListBox\r\n                    options={prepSideEffect?.map(effect => ({\r\n                      value: effect.code,\r\n                      label: effect.display,\r\n                    }))}\r\n                    selected={notedSideEffects}\r\n                    onChange={handleNotedSideEffectsChange}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.notedSideEffects !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.notedSideEffects}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening === 'true' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Syndromic STI Screening </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"syndromicStiScreening\"\r\n                      id=\"syndromicStiScreening\"\r\n                      value={objValues.syndromicStiScreening}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n                      {sti?.map(value => (\r\n                        <option key={value.id} value={value.id}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Risk Reduction Service </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskReductionServices\"\r\n                    id=\"riskReductionServices\"\r\n                    value={objValues.riskReductionServices}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option key={100} value=\"\">\r\n                      Select\r\n                    </option>\r\n                    {prepRiskReductionPlan?.map(plan => (\r\n                      <option key={plan.id} value={plan.id}>\r\n                        {plan.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Level of Adherence</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n\r\n                    {adherenceLevel?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.adherenceLevel}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel ===\r\n                'PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n                <div className=\" mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Why Poor/Fair Adherence </FormLabelName>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"whyAdherenceLevelPoor\"\r\n                      id=\"whyAdherenceLevelPoor\"\r\n                      value={objValues.whyAdherenceLevelPoor}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {whyAdherenceLevelPoor?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Population Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"populationType\"\r\n                    id=\"populationType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.populationType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Population Type</option>\r\n                    {populationType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {!populationType?.find(\r\n                      pType => pType.display === 'GenPop'\r\n                    ) && (\r\n                      <option value=\"POPULATION_TYPE_GEN_POP\">GenPop</option>\r\n                    )}\r\n                  </Input>\r\n                  {errors.populationType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.populationType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Visit Type <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"visitType\"\r\n                    id=\"visitType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.visitType}\r\n                    disabled\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select Visit Type</option>\r\n                    {visitType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.visitType !== '' ? (\r\n                    <span className={classes.error}>{errors.visitType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              {objValues.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <FormLabelName>Reason for switch</FormLabelName>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"reasonForSwitch\"\r\n                      id=\"reasonForSwitch\"\r\n                      value={objValues.reasonForSwitch}\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled\r\n                    >\r\n                      <option value=\"\">Select</option>\r\n\r\n                      {reasonForSwitchOptions?.map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForSwitch !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForSwitch}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Was PrEP Administered?</FormLabelName>\r\n                  <span style={{ color: 'red' }}> *</span>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"wasPrepAdministered\"\r\n                    id=\"wasPrepAdministered\"\r\n                    value={objValues.wasPrepAdministered}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"true\">Yes</option>\r\n                    <option value=\"false\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n                {errors.wasPrepAdministered !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.wasPrepAdministered}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    Prep Type<span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepType\"\r\n                    id=\"prepType\"\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    onChange={handlePrepTypeChange}\r\n                    value={objValues.prepType}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select PrEP Type</option>\r\n                    {prepType?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepType !== '' ? (\r\n                    <span className={classes.error}>{errors.prepType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Regimen <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenId\"\r\n                    id=\"regimenId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.regimenId}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {['update', 'view'].includes(props.activeContent.actionType)\r\n                      ? prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : objValues?.visitType === 'PREP_VISIT_TYPE_METHOD_SWITCH'\r\n                      ? filterOutLastRegimen(\r\n                          prepRegimen,\r\n                          props.recentActivities[0]?.regimenId\r\n                        )?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))\r\n                      : prepRegimen?.map(value => (\r\n                          <option key={value.id} value={value.id}>\r\n                            {value.regimen}\r\n                          </option>\r\n                        ))}\r\n                  </Input>\r\n                  {errors.regimenId !== '' ? (\r\n                    <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>\r\n                    {`Duration of refill (days)`}{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"monthsOfRefill\"\r\n                    id=\"monthsOfRefill\"\r\n                    value={objValues.monthsOfRefill}\r\n                    min={0}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.monthsOfRefill !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.monthsOfRefill}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepType && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <>\r\n                      <FormGroup>\r\n                        <FormLabelName>Other PrEP given</FormLabelName>\r\n                        <span style={{ color: 'red' }}> *</span>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherPrepGiven\"\r\n                          id=\"otherPrepGiven\"\r\n                          value={objValues.otherPrepGiven}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"true\">Yes</option>\r\n                          <option value=\"false\">No</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                      {errors.otherPrepGiven !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.otherPrepGiven}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                  {objValues.otherPrepGiven === 'true' && (\r\n                    <>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Type\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherPrepType\"\r\n                            id=\"otherPrepType\"\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherPrepType}\r\n                            disabled={disabledField}\r\n                          >\r\n                            <option value=\"\"> Select Prep Type</option>\r\n                            {prepType\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== 'PREP_TYPE_ED_PREP'\r\n                              )\r\n                              ?.filter(\r\n                                (each, index) =>\r\n                                  each.code !== objValues.prepType\r\n                              )\r\n                              ?.map(value => (\r\n                                <option key={value.id} value={value.code}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                          </Input>\r\n                          {errors.otherPrepType !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherPrepType}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <FormLabelName for=\"\">\r\n                            Other PrEP Regimen{' '}\r\n                            <span style={{ color: 'red' }}> *</span>\r\n                          </FormLabelName>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"otherRegimenId\"\r\n                            id=\"otherRegimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.otherRegimenId}\r\n                            disabled={disabledField}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n                            {getOptions()}\r\n                          </Input>\r\n                          {errors.otherRegimenId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.otherRegimenId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName for=\"\">\r\n                    PrEP Distribution Setting{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepDistributionSetting\"\r\n                    id=\"prepDistributionSetting\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.prepDistributionSetting}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {prepEntryPoint?.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.prepDistributionSetting !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.prepDistributionSetting}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName>Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"creatinineTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxCreatinineTest}\r\n                    checked={creatinineTest.creatinineTest === 'Yes'}\r\n                  />{' '}\r\n                  Creatinine Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {creatinineTest.creatinineTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={creatinineTest.testDate}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.creatinineTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Creatinine Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        placeholder=\"Enter test result...\"\r\n                        value={creatinineTest.result}\r\n                        onChange={handleInputChangeCreatinineTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      ></Input>\r\n                      {errors.creatinineResult !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.creatinineResult}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"urinalysisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxUrinalysisTest}\r\n                    checked={urinalysisTest?.urinalysisTest === 'Yes'}\r\n                  />{' '}\r\n                  Urinalysis Test\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {urinalysisTest?.urinalysisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Date </FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={urinalysisTest?.testDate}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.urinalysisTestDate !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.urinalysisTestDate}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Urinalysis Test Result </FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={urinalysisTest?.result}\r\n                        onChange={handleInputChangeUrinalysisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {urineTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.result !== '' ? (\r\n                        <span className={classes.error}>{errors.result}</span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"hepatitisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxHepatitisTest}\r\n                    checked={hepatitisTest.hepatitisTest === 'Yes'}\r\n                  />{' '}\r\n                  Hepatitis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {hepatitisTest.hepatitisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={hepatitisTest.testDate}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        disabled={disabledField}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Hepatitis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={hepatitisTest.result}\r\n                        onChange={handleInputChangeHepatitisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {hepaTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"red\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"syphilisTest\"\r\n                    value=\"Yes\"\r\n                    onChange={handleCheckBoxSyphilisTest}\r\n                    checked={syphilisTest?.syphilisTest === 'Yes'}\r\n                  />{' '}\r\n                  Syphilis Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {syphilisTest?.syphilisTest === 'Yes' && (\r\n                <>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Date</FormLabelName>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"testDate\"\r\n                        id=\"testDate\"\r\n                        value={syphilisTest?.testDate}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        min={objValues.encounterDate}\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\" mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <FormLabelName>Syphilis Test Result</FormLabelName>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"result\"\r\n                        id=\"result\"\r\n                        value={syphilisTest?.result}\r\n                        onChange={handleInputChangeSyphilisTest}\r\n                        style={{\r\n                          border: '1px solid #014D88',\r\n                          borderRadius: '0.25rem',\r\n                        }}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {sphylisTestResult?.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </div>\r\n                  {syphilisTest?.result === 'Others' && (\r\n                    <div className=\" mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <FormLabelName>\r\n                          Syphilis Test Result (Others)\r\n                        </FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"others\"\r\n                          id=\"others\"\r\n                          value={syphilisTest.others}\r\n                          onChange={handleInputChangeSyphilisTest}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"black\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"otherTest\"\r\n                    value=\"Yes\"\r\n                    ref={otherTestInputRef}\r\n                    onChange={handleCheckBoxOtherTest}\r\n                    checked={otherTest.length > 0}\r\n                  />{' '}\r\n                  Other Test{' '}\r\n                </h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              {otherTest.length > 0 &&\r\n                otherTest?.map(eachTest => (\r\n                  <div className=\"row\" key={eachTest.localId}>\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Name</FormLabelName>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"otherTestsDone\"\r\n                          id=\"otherTestsDone\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"name\"\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          value={eachTest.otherTestsDone}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {otherTestResult?.map(value => (\r\n                            <option key={value.id} value={value.code}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {eachTest.name === 'PREP_OTHER_TEST_OTHER_(SPECIFY)' && (\r\n                      <div\r\n                        style={{ display: 'none' }}\r\n                        className=\" mb-1 col-md-3\"\r\n                      >\r\n                        <FormGroup>\r\n                          <FormLabelName> Other Test Name </FormLabelName>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"otherTestName\"\r\n                            id=\"otherTestName\"\r\n                            data-localid={eachTest.localId}\r\n                            data-field=\"otherTestName\"\r\n                            value={eachTest.otherTestName}\r\n                            onChange={e =>\r\n                              handleInputChangeOtherTest(e, eachTest.localId)\r\n                            }\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.25rem',\r\n                            }}\r\n                            disabled={disabledField}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Date</FormLabelName>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"testDate\"\r\n                          id=\"testDate\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"testDate\"\r\n                          value={eachTest.testDate}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                          min={objValues.encounterDate}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3\">\r\n                      <FormGroup>\r\n                        <FormLabelName> Test Result</FormLabelName>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"result\"\r\n                          id=\"result\"\r\n                          data-localid={eachTest.localId}\r\n                          data-field=\"result\"\r\n                          value={eachTest.result}\r\n                          onChange={e =>\r\n                            handleInputChangeOtherTest(e, eachTest.localId)\r\n                          }\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.25rem',\r\n                          }}\r\n                          disabled={disabledField}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\" mb-1 col-md-3 d-flex align-items-end\">\r\n                      <button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        size=\"medium\"\r\n                        className={`${classes.button} btn btn-danger`}\r\n                        style={{\r\n                          display: 'block',\r\n                          margin: 0,\r\n                          fontSize: '1.2em',\r\n                        }}\r\n                        disabled={disabledField}\r\n                        onClick={() => handleRemoveTest(eachTest.localId)}\r\n                      >\r\n                        <TiTrash />\r\n                      </button>\r\n                    </div>\r\n\r\n                    {otherTest.length > 1 && (\r\n                      <Divider\r\n                        component=\"li\"\r\n                        style={{ marginBottom: '10px' }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              {errors.otherTestsDone !== '' ? (\r\n                <span className={classes.error}>{errors.otherTestsDone}</span>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {otherTest.length > 0 && (\r\n                <div className=\"p-2\">\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={`${classes.button}`}\r\n                    startIcon={<AddIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleCreateNewTest}\r\n                    disabled={saving || disabledField}\r\n                  >\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Add more test results\r\n                    </span>\r\n                  </MatButton>\r\n                </div>\r\n              )}\r\n\r\n              <br />\r\n              <Label\r\n                as=\"a\"\r\n                color=\"blue\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}>NEXT APPOINTMENT DATE</h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\"mb-3 col-md-6\">\r\n                <FormLabelName>\r\n                  Next Appointment Date <span style={{ color: 'red' }}> *</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.nextAppointment}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormLabelName>Healthcare Worker Signature </FormLabelName>\r\n\r\n                <Input\r\n                  name=\"healthCareWorkerSignature\"\r\n                  id=\"healthCareWorkerSignature\"\r\n                  placeholder=\"Enter signature...\"\r\n                  value={objValues.healthCareWorkerSignature}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                />\r\n                {errors.healthCareWorkerSignature !== '' ? (\r\n                  <span className={classes.error}>\r\n                    {errors.healthCareWorkerSignature}\r\n                  </span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n              <Label\r\n                as=\"a\"\r\n                color=\"teal\"\r\n                style={{ width: '106%', height: '35px' }}\r\n                ribbon\r\n              >\r\n                <h4 style={{ color: '#fff' }}></h4>\r\n              </Label>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <div className=\" mb-3 col-md-8\">\r\n                <FormLabelName>Comment</FormLabelName>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  name=\"comment\"\r\n                  id=\"comment\"\r\n                  placeholder=\"Enter comment...\"\r\n                  value={objValues.comment}\r\n                  disabled={disabledField}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                    height: '10em',\r\n                  }}\r\n                />\r\n                {errors.comment !== '' ? (\r\n                  <span className={classes.error}>{errors.comment}</span>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </div>\r\n            </div>\r\n            <br />\r\n\r\n            {!disabledField && (\r\n              <>\r\n                {props.activeContent &&\r\n                props.activeContent.actionType === 'update' ? (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      hidden={disabledField}\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Update\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Updating...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {' '}\r\n                    <MatButton\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.button}\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ backgroundColor: '#014d88' }}\r\n                      onClick={handleSubmit}\r\n                      disabled={saving}\r\n                    >\r\n                      {!saving ? (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Save\r\n                        </span>\r\n                      ) : (\r\n                        <span style={{ textTransform: 'capitalize' }}>\r\n                          Saving...\r\n                        </span>\r\n                      )}\r\n                    </MatButton>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Dropdown, Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n\r\n    const toggle = () => setOpen(prev => !prev);\r\n    useEffect(() => {\r\n        props.getPatientHistory()\r\n        if (props.activeContent.actionType === \"view\") {\r\n            props.getPatientHistory()\r\n        }\r\n    }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n    const LoadViewPage = (row, action) => {\r\n        props.setActiveContent({ ...props.activeContent, route: 'consultation', id: row.id, actionType: action, activeTab: 'home' })\r\n    }\r\n    const LoadModal = (row) => {\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage = (row) => {\r\n        if (row.path === 'prep-eligibility') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n        } else if (row.path === 'prep-clinic') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment') {\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else if (row.path === 'prep-enrollment2') {\r\n            setSaving(true)\r\n            axios\r\n                .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                    { headers: { \"Authorization\": `Bearer ${token}` } }\r\n                )\r\n                .then((response) => {\r\n                    setSaving(false)\r\n                    toast.success(\"Record Deleted Successfully\");\r\n                    props.getPatientHistory()\r\n                    toggle()\r\n                })\r\n                .catch((error) => {\r\n                    setSaving(false)\r\n                    if (error.response && error.response.data) {\r\n                        let errorMessage = error.response.data.apierror && error.response.data.apierror.message !== \"\" ? error.response.data.apierror.message : \"Something went wrong, please try again\";\r\n                        toast.error(errorMessage);\r\n                    }\r\n                    else {\r\n                        toast.error(\"Something went wrong. Please try again...\");\r\n                    }\r\n                });\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <br />\r\n\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title=\"Patient Clinic Visit History\"\r\n                columns={[\r\n                    { title: \"Visit Date\", field: \"date\" },\r\n                    {\r\n                        title: \"Regimen Given\",\r\n                        field: \"regimen\",\r\n                    },\r\n                    { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },\r\n                    { title: \"Actions\", field: \"actions\", filtering: false },\r\n                ]}\r\n                isLoading={props.loading}\r\n                data={props.recentActivities && props.recentActivities.map((row) => ({\r\n                    date: row.encounterDate,\r\n                    regimen: row.regimen,\r\n                    nextAppointment: row.nextAppointment,\r\n                    actions:\r\n\r\n                        <div>\r\n                            <Menu.Menu position='right'  >\r\n                                <Menu.Item >\r\n                                    <Button style={{ backgroundColor: 'rgb(153,46,98)' }} primary>\r\n                                        <Dropdown item text='Action'>\r\n\r\n                                            <Dropdown.Menu style={{ marginTop: \"10px\", }}>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'view')}> <Icon name='eye' />View</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                                                <Dropdown.Item onClick={() => LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Menu.Menu>\r\n                        </div>\r\n\r\n                }))}\r\n\r\n                options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#014d88\",\r\n                        color: \"#fff\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width: '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions: [10, 20, 100],\r\n                    pageSize: 10,\r\n                    debounceInterval: 400\r\n                }}\r\n            />\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={() => LoadDeletePage({ ...record, path: \"prep-clinic\" })} style={{ backgroundColor: \"red\", color: \"#fff\" }} disabled={saving}>{saving === false ? \"Yes\" : \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{ backgroundColor: \"#014d88\", color: \"#fff\" }} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport axios from \"axios\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n  const [key, setKey] = useState('home');\r\n  const patientObj = props.patientObj\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const getPatientHistory = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setRecentActivities(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  const [encounters, setEncounters] = useState([])\r\n\r\n  const fetchListOfEncounters = () => {\r\n    setLoading(true)\r\n    axios\r\n      .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setLoading(false)\r\n        setEncounters(response.data)\r\n      })\r\n\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setKey(props.activeContent.activeTab)\r\n  }, [props.activeContent]);\r\n\r\n  useEffect(() => { fetchListOfEncounters() }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">\r\n                    <ConsultationPage encounters={encounters}  recentActivities={recentActivities} patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent} />\r\n                  </Tab>\r\n                  <Tab eventKey=\"history\" title=\"HISTORY\">\r\n                    <ClinicHistoryPage encounters={encounters} getPatientHistory={getPatientHistory} loading={loading} recentActivities={recentActivities} patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Label as FormLabelName,\r\n} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\nimport { LiverFunctionTest } from './PrEPEligibiltyScreeningForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '41px',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPCommencementForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [prepRegimen, setPrepRegimen] = useState([]);\r\n  const [historyOfDrugToDrugInteraction, setHistoryOfDrugToDrugInteraction] =\r\n    useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInitialAdherenceCounseling: '',\r\n    datePrepStart: '',\r\n    height: '',\r\n    personId: patientObj.personId,\r\n    prepClientId: props.prepId,\r\n    regimenId: '',\r\n    urinalysisResult: '',\r\n    prepEligibilityUuid: '',\r\n    weight: '',\r\n    drugAllergies: '',\r\n    referred: '',\r\n    datereferred: '',\r\n    extra: {},\r\n    nextAppointment: '',\r\n    pregnant: true,\r\n    prepEnrollmentUuid: '',\r\n    duration: '',\r\n    prepDistributionSetting: '',\r\n    prepType: '',\r\n    monthsOfRefill: '',\r\n    liverFunctionTestResults: [],\r\n    dateLiverFunctionTestResults: '',\r\n    historyOfDrugToDrugInteraction: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [pregnant, setPregnant] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [prepEntryPoint, setPrepEntryPoint] = useState([]);\r\n  const [urinalysisTestResult, setUrinalysisTestResult] = useState([]);\r\n  const [prepType, setPrepType] = useState([]);\r\n  const [liverFunctionTestResult, setLiverFunctionTestResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    pregnancyStatus();\r\n    getPatientDTOObj();\r\n    fetchPrepRegimen();\r\n    fetchPrepEntryPoint();\r\n    fetchPrepType();\r\n    fetchLiverFunctionTestResult();\r\n    fetchHistoryOfDrugToDrugInteraction();\r\n    fetchPrepUrinalysisResult();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      getPatientCommencement(props.activeContent.id);\r\n      setDisabledField(props.activeContent.actionType === 'view');\r\n    }\r\n  }, []);\r\n\r\n  const fetchPrepRegimen = async () => {\r\n    axios\r\n      .get(`${baseUrl}prep-regimen`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRegimen(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchPrepUrinalysisResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_URINALYSIS_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setUrinalysisTestResult(response.data);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const fetchPrepType = async () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepType(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchLiverFunctionTestResult = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/LIVER_FUNCTION_TEST_RESULT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setLiverFunctionTestResult(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchHistoryOfDrugToDrugInteraction = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}application-codesets/v2/PREP_HISTORY_OF_DRUG_INTERACTIONS`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setHistoryOfDrugToDrugInteraction(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientCommencement = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const pregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGNANCY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPregnant(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  //Vital signs clinical decision support\r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n    weight: '',\r\n    height: '',\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'referred' && e.target.value === 'false') {\r\n      objValues.datereferred = '';\r\n      setObjValues({ ...objValues, ['datereferred']: '' });\r\n    } else if (e.target.name === 'monthsOfRefill') {\r\n      const durationInDays = Number(e.target.value) * 30;\r\n      setObjValues({\r\n        ...objValues,\r\n        monthsOfRefill: e.target.value,\r\n        duration: durationInDays,\r\n      });\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateInitialAdherenceCounseling =\r\n      objValues.dateInitialAdherenceCounseling ? '' : 'This field is required';\r\n    temp.datePrepStart = objValues.datePrepStart\r\n      ? ''\r\n      : 'This field is required';\r\n    temp.prepType = objValues.prepType ? '' : 'This field is required';\r\n    temp.regimenId = objValues.regimenId ? '' : 'This field is required';\r\n    temp.height = objValues.height ? '' : 'This field is required';\r\n    temp.weight = objValues.weight ? '' : 'This field is required';\r\n    temp.referred = objValues.referred ? '' : 'This field is required';\r\n    temp.prepDistributionSetting = objValues.prepDistributionSetting\r\n      ? ''\r\n      : 'This field is required';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  //to check the input value for clinical decision\r\n  const handleInputValueCheckHeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'height' &&\r\n      (e.target.value < 48.26 || e.target.value > 216.408)\r\n    ) {\r\n      const message =\r\n        'Height cannot be greater than 216.408 and less than 48.26';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, height: '' });\r\n    }\r\n  };\r\n\r\n  const handleInputValueCheckBodyWeight = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (\r\n      e.target.name === 'weight' &&\r\n      (e.target.value < 3 || e.target.value > 150)\r\n    ) {\r\n      const message =\r\n        'Body weight must not be greater than 150 and less than 3';\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: message });\r\n    } else {\r\n      setVitalClinicalSupport({ ...vitalClinicalSupport, weight: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      setSaving(true);\r\n      objValues.prepEnrollmentUuid = patientDto.uuid;\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/commencement`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            patientObj.commencementCount = 1;\r\n            props.PatientObject();\r\n            toast.success('Record save successful', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            if (error.response && error.response.data) {\r\n              let errorMessage =\r\n                error.response.data.apierror &&\r\n                error.response.data.apierror.message !== ''\r\n                  ? error.response.data.apierror.message\r\n                  : 'Something went wrong, please try again';\r\n              if (error.response.data.apierror) {\r\n                toast.error(error.response.data.apierror.message, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              } else {\r\n                toast.error(errorMessage, {\r\n                  position: toast.POSITION.BOTTOM_CENTER,\r\n                });\r\n              }\r\n            } else {\r\n              toast.error('Something went wrong, please try again...', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePrepTypeChange = e => {\r\n    setObjValues({ ...objValues, regimenId: '', prepType: e.target.value });\r\n    if (\r\n      e.target.value === 'PREP_TYPE_OTHERS' ||\r\n      e.target.value === 'PREP_TYPE_ED_PREP'\r\n    ) {\r\n      fetchPrepRegimen();\r\n    } else {\r\n      axios\r\n        .get(`${baseUrl}prep-regimen/prepType?prepType=${e.target.value}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then(response => {\r\n          setPrepRegimen(response.data);\r\n        })\r\n        .catch(error => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n  };\r\n\r\n  const [latestFromEligibility, setLatestFromEligibility] = useState(null);\r\n\r\n  const getLatestFromEligibility = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}prep-eligibility/person/${objValues?.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      const latestEligibility = response?.data?.sort((a, b) =>\r\n        moment(a?.visitDate).isBefore(moment(b?.visitDate))\r\n      )[response.data.length - 1];\r\n      setLatestFromEligibility(latestEligibility);\r\n    } catch (error) {\r\n      console.error('Error fetching latest eligibility:', error);\r\n    }\r\n  };\r\n\r\n  const handleLftInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setObjValues(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLatestFromEligibility();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (latestFromEligibility) {\r\n      setObjValues(prevValues => ({\r\n        ...prevValues,\r\n        liverFunctionTestResults:\r\n          latestFromEligibility.liverFunctionTestResults || [],\r\n        dateLiverFunctionTestResults:\r\n          latestFromEligibility.dateLiverFunctionTestResults || '',\r\n      }));\r\n    }\r\n  }, [latestFromEligibility]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardBody>\r\n        <form>\r\n          <div className=\"row\">\r\n            <h2>PrEP Commencement</h2>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label for=\"uniqueId\">\r\n                  Date of Initial Adherence Counseling{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateInitialAdherenceCounseling\"\r\n                  id=\"dateInitialAdherenceCounseling\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateInitialAdherenceCounseling}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.dateInitialAdherenceCounseling && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateInitialAdherenceCounseling}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Date PrEP started <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"datePrepStart\"\r\n                  id=\"datePrepStart\"\r\n                  min={patientDto?.dateEnrolled || ''}\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.datePrepStart}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.datePrepStart && (\r\n                  <span className={classes.error}>{errors.datePrepStart}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Body Weight <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"weight\"\r\n                    id=\"weight\"\r\n                    onChange={handleInputChange}\r\n                    min=\"3\"\r\n                    max=\"150\"\r\n                    value={objValues.weight}\r\n                    onKeyUp={handleInputValueCheckBodyWeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    kg\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.bodyWeight && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.bodyWeight}\r\n                  </span>\r\n                )}\r\n                {errors.weight && (\r\n                  <span className={classes.error}>{errors.weight}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Height <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <InputGroup>\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#014D88',\r\n                      color: '#fff',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                      borderTopLeftRadius: '0.25rem',\r\n                      borderBottomLeftRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    cm\r\n                  </InputGroupText>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"height\"\r\n                    id=\"height\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.height}\r\n                    min=\"48.26\"\r\n                    max=\"216.408\"\r\n                    disabled={disabledField}\r\n                    onKeyUp={handleInputValueCheckHeight}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0rem',\r\n                    }}\r\n                  />\r\n                  <InputGroupText\r\n                    addonType=\"append\"\r\n                    style={{\r\n                      backgroundColor: '#992E62',\r\n                      color: '#fff',\r\n                      border: '1px solid #992E62',\r\n                      borderRadius: '0rem',\r\n                      borderTopRightRadius: '0.25rem',\r\n                      borderBottomRightRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    {objValues.height\r\n                      ? (objValues.height / 100).toFixed(2) + 'm'\r\n                      : 'm'}\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n                {vitalClinicalSupport.height && (\r\n                  <span className={classes.error}>\r\n                    {vitalClinicalSupport.height}\r\n                  </span>\r\n                )}\r\n                {errors.height && (\r\n                  <span className={classes.error}>{errors.height}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n              {objValues.weight && objValues.height && (\r\n                <FormGroup>\r\n                  <InputGroup>\r\n                    <InputGroupText\r\n                      addonType=\"append\"\r\n                      style={{\r\n                        backgroundColor: '#014D88',\r\n                        color: '#fff',\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0rem',\r\n                      }}\r\n                    >\r\n                      BMI:{' '}\r\n                      {(\r\n                        objValues.weight /\r\n                        (objValues.height / 100) ** 2\r\n                      ).toFixed(2)}\r\n                    </InputGroupText>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n            {props.patientObj.gender.toLowerCase() === 'female' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Pregnancy Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"pregnant\"\r\n                    id=\"pregnant\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.pregnant}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\"></option>\r\n                    {pregnant.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            {objValues.pregnant === 'PREGANACY_STATUS_BREASTFEEDING' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Breast Feeding</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"breastFeeding\"\r\n                    id=\"breastFeeding\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.breastFeeding}\r\n                    disabled={disabledField}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    <option value=\"Yes\">Yes</option>\r\n                    <option value=\"No\">No</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of drug Allergies</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"drugAllergies\"\r\n                  id=\"drugAllergies\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.drugAllergies}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Urinalysis Result</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"urinalysisResult\"\r\n                  id=\"urinalysisResult\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.urinalysisResult}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {urinalysisTestResult.map(value => (\r\n                    <option key={value.id} value={value.display}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>History of PrEP drug interactions</Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"select\"\r\n                  name=\"historyOfDrugToDrugInteraction\"\r\n                  id=\"historyOfDrugToDrugInteraction\"\r\n                  value={objValues.historyOfDrugToDrugInteraction}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {historyOfDrugToDrugInteraction.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.historyOfDrugToDrugInteraction && (\r\n                  <span className={classes.error}>\r\n                    {errors.historyOfDrugToDrugInteraction}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Liver Function Tests Result </Label>\r\n                <LiverFunctionTest\r\n                  objValues={objValues}\r\n                  handleInputChange={handleLftInputChange}\r\n                  liverFunctionTestResult={liverFunctionTestResult}\r\n                  disabledField={disabledField}\r\n                  isAutoPop={true}\r\n                />\r\n                {errors.liverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.liverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-8\">\r\n              <FormGroup>\r\n                <Label>Date of Liver Function Tests Result </Label>\r\n                <Input\r\n                  className=\"form-control\"\r\n                  type=\"date\"\r\n                  onKeyDown={e => e.preventDefault()}\r\n                  name=\"dateLiverFunctionTestResults\"\r\n                  id=\"dateLiverFunctionTestResults\"\r\n                  max={moment(new Date()).format('YYYY-MM-DD')}\r\n                  value={objValues.dateLiverFunctionTestResults}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled\r\n                />\r\n                {errors.dateLiverFunctionTestResults && (\r\n                  <span className={classes.error}>\r\n                    {errors.dateLiverFunctionTestResults}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  Referred <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"referred\"\r\n                  id=\"referred\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.referred}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"true\">Yes</option>\r\n                  <option value=\"false\">No</option>\r\n                </Input>\r\n                {errors.referred && (\r\n                  <span className={classes.error}>{errors.referred}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            {objValues.referred === 'true' && (\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date referred</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"datereferred\"\r\n                    id=\"datereferred\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.datereferred}\r\n                    min={patientDto?.dateEnrolled || ''}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datereferred && (\r\n                    <span className={classes.error}>{errors.datereferred}</span>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName for=\"prepType\">\r\n                  Prep Type At Start <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepType\"\r\n                  id=\"prepType\"\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  onChange={handlePrepTypeChange}\r\n                  value={objValues.prepType}\r\n                >\r\n                  <option value=\"\">Select Prep Type</option>\r\n                  {prepType.map(value => (\r\n                    <option key={value.id} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepType && (\r\n                  <span className={classes.error}>{errors.prepType}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>\r\n                  PrEP Regimen <span style={{ color: 'red' }}>*</span>\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {prepRegimen.map(value => (\r\n                    <option key={value.id} value={value.id}>\r\n                      {value.regimen}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.regimenId && (\r\n                  <span className={classes.error}>{errors.regimenId}</span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <FormLabelName>\r\n                  Prep Distribution Setting{' '}\r\n                  <span style={{ color: 'red' }}>*</span>\r\n                </FormLabelName>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"prepDistributionSetting\"\r\n                  id=\"prepDistributionSetting\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.prepDistributionSetting}\r\n                  disabled={disabledField}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                >\r\n                  <option value=\"\"></option>\r\n                  {prepEntryPoint.map(value => (\r\n                    <option key={value.code} value={value.code}>\r\n                      {value.display}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n                {errors.prepDistributionSetting && (\r\n                  <span className={classes.error}>\r\n                    {errors.prepDistributionSetting}\r\n                  </span>\r\n                )}\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label>Duration of Refill (Day[s])</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  name=\"monthsOfRefill\"\r\n                  id=\"monthsOfRefill\"\r\n                  value={objValues.monthsOfRefill}\r\n                  min={0}\r\n                  onChange={handleInputChange}\r\n                  style={{\r\n                    border: '1px solid #014D88',\r\n                    borderRadius: '0.25rem',\r\n                  }}\r\n                  disabled={disabledField}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          {saving && <Spinner />}\r\n          <br />\r\n          <MatButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<SaveIcon />}\r\n            style={{ backgroundColor: '#014d88' }}\r\n            onClick={handleSubmit}\r\n            disabled={saving}\r\n          >\r\n            <span style={{ textTransform: 'capitalize' }}>\r\n              {saving\r\n                ? 'Saving...'\r\n                : props.activeContent?.actionType\r\n                ? 'Update'\r\n                : 'Save'}\r\n            </span>\r\n          </MatButton>\r\n        </form>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [disabledField, setDisabledField] = useState(false);\r\n  const [objValues, setObjValues] = useState({\r\n    dateInterruption: '',\r\n    why: '',\r\n    interruptionType: '',\r\n    dateRestartPlacedBackMedication: '',\r\n    personId: patientObj.personId,\r\n    causeOfDeath: '',\r\n    dateClientDied: '',\r\n    dateClientReferredOut: '',\r\n    facilityReferredTo: '',\r\n    interruptionDate: '',\r\n    interruptionReason: '',\r\n    sourceOfDeathInfo: '',\r\n    dateSeroconverted: '',\r\n    reasonStopped: '',\r\n    reasonStoppedOthers: '',\r\n    reasonForPrepDiscontinuation: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [reasonStooped, setReasonStooped] = useState([]);\r\n  const [causeOfDeath, setCauseOfDeath] = useState([]);\r\n  const [reasonForDiscontinuationOptions, setReasonForDiscontinuationOptions] =\r\n    useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n\r\n  useEffect(() => {\r\n    PREP_STATUS();\r\n    PREP_STATUS_STOPPED_REASON();\r\n    GetPatientDTOObj();\r\n    CAUSE_DEATH();\r\n    getReasonForDiscontinuationOptions();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      setDisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const GetPatientInterruption = id => {\r\n    axios\r\n      .get(`${baseUrl}prep-interruption/${props.activeContent.id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const CAUSE_DEATH = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CAUSE_DEATH`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCauseOfDeath(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const PREP_STATUS_STOPPED_REASON = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS_STOPPED_REASON`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonStooped(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getReasonForDiscontinuationOptions = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/REASON_FOR_DISCONTINUATION`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setReasonForDiscontinuationOptions(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getNewPrepStatus = (interruptionOption, allPrepInterruptions) => {\r\n    const transformedInterruption =\r\n      interruptionOption?.interruptionType?.toLowerCase();\r\n    const newPrepInterruptionObj = allPrepInterruptions?.find(interruption =>\r\n      transformedInterruption.includes(\r\n        interruption?.display?.replace(/\\s/g, '_').toLowerCase()\r\n      )\r\n    );\r\n    return newPrepInterruptionObj;\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setErrors({ ...errors, [e.target.name]: '' });\r\n    if (e.target.name === 'interruptionType') {\r\n      switch (e.target.value) {\r\n        case 'PREP_STATUS_STOPPED':\r\n          setObjValues({\r\n            ...objValues,\r\n            reasonStopped: '',\r\n            reasonStoppedOthers: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_DEAD':\r\n          setObjValues({\r\n            ...objValues,\r\n            causeOfDeath: '',\r\n            sourceOfDeathInfo: '',\r\n            dateClientDied: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_RESTART':\r\n          setObjValues({ ...objValues, dateRestartPlacedBackMedication: '' });\r\n          break;\r\n        case 'PREP_STATUS_TRANSFER_OUT':\r\n          setObjValues({\r\n            ...objValues,\r\n            dateClientReferredOut: '',\r\n            facilityReferredTo: '',\r\n          });\r\n          break;\r\n        case 'PREP_STATUS_SEROCONVERTED':\r\n          setObjValues({ ...objValues, linkToArt: '', dateSeroconverted: '' });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    // if (\r\n    //   containsDiscontinued(objValues.interruptionType) &&\r\n    //   !objValues.reasonForPrepDiscontinuation\r\n    // ) {\r\n    //   temp.reasonForPrepDiscontinuation = 'This field is required';\r\n    // }\r\n    if (\r\n      (objValues.interruptionType === 'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n        objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n        objValues.interruptionType === 'PREP_STATUS_LOSS_TO_FOLLOW_UP') &&\r\n      !objValues.interruptionDate\r\n    ) {\r\n      temp.interruptionDate = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' &&\r\n      !objValues.dateClientReferredOut\r\n    ) {\r\n      temp.dateClientReferredOut = 'This field is required';\r\n    }\r\n    if (\r\n      objValues.interruptionType === 'PREP_STATUS_DEAD' &&\r\n      !objValues.dateClientDied\r\n    ) {\r\n      temp.dateClientDied = 'This field is required';\r\n    }\r\n    if (!objValues.interruptionType) {\r\n      temp.interruptionType = 'This field is required';\r\n    }\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x === '');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateSeroconverted !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateSeroconverted;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateRestartPlacedBackMedication !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateRestartPlacedBackMedication;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientReferredOut !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientReferredOut;\r\n    } else if (\r\n      objValues.interruptionDate === '' &&\r\n      objValues.dateClientDied !== ''\r\n    ) {\r\n      objValues.interruptionDate = objValues.dateClientDied;\r\n    }\r\n    if (validate()) {\r\n      objValues.previousPrepStatus = props.patientObj?.prepStatus;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType === 'update') {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-interruption/${props.activeContent.id}`,\r\n            objValues,\r\n            {\r\n              headers: { Authorization: `Bearer ${token}` },\r\n            }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/interruption`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            const newStatus = getNewPrepStatus(response.data, prepStatus);\r\n            setSaving(false);\r\n            toast.success('👍 Record saved successfully! ✔');\r\n            props.PatientObject();\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n              obj: { newStatus },\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            handleError(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = error => {\r\n    if (error.response && error.response.data) {\r\n      let errorMessage =\r\n        error.response.data.apierror &&\r\n        error.response.data.apierror.message !== ''\r\n          ? error.response.data.apierror.message\r\n          : '❌ Something went wrong. Please try again...';\r\n      toast.error(errorMessage);\r\n    } else {\r\n      toast.error('❌ Something went wrong. Please try again...');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getReasonForDiscontinuationOptions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!['view', 'update'].includes(props.activeContent.actionType)) {\r\n        setObjValues(prevValues => ({\r\n          ...prevValues,\r\n          dateInterruption: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          causeOfDeath: '',\r\n          dateClientDied: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          interruptionDate: '',\r\n          sourceOfDeathInfo: '',\r\n          dateSeroconverted: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n\r\n        setErrors(prevErrors => ({\r\n          ...prevErrors,\r\n          interruptionDate: '',\r\n          reasonStopped: '',\r\n          reasonStoppedOthers: '',\r\n          dateClientReferredOut: '',\r\n          facilityReferredTo: '',\r\n          dateClientDied: '',\r\n          causeOfDeath: '',\r\n          sourceOfDeathInfo: '',\r\n          dateRestartPlacedBackMedication: '',\r\n          dateSeroconverted: '',\r\n          reasonForPrepDiscontinuation: '',\r\n        }));\r\n      }\r\n    };\r\n  }, [objValues.interruptionType]);\r\n\r\n  useEffect(() => {\r\n    GetPatientInterruption(props.activeContent.id);\r\n  }, [props.activeContent.id]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className={classes.root}>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Client Tracking & Discontinuations/Interruptions</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    PrEP Interruptions <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"interruptionType\"\r\n                    id=\"interruptionType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.interruptionType}\r\n                    required\r\n                    style={{ border: '1px solid #014D88' }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus\r\n                      .filter(interruption => interruption?.id !== 743)\r\n                      .map(value => (\r\n                        <option key={value.id} value={value.code}>\r\n                          {value.display}\r\n                        </option>\r\n                      ))}\r\n                    {/* <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP\">\r\n                      Discontinued Oral PrEP\r\n                    </option>\r\n                    <option value=\"PREP_INTERRUPtIONS_DISCONTINUED_CABLA\">\r\n                      Discontinued CAB-LA\r\n                    </option> */}\r\n                  </Input>\r\n                  {errors.interruptionType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.interruptionType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              {(objValues.interruptionType ===\r\n                'PREP_STATUS_ADVERSE_DRUG_REACTION' ||\r\n                objValues.interruptionType === 'PREP_STATUS_STOPPED' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_ORAL_PREP' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_INTERRUPtIONS_DISCONTINUED_CABLA' ||\r\n                objValues.interruptionType ===\r\n                  'PREP_STATUS_LOSS_TO_FOLLOW_UP') && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label for=\"uniqueId\">\r\n                      Date of Interruption{' '}\r\n                      <span style={{ color: 'red' }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      onKeyDown={e => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      name=\"interruptionDate\"\r\n                      id=\"interruptionDate\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      onChange={handleInputChange}\r\n                      value={objValues.interruptionDate}\r\n                      required\r\n                      disabled={disabledField}\r\n                    />\r\n                    {errors.interruptionDate !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.interruptionDate}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_STOPPED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Reason Stopped </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"reasonStopped\"\r\n                        id=\"reasonStopped\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.reasonStopped}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {reasonStooped.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.reasonStopped !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.reasonStopped}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.reasonStopped === 'Others (Pls specify)' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Other Reason Stopped </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"reasonStoppedOthers\"\r\n                          id=\"reasonStoppedOthers\"\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.reasonStoppedOthers}\r\n                          disabled={disabledField}\r\n                        ></Input>\r\n                        {errors.reasonStoppedOther !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.reasonStopped}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_TRANSFER_OUT' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientReferredOut\"\r\n                        id=\"dateClientReferredOut\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientReferredOut ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientReferredOut !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientReferredOut}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Facility referred to </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"facilityReferredTo\"\r\n                        id=\"facilityReferredTo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.facilityReferredTo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.facilityReferredTo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.facilityReferredTo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_DEAD' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date of Client's Death </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateClientDied\"\r\n                        id=\"dateClientDied\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateClientDied || objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateClientDied !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateClientDied}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Cause of death</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"causeOfDeath\"\r\n                        id=\"causeOfDeath\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.causeOfDeath}\r\n                        required\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\">Select</option>\r\n                        {causeOfDeath.map(value => (\r\n                          <option key={value.id} value={value.display}>\r\n                            {value.display}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.causeOfDeath !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.causeOfDeath}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Source of death information </Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"sourceOfDeathInfo\"\r\n                        id=\"sourceOfDeathInfo\"\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={objValues.sourceOfDeathInfo}\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.sourceOfDeathInfo !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.sourceOfDeathInfo}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                </>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_RESTART' && (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Date of restart if placed back on medication</Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      type=\"date\"\r\n                      onKeyDown={e => e.preventDefault()}\r\n                      name=\"dateRestartPlacedBackMedication\"\r\n                      id=\"dateRestartPlacedBackMedication\"\r\n                      min={\r\n                        patientDto && patientDto.dateEnrolled\r\n                          ? patientDto.dateEnrolled\r\n                          : ''\r\n                      }\r\n                      max={moment(new Date()).format('YYYY-MM-DD')}\r\n                      value={objValues.dateRestartPlacedBackMedication}\r\n                      onChange={handleInputChange}\r\n                      disabled={disabledField}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.2rem',\r\n                      }}\r\n                    />\r\n                    {errors.dateRestartPlacedBackMedication !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.dateRestartPlacedBackMedication}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </FormGroup>\r\n                </div>\r\n              )}\r\n              {objValues.interruptionType === 'PREP_STATUS_SEROCONVERTED' && (\r\n                <>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        onKeyDown={e => e.preventDefault()}\r\n                        name=\"dateSeroconverted\"\r\n                        id=\"dateSeroconverted\"\r\n                        min={\r\n                          patientDto && patientDto.dateEnrolled\r\n                            ? patientDto.dateEnrolled\r\n                            : ''\r\n                        }\r\n                        max={moment(new Date()).format('YYYY-MM-DD')}\r\n                        onChange={handleInputChange}\r\n                        value={\r\n                          objValues.dateSeroconverted ||\r\n                          objValues.interruptionDate\r\n                        }\r\n                        required\r\n                        disabled={disabledField}\r\n                      />\r\n                      {errors.dateSeroconverted !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.dateSeroconverted}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>Link to ART</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"linkToArt\"\r\n                        id=\"linkToArt\"\r\n                        onChange={handleInputChange}\r\n                        value={objValues.linkToArt}\r\n                        disabled={disabledField}\r\n                      >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                      </Input>\r\n                      {errors.linkToArt !== '' ? (\r\n                        <span className={classes.error}>\r\n                          {errors.linkToArt}\r\n                        </span>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </FormGroup>\r\n                  </div>\r\n                  {objValues.linkToArt === 'true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date link to ART</Label>\r\n                        <Input\r\n                          className=\"form-control\"\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateLinkToArt\"\r\n                          id=\"dateLinkToArt\"\r\n                          min={\r\n                            patientDto && patientDto.dateEnrolled\r\n                              ? patientDto.dateEnrolled\r\n                              : ''\r\n                          }\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          value={objValues.dateLinkToArt}\r\n                          onChange={handleInputChange}\r\n                          disabled={disabledField}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                        />\r\n                        {errors.dateLinkToArt !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateLinkToArt}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n              {/* {containsDiscontinued(objValues.interruptionType) ? (\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>Reason for discontinuation</Label>\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"reasonForPrepDiscontinuation\"\r\n                      id=\"reasonForPrepDiscontinuation\"\r\n                      value={objValues.reasonForPrepDiscontinuation}\r\n                      placeholder=\"Enter reason for PrEP discontinuation...\"\r\n                      onChange={handleInputChange}\r\n                      style={{\r\n                        border: '1px solid #014D88',\r\n                        borderRadius: '0.25rem',\r\n                      }}\r\n                      disabled={disabledField}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                  {errors.reasonForPrepDiscontinuation !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.reasonForPrepDiscontinuation}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </div>\r\n              ) : null} */}\r\n            </div>\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent.actionType !== 'view' && (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Saving...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                  onClick={props.toggle}\r\n                  style={{ backgroundColor: '#992E62' }}\r\n                >\r\n                  <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                    {' '}\r\n                    Cancel{' '}\r\n                  </span>\r\n                </MatButton>\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst PrEPVisit = props => {\r\n  const patientObj = props.patientObj;\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrer: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [transferIn, setTransferIn] = useState(false);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    objValues.personId = patientObj.id;\r\n    patientObj.enrolled = true;\r\n    delete objValues['tableData'];\r\n    setSaving(true);\r\n    axios\r\n      .post(`${baseUrl}hiv/enrollment`, objValues, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success('Record saved successfully! ✔');\r\n        props.toggle();\r\n        props.patientObj.enrolled = true;\r\n        props.PatientCurrentStatus();\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        toast.error('Something went wrong ❌');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Visit</h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">Duration on PErp </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Noted Side Effects</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">HTS Result</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"entryPointId\"\r\n                    id=\"entryPointId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.entryPointId}\r\n                    required\r\n                  >\r\n                    <option value=\"\"> </option>\r\n\r\n                    {carePoints.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.entryPointId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.entryPointId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <h3>PrEP Drugs</h3>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Regimen</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Level of Adherence</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Why Poor/Fair Adherence?</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"statusAtRegistrationId\"\r\n                    id=\"statusAtRegistrationId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.statusAtRegistrationId}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {hivStatus.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                    {errors.statusAtRegistrationId !== '' ? (\r\n                      <span className={classes.error}>\r\n                        {errors.statusAtRegistrationId}\r\n                      </span>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: 'capitalize' }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              onClick={props.toggle}\r\n            >\r\n              <span style={{ textTransform: 'capitalize' }}>Cancel</span>\r\n            </MatButton>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPVisit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row, Card, CardBody, FormGroup, Label, Input } from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { url as baseUrl, token } from '../../../api';\r\nimport { useHistory } from 'react-router-dom';\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2';\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from 'moment';\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    '& .card-title': {\r\n      color: '#fff',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& .form-control': {\r\n      borderRadius: '0.25rem',\r\n      height: '2.5625em',\r\n    },\r\n    '& .card-header:first-child': {\r\n      borderRadius: 'calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0',\r\n    },\r\n    '& .dropdown-toggle::after': {\r\n      display: ' block !important',\r\n    },\r\n    '& select': {\r\n      '-webkit-appearance': 'listbox !important',\r\n    },\r\n    '& p': {\r\n      color: 'red',\r\n    },\r\n    '& label': {\r\n      fontSize: '14px',\r\n      color: '#014d88',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '11px',\r\n  },\r\n  success: {\r\n    color: '#4BB543 ',\r\n    fontSize: '11px',\r\n  },\r\n}));\r\n\r\nconst PrEPRegistrationForm = props => {\r\n  const [entryPoint, setEntryPoint] = useState([]);\r\n  const classes = useStyles();\r\n  const [objValues, setObjValues] = useState({\r\n    dateEnrolled: '',\r\n    dateReferred: '',\r\n    extra: {},\r\n    personId: 0,\r\n    prepEligibilityUuid: '',\r\n    riskType: '',\r\n    supporterName: '',\r\n    supporterPhone: '',\r\n    supporterRelationshipType: '',\r\n    uniqueId: '',\r\n    hivTestingPoint: '',\r\n    dateOfLastHivNegativeTest: '',\r\n    targetGroup: '',\r\n  });\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [prepRisk, setPrepRisk] = useState([]);\r\n  const [relatives, setRelatives] = useState([]);\r\n  const [patientDto, setPatientDto] = useState();\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [targetGroupValue, setTargetGroupValue] = useState('');\r\n  useEffect(() => {\r\n    GetPatientDTOObj();\r\n    RELATIONSHIP();\r\n    PREP_RISK_TYPE();\r\n    EntryPoint();\r\n    if (\r\n      props.activeContent.id &&\r\n      props.activeContent.id !== '' &&\r\n      props.activeContent.id !== null\r\n    ) {\r\n      GetPatientPrepEnrollment(props.activeContent.id);\r\n      setSisabledField(\r\n        props.activeContent.actionType === 'view' ? true : false\r\n      );\r\n    }\r\n  }, []);\r\n  const getTargetGroupvalue = () => {\r\n    axios\r\n      .get(`${baseUrl}hts/persons/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setTargetGroupValue(response.data?.htsClientDtoList[0]?.targetGroup);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const EntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setEntryPoint(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const RELATIONSHIP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setRelatives(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const PREP_RISK_TYPE = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPrepRisk(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientDTOObj = () => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setPatientDto(response.data);\r\n        getTargetGroupvalue();\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const GetPatientPrepEnrollment = id => {\r\n    axios\r\n      .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setObjValues(response.data.find(x => x.id === id));\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n    setObjValues({ ...objValues, [inputName]: e.slice(0, limit) });\r\n  };\r\n\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.dateEnrolled = objValues.dateEnrolled ? '' : 'This field is required⚠';\r\n    temp.dateReferred = objValues.dateReferred ? '' : 'This field is required⚠';\r\n    temp.riskType = objValues.riskType ? '' : 'This field is required⚠';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'This field is required⚠';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      objValues.personId = props.patientObj.personId;\r\n      objValues.prepEligibilityUuid = patientDto.uuid;\r\n      objValues.targetGroup = targetGroupValue;\r\n      setSaving(true);\r\n      if (props.activeContent && props.activeContent.actionType) {\r\n        axios\r\n          .put(\r\n            `${baseUrl}prep-enrollment/${props.activeContent.id}`,\r\n            objValues,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          )\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            props.PatientObject();\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      } else {\r\n        axios\r\n          .post(`${baseUrl}prep/enrollment`, objValues, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then(response => {\r\n            setSaving(false);\r\n            props.patientObj.prepCount = '1';\r\n            toast.success('PrEP enrolment saved successfully!✔', {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n            props.setActiveContent({\r\n              ...props.activeContent,\r\n              route: 'recent-history',\r\n            });\r\n          })\r\n          .catch(error => {\r\n            setSaving(false);\r\n            toast.error('Something went wrong❌');\r\n          });\r\n      }\r\n    } else {\r\n      toast.error('All fields are required❌', {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <form>\r\n            <div className=\"row\">\r\n              <h2>PrEP Enrollment </h2>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"uniqueId\">\r\n                    Unique Client's ID <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"uniqueId\"\r\n                    id=\"uniqueId\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.uniqueId}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.uniqueId !== '' ? (\r\n                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"ancUniqueArtNo\"\r\n                    id=\"ancUniqueArtNo\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.ancUniqueArtNo}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  />\r\n                  {errors.ancUniqueArtNo !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.ancUniqueArtNo}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date enrolled in PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateEnrolled\"\r\n                    id=\"dateEnrolled\"\r\n                    value={objValues.dateEnrolled}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateEnrolled !== '' ? (\r\n                    <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label for=\"entryPointId\">\r\n                    PrEP Risk Type <span style={{ color: 'red' }}> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskType\"\r\n                    id=\"riskType\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.riskType}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {prepRisk.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.riskType !== '' ? (\r\n                    <span className={classes.error}>{errors.riskType}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>HIV Testing Point </Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestingPoint\"\r\n                    id=\"hivTestingPoint\"\r\n                    onChange={handleInputChange}\r\n                    value={objValues.hivTestingPoint}\r\n                    disabled={disabledField}\r\n                    style={{ border: '1px solid #014D88' }}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                    {entryPoint.map(value => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Date of last HIV Negative test</Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateOfLastHivNegativeTest\"\r\n                    id=\"dateOfLastHivNegativeTest\"\r\n                    value={objValues.dateOfLastHivNegativeTest}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateOfLastHivNegativeTest !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.dateOfLastHivNegativeTest}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Date Referred for PrEP{' '}\r\n                    <span style={{ color: 'red' }}> *</span>{' '}\r\n                  </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"date\"\r\n                    onKeyDown={e => e.preventDefault()}\r\n                    name=\"dateReferred\"\r\n                    id=\"dateReferred\"\r\n                    value={objValues.dateReferred}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    min={\r\n                      patientDto && patientDto.visitDate\r\n                        ? patientDto.visitDate\r\n                        : ''\r\n                    }\r\n                    max={moment(new Date()).format('YYYY-MM-DD')}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.dateReferred !== '' ? (\r\n                    <span className={classes.error}>{errors.dateReferred}</span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"supporterName\"\r\n                    id=\"supporterName\"\r\n                    value={objValues.supporterName}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterName !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterName}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>Relationship </Label>\r\n                  <Input\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"supporterRelationshipType\"\r\n                    id=\"supporterRelationshipType\"\r\n                    value={objValues.supporterRelationshipType}\r\n                    onChange={handleInputChange}\r\n                    style={{\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.2rem',\r\n                    }}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n\r\n                    {relatives.map(value => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.supporterRelationshipType !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterRelationshipType}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <Label>PrEP Supporter Phone Number</Label>\r\n                  <PhoneInput\r\n                    containerStyle={{\r\n                      width: '100%',\r\n                      border: '1px solid #014D88',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    style={{ borderRadius: '0.25rem !important' }}\r\n                    inputStyle={{\r\n                      width: '100%',\r\n                      borderRadius: '0.25rem !important',\r\n                    }}\r\n                    country={'ng'}\r\n                    placeholder=\"(234)7099999999\"\r\n                    maxLength={5}\r\n                    name=\"supporterPhone\"\r\n                    id=\"supporterPhone\"\r\n                    masks={{ ng: '...-...-....', at: '(....) ...-....' }}\r\n                    value={objValues.supporterPhone}\r\n                    onChange={e => {\r\n                      checkPhoneNumberBasic(e, 'supporterPhone');\r\n                    }}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.supporterPhone !== '' ? (\r\n                    <span className={classes.error}>\r\n                      {errors.supporterPhone}\r\n                    </span>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n\r\n            {saving ? <Spinner /> : ''}\r\n            <br />\r\n            {props.activeContent &&\r\n            props.activeContent.actionType === 'update' ? (\r\n              <>\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  hidden={disabledField}\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    border: '1px solid #014D88',\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  disabled={saving}\r\n                >\r\n                  {!saving ? (\r\n                    <span style={{ textTransform: 'capitalize' }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: 'capitalize' }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!disabledField && (\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ backgroundColor: '#014d88' }}\r\n                    onClick={handleSubmit}\r\n                    disabled={saving}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>Save</span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Saving...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n                )}\r\n              </>\r\n            )}\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory';\r\nimport ClinicVisit from '../Consultation/Index';\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric';\r\nimport axios from 'axios';\r\nimport { url as baseUrl, token } from './../../../api';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing}px ${theme.spacing(2)}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [patientDetail, setPatientDetail] = useState('');\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: 'recent-history',\r\n    id: '',\r\n    activeTab: 'home',\r\n    actionType: 'create',\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n\r\n  const patientObjLocation =\r\n    history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  const prepId =\r\n    history.location && history.location.state\r\n      ? history.location.state.prepId\r\n      : {};\r\n\r\n  useEffect(() => {\r\n    PatientObject();\r\n  }, []);\r\n\r\n  async function PatientObject() {\r\n    axios\r\n      .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setPatientDetail(response.data);\r\n      })\r\n      .catch(error => {});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: '0px', marginBottom: '-10px' }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {' '}\r\n              <Link to={'/'}>PrEP /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            activeContent={activeContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObjLocation}\r\n            setActiveContent={setActiveContent}\r\n            patientDetail={patientDetail}\r\n          />\r\n          <br />\r\n\r\n          {activeContent.route === 'recent-history' && (\r\n            <RecentHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'biometrics' && (\r\n            <Biometrics\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'consultation' && (\r\n            <ClinicVisit\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-commencement' && (\r\n            <PrEPCommencementForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-interruptions' && (\r\n            <PrEPDiscontinuationsInterruptions\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-screening' && (\r\n            <PrEPEligibiltyScreeningForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              patientDetail={patientDetail}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'prep-visit' && (\r\n            <PrEPVisit PatientObject={PatientObject} />\r\n          )}\r\n          {activeContent.route === 'prep-registration' && (\r\n            <PrEPRegistrationForm\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n              prepId={prepId}\r\n              PatientObject={PatientObject}\r\n            />\r\n          )}\r\n          {activeContent.route === 'patient-history' && (\r\n            <PatientHistory\r\n              patientObj={patientObjLocation}\r\n              setActiveContent={setActiveContent}\r\n              activeContent={activeContent}\r\n            />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport MatButton from '@material-ui/core/Button';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormGroup, Label, Spinner, Input, Form } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport * as moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { TiArrowBack } from 'react-icons/ti';\r\nimport { useForm } from 'react-hook-form';\r\nimport { token, url as baseUrl } from '../../../api';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\nimport { getValue } from '@syncfusion/ej2-base';\r\nimport './patient.css';\r\n// import Form from 'react-bootstrap/Form';\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  error: {\r\n    color: '#f85032',\r\n    fontSize: '12.8px',\r\n  },\r\n}));\r\n\r\nconst UserRegistration = props => {\r\n  console.log(props);\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: '',\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: '',\r\n    genderId: '',\r\n    identifier: '',\r\n    otherName: '',\r\n    maritalStatusId: '',\r\n    educationId: '',\r\n    employmentStatusId: '',\r\n    dateOfRegistration: '',\r\n    isDateOfBirthEstimated: null,\r\n    age: '',\r\n    phoneNumber: '',\r\n    altPhonenumber: '',\r\n    dob: '',\r\n    countryId: '',\r\n    stateId: '',\r\n    district: '',\r\n    landmark: '',\r\n    sexId: '',\r\n    ninNumber: '',\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: '',\r\n    phone: '',\r\n    firstName: '',\r\n    email: '',\r\n    relationshipId: '',\r\n    lastName: '',\r\n    middleName: '',\r\n  });\r\n\r\n  const [today, setToday] = useState(\r\n    new Date().toISOString().substr(0, 10).replace('T', ' ')\r\n  );\r\n  const [contacts, setContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [editRelative, setEditRelative] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: '',\r\n    hivEnrollment: '',\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //HIV INFORMATION\r\n  const [femaleStatus, setfemaleStatus] = useState(false);\r\n  //const [values, setValues] = useState([]);\r\n  const [objValues, setObjValues] = useState({\r\n    id: '',\r\n    uniqueId: '',\r\n    dateOfRegistration: '',\r\n    entryPointId: '',\r\n    facilityName: '',\r\n    statusAtRegistrationId: '',\r\n    dateConfirmedHiv: '',\r\n    sourceOfReferrerId: '',\r\n    enrollmentSettingId: '',\r\n    pregnancyStatusId: '',\r\n    dateOfLpm: '',\r\n    tbStatusId: '',\r\n    targetGroupId: '',\r\n    ovc_enrolled: '',\r\n    ovcNumber: '',\r\n    householdNumber: '',\r\n    referredToOVCPartner: '',\r\n    dateReferredToOVCPartner: '',\r\n    referredFromOVCPartner: '',\r\n    dateReferredFromOVCPartner: '',\r\n    careEntryPointOther: '',\r\n  });\r\n  const [carePoints, setCarePoints] = useState([]);\r\n  const [sourceReferral, setSourceReferral] = useState([]);\r\n  const [hivStatus, setHivStatus] = useState([]);\r\n  const [enrollSetting, setEnrollSetting] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [kP, setKP] = useState([]);\r\n  const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n  //set ro show the facility name field if is transfer in\r\n  const [transferIn, setTransferIn] = useState(false);\r\n  // display the OVC number if patient is enrolled into OVC\r\n  const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n  //Input fields to hidden base on some conditions\r\n  const [hideTargetGroup, setHideTargetGroup] = useState('false');\r\n\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  let patientObj = {};\r\n  patientId = locationState ? locationState.patientId : null;\r\n  patientObj = locationState ? locationState.patientObj : {};\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    CareEntryPoint();\r\n    SourceReferral();\r\n    HivStatus();\r\n    EnrollmentSetting();\r\n    TBStatus();\r\n    KP();\r\n    PregnancyStatus();\r\n    GetCountry();\r\n    if (patientObj) {\r\n      const contacts = patientObj.contact ? patientObj.contact : [];\r\n      //setContacts(contacts.contact);\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts.contact &&\r\n        contacts.contact.length > 0 &&\r\n        contacts.contact.map(x => {\r\n          const contactInfo = {\r\n            address: x.address.line[0],\r\n            phone: x.contactPoint.value,\r\n            firstName: x.firstName,\r\n            email: '',\r\n            relationshipId: x.relationshipId,\r\n            lastName: x.surname,\r\n            middleName: x.otherName,\r\n          };\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      setContacts(newConatctsInfo);\r\n      const identifiers = patientObj.identifier;\r\n      const address = patientObj.address;\r\n      const contactPoint = patientObj.contactPoint;\r\n      const hospitalNumber = identifiers.identifier.find(\r\n        obj => obj.type == 'HospitalNumber'\r\n      );\r\n      const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n      const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n      const altphone = contactPoint.contactPoint.find(\r\n        obj => obj.type == 'altphone'\r\n      );\r\n      const country =\r\n        address && address.address && address.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n      //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n      basicInfo.dob = patientObj.dateOfBirth;\r\n      basicInfo.firstName = patientObj.firstName;\r\n      basicInfo.dateOfRegistration = patientObj.dateOfRegistration;\r\n      basicInfo.middleName = patientObj.otherName;\r\n      basicInfo.lastName = patientObj.surname;\r\n      basicInfo.hospitalNumber = hospitalNumber ? hospitalNumber.value : '';\r\n      basicInfo.maritalStatusId = patientObj.maritalStatus.id;\r\n      basicInfo.employmentStatusId = patientObj.employmentStatus.id;\r\n      basicInfo.genderId = patientObj.gender ? patientObj.gender.id : null;\r\n      basicInfo.sexId = patientObj.sex;\r\n      basicInfo.educationId = patientObj.education.id;\r\n      basicInfo.phoneNumber = phone && phone.value ? phone.value : '';\r\n      basicInfo.altPhonenumber =\r\n        altphone && altphone.value ? altphone.value : '';\r\n      basicInfo.email = email && email.value ? email.value : '';\r\n      basicInfo.address = country && country.city ? country.city : '';\r\n      basicInfo.landmark = country.line[0];\r\n      basicInfo.countryId = country.countryId;\r\n      setStateByCountryId(country.countryId);\r\n      getProvincesId(country.stateId);\r\n      basicInfo.stateId = country.stateId;\r\n      basicInfo.district = country.district;\r\n      setObjValues(patientObj.enrollment);\r\n      const patientAge = calculate_age(\r\n        moment(patientObj.dateOfBirth).format('DD-MM-YYYY')\r\n      );\r\n      basicInfo.age = patientAge;\r\n      setfemaleStatus(patientObj.sex === 'Female' ? true : false);\r\n      basicInfo.ninNumber = patientObj.ninNumber;\r\n    }\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      alert('Date of registration can not be earlier than date of birth');\r\n    }\r\n  }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data);\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data);\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async parentId => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Calculate Date of birth\r\n  const calculate_age = dob => {\r\n    var today = new Date();\r\n    var dateParts = dob.split('-');\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + ' month(s)';\r\n    }\r\n    return age_now;\r\n  };\r\n  //Get States from selected country\r\n  const getStates = e => {\r\n    const getCountryId = e.target.value;\r\n\r\n    setStateByCountryId(getCountryId);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId(getCountryId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setStates(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n\r\n  //fetch province\r\n  const getProvinces = e => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  function getProvincesId(getStateId) {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then(response => {\r\n        setProvinces(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = e => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      const m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age_now--;\r\n      }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: '' });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n  };\r\n  const handleDateOfBirthChange = e => {\r\n    if (e.target.value == 'Actual') {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value == 'Estimated') {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = e => {\r\n    if (!ageDisabled && e.target.value) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(e.target.value * -1, 'years');\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format('YYYY-MM-DD');\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: e.target.value });\r\n  };\r\n  //End of Date of Birth and Age handling\r\n  //Handle Input Change for Basic Infor\r\n  const handleInputChangeBasic = e => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n    //manupulate inpute fields base on gender/sex\r\n    if (e.target.name === 'sexId' && e.target.value === 'Female') {\r\n      setfemaleStatus(true);\r\n    }\r\n    if (e.target.name === 'firstName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'lastName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'middleName' && e.target.value !== '') {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === 'hospitalNumber' && e.target.value !== '') {\r\n      async function getCharacters() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'text/plain',\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          setHospitalNumStatus(false);\r\n          setHospitalNumStatus2(true);\r\n        }\r\n      }\r\n      getCharacters();\r\n    }\r\n  };\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  const handleCancel = () => {\r\n    history.push({ pathname: '/' });\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? '' : 'First Name is required';\r\n    temp.lastName = relatives.lastName ? '' : 'Last Name  is required.';\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? ''\r\n      : 'Relationship Type is required.';\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = e => {\r\n    if (validateRelatives()) {\r\n      setContacts([...contacts, relatives]);\r\n    }\r\n  };\r\n  const handleDeleteRelative = index => {\r\n    contacts.splice(index, 1);\r\n    setContacts([...contacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    contacts.splice(index, 1);\r\n  };\r\n  const getRelationship = relationshipId => {\r\n    const relationship = relationshipOptions.find(\r\n      obj => obj.id == relationshipId\r\n    );\r\n    return relationship ? relationship.display : '';\r\n  };\r\n  const handleInputChangeRelatives = e => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? '' : 'First Name is required';\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? ''\r\n      : 'Hospital Number  is required.';\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n    //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n    temp.lastName = basicInfo.lastName ? '' : 'Last Name  is required.';\r\n    temp.sexId = basicInfo.sexId ? '' : 'Sex is required.';\r\n    temp.dateOfRegistration1 = basicInfo.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.educationId = basicInfo.educationId ? '' : 'Education is required.';\r\n    temp.address = basicInfo.address ? '' : 'Address is required.';\r\n    temp.phoneNumber = basicInfo.phoneNumber\r\n      ? ''\r\n      : 'Phone Number  is required.';\r\n    temp.countryId = basicInfo.countryId ? '' : 'Country is required.';\r\n    temp.stateId = basicInfo.stateId ? '' : 'State is required.';\r\n    temp.district = basicInfo.district ? '' : 'Province/LGA is required.';\r\n    //HIV FORM VALIDATION\r\n    temp.targetGroupId = objValues.targetGroupId\r\n      ? ''\r\n      : 'Target group is required.';\r\n    temp.dateConfirmedHiv = objValues.dateConfirmedHiv\r\n      ? ''\r\n      : 'date confirm HIV is required.';\r\n    temp.sourceOfReferrerId = objValues.sourceOfReferrerId\r\n      ? ''\r\n      : 'Source of referrer is required.';\r\n    temp.enrollmentSettingId = objValues.enrollmentSettingId\r\n      ? ''\r\n      : 'Enrollment Setting Number  is required.';\r\n    temp.tbStatusId = objValues.tbStatusId ? '' : 'TB status is required.';\r\n    temp.statusAtRegistrationId = objValues.statusAtRegistrationId\r\n      ? ''\r\n      : 'Status at Registration is required.';\r\n    temp.entryPointId = objValues.entryPointId\r\n      ? ''\r\n      : 'Care Entry Point is required.';\r\n    temp.dateOfRegistration = objValues.dateOfRegistration\r\n      ? ''\r\n      : 'Date of Registration is required.';\r\n    temp.uniqueId = objValues.uniqueId ? '' : 'Unique ID is required.';\r\n\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every(x => x == '');\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const getSexId = genders.find(x => x.display === basicInfo.sexId); //get patient sex ID by filtering the request\r\n    basicInfo.sexId = getSexId.id;\r\n    if (validate()) {\r\n      let newConatctsInfo = [];\r\n      //Manipulate relatives contact  address:\"\",\r\n      const actualcontacts =\r\n        contacts &&\r\n        contacts.length > 0 &&\r\n        contacts.map(x => {\r\n          const contactInfo = {\r\n            address: {\r\n              line: [x.address],\r\n            },\r\n            contactPoint: {\r\n              type: 'phone',\r\n              value: x.phone,\r\n            },\r\n            firstName: x.firstName,\r\n            fullName: x.firstName + ' ' + x.middleName + ' ' + x.lastName,\r\n            relationshipId: x.relationshipId,\r\n            surname: x.lastName,\r\n            otherName: x.middleName,\r\n          };\r\n\r\n          newConatctsInfo.push(contactInfo);\r\n        });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.address,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: '',\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: newConatctsInfo,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.genderId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: 'HospitalNumber',\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth == 'Actual' ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n        const phone = {\r\n          type: 'phone',\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: 'email',\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: 'altphone',\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n        patientDTO.hivEnrollment = objValues;\r\n        const response = await axios.put(\r\n          `${baseUrl}hiv/patient/${patientObj.id}`,\r\n          patientDTO,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        toast.success('Patient Updated successfully! ✔');\r\n        history.push('/');\r\n      } catch (error) {\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data && error.response.data.apierror.message !== ''\r\n              ? error.response.data.apierror.message\r\n              : 'Something went wrong, please try again';\r\n          toast.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = value => {\r\n    const result = value.replace(/[^a-z]/gi, '');\r\n    return result;\r\n  };\r\n\r\n  const CareEntryPoint = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setCarePoints(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of Source of Referral\r\n  const SourceReferral = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setSourceReferral(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const HivStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setHivStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const EnrollmentSetting = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setEnrollSetting(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of HIV STATUS ENROLLMENT\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const KP = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setKP(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get list of KP\r\n  const PregnancyStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then(response => {\r\n        //console.log(response.data);\r\n        setPregnancyStatus(response.data);\r\n      })\r\n      .catch(error => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === 'entryPointId') {\r\n      if (e.target.value === '21') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n    if (e.target.name === 'pregnancyStatusId') {\r\n      console.log(e.target.value);\r\n      if (e.target.value === '72') {\r\n        setTransferIn(true);\r\n      } else {\r\n        setTransferIn(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const limit = 10;\r\n    setRelatives({ ...relatives, [inputName]: e.slice(0, limit) });\r\n  };\r\n  const checkPhoneNumberBasic = (e, inputName) => {\r\n    const limit = 10;\r\n\r\n    setBasicInfo({ ...basicInfo, [inputName]: e.slice(0, limit) });\r\n  };\r\n  //Handle CheckBox\r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      setOvcEnrolled(true);\r\n    } else {\r\n      setOvcEnrolled(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Card className={classes.cardBottom}>\r\n        <CardContent>\r\n          <Link\r\n            to={{\r\n              pathname: '/patient-history',\r\n              state: { patientObj: patientObj },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end ms-1\"\r\n              style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n              startIcon={<TiArrowBack />}\r\n            >\r\n              <span style={{ textTransform: 'capitalize', color: '#fff' }}>\r\n                Back{' '}\r\n              </span>\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Edit User Information\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration*{' '}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            value={basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.dateOfRegistration1 !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration1}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">Hospital Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            disabled={\r\n                              locationState.actionType === 'update'\r\n                                ? false\r\n                                : true\r\n                            }\r\n                          />\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {errors.hospitalNumber !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {'Hospital number already exist'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                          {hospitalNumStatus2 === true ? (\r\n                            <span className={classes.success}>\r\n                              {'Hospital number is OK.'}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">EMR Number* </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"emrNumber\"\r\n                            id=\"emrNumber\"\r\n                            disabled=\"true\"\r\n                            value={Math.floor(Math.random() * 1094328)}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">First Names *</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.firstName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Last Name *</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                          {errors.lastName !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Sex *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.display}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                //disabled={locationState.actionType==='update'? false : true}\r\n                                onChange={e => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />{' '}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            onKeyDown={e => e.preventDefault()}\r\n                            name=\"dob\"\r\n                            id=\"dob\"\r\n                            max={today}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            name=\"age\"\r\n                            id=\"age\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={'row'}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Employment Status *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Education Level *</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value={''}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            National Identity Number (NIN){' '}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"nin\"\r\n                            id=\"nin\"\r\n                            value={basicInfo.ninNumber}\r\n                            //onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Phone Number *</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          maxLength={5}\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          value={basicInfo.phoneNumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'phoneNumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.phoneNumber !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        <PhoneInput\r\n                          containerStyle={{\r\n                            width: '100%',\r\n                            border: '1px solid #014D88',\r\n                          }}\r\n                          inputStyle={{ width: '100%', borderRadius: '0px' }}\r\n                          country={'ng'}\r\n                          placeholder=\"(234)7099999999\"\r\n                          value={basicInfo.altPhonenumber}\r\n                          onChange={e => {\r\n                            checkPhoneNumberBasic(e, 'altPhonenumber');\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Country *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value={''}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>State *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={getProvinces}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Province/District/LGA *</Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={'row'}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Street Address*</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={basicInfo.address}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.address !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.address}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {contacts && contacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: '100%' }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {contacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.firstName +\r\n                                      ' ' +\r\n                                      item.middleName +\r\n                                      ' ' +\r\n                                      item.lastName}\r\n                                  </td>\r\n                                  <td>{item.phone}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                      onClick={() =>\r\n                                        handleEditRelative(item, index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"edit\" />\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={e => handleDeleteRelative(index)}\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type *\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  >\r\n                                    <option value={''}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">First Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.firstName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name *</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {errors.lastName !== '' ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.lastName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    ''\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <PhoneInput\r\n                                    containerStyle={{\r\n                                      width: '100%',\r\n                                      border: '1px solid #014D88',\r\n                                    }}\r\n                                    inputStyle={{\r\n                                      width: '100%',\r\n                                      borderRadius: '0px',\r\n                                    }}\r\n                                    country={'ng'}\r\n                                    placeholder=\"(234)7099999999\"\r\n                                    name=\"phone\"\r\n                                    value={relatives.phone}\r\n                                    id=\"phone\"\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    onChange={e => {\r\n                                      checkPhoneNumber(e.slice(0, 10), 'phone');\r\n                                    }}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address}\r\n                                    style={{\r\n                                      border: '1px solid #014D88',\r\n                                      borderRadius: '0.2rem',\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: '#014d88',\r\n                    color: '#fff',\r\n                    fontWeight: 'bolder',\r\n                    borderRadius: '0.2rem',\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: '#fff' }}>\r\n                    HIV Enrollment\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"uniqueId\">Unique ID No * </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"uniqueId\"\r\n                          id=\"uniqueId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.uniqueId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          disabled\r\n                        />\r\n                        {errors.uniqueId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.uniqueId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"dateOfRegistration\">\r\n                          Date of Enrollment *{' '}\r\n                        </Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateOfRegistration\"\r\n                          id=\"dateOfRegistration\"\r\n                          min={basicInfo.dateOfRegistration}\r\n                          max={moment(new Date()).format('YYYY-MM-DD')}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateOfRegistration}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateOfRegistration !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateOfRegistration}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"entryPointId\"\r\n                          id=\"entryPointId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.entryPointId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> </option>\r\n                          {carePoints.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.entryPointId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.entryPointId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      {transferIn === true ? (\r\n                        <FormGroup>\r\n                          <Label>Facility Name</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"facilityName\"\r\n                            id=\"facilityName\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityName}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          />\r\n                        </FormGroup>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>HIV Status at Registration *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"statusAtRegistrationId\"\r\n                          id=\"statusAtRegistrationId\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.statusAtRegistrationId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {hivStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.statusAtRegistrationId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.statusAtRegistrationId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Date of Confirmed HIV Test *</Label>\r\n                        <Input\r\n                          type=\"date\"\r\n                          onKeyDown={e => e.preventDefault()}\r\n                          name=\"dateConfirmedHiv\"\r\n                          id=\"dateConfirmedHiv\"\r\n                          min={basicInfo.dob}\r\n                          max={objValues.dateOfRegistration}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.dateConfirmedHiv}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        {errors.dateConfirmedHiv !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.dateConfirmedHiv}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Source of Referral *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"sourceOfReferrerId\"\r\n                          id=\"sourceOfReferrerId\"\r\n                          value={objValues.sourceOfReferrerId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\">Select </option>\r\n                          {sourceReferral.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.sourceOfReferrerId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.sourceOfReferrerId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>Enrollment Setting *</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"enrollmentSettingId\"\r\n                          id=\"enrollmentSettingId\"\r\n                          value={objValues.enrollmentSettingId}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          onChange={handleInputChange}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n\r\n                          {enrollSetting.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.enrollmentSettingId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.enrollmentSettingId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {femaleStatus && basicInfo.age > 9 && (\r\n                      <>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                          <FormGroup>\r\n                            <Label> Pregnancy </Label>\r\n                            <Input\r\n                              type=\"select\"\r\n                              name=\"pregnancyStatusId\"\r\n                              id=\"pregnancyStatusId\"\r\n                              value={objValues.pregnancyStatusId}\r\n                              style={{\r\n                                border: '1px solid #014D88',\r\n                                borderRadius: '0.2rem',\r\n                              }}\r\n                              onChange={handleInputChange}\r\n                              //disabled={locationState.actionType==='update'? false : true}\r\n                            >\r\n                              <option value=\"\">Select </option>\r\n                              {pregnancyStatus.map(value => (\r\n                                <option key={value.id} value={value.id}>\r\n                                  {value.display}\r\n                                </option>\r\n                              ))}\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </div>\r\n                        {objValues.pregnancyStatusId !== '72' && (\r\n                          <>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                              <FormGroup>\r\n                                <Label>Date of LMP </Label>\r\n                                <Input\r\n                                  type=\"date\"\r\n                                  onKeyDown={e => e.preventDefault()}\r\n                                  name=\"dateOfLpm\"\r\n                                  id=\"dateOfLpm\"\r\n                                  max={today}\r\n                                  onChange={handleInputChange}\r\n                                  value={objValues.dateOfLpm}\r\n                                  style={{\r\n                                    border: '1px solid #014D88',\r\n                                    borderRadius: '0.2rem',\r\n                                  }}\r\n                                  //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                              </FormGroup>\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>TB Status * </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"tbStatusId\"\r\n                          id=\"tbStatusId\"\r\n                          value={objValues.tbStatusId}\r\n                          onChange={handleInputChange}\r\n                          style={{\r\n                            border: '1px solid #014D88',\r\n                            borderRadius: '0.2rem',\r\n                          }}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        >\r\n                          <option value=\"\"> Select</option>\r\n                          {tbStatus.map(value => (\r\n                            <option key={value.id} value={value.id}>\r\n                              {value.display}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                        {errors.tbStatusId !== '' ? (\r\n                          <span className={classes.error}>\r\n                            {errors.tbStatusId}\r\n                          </span>\r\n                        ) : (\r\n                          ''\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    {hideTargetGroup === 'false' ? (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label>Target Group *</Label>\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"targetGroupId\"\r\n                            id=\"targetGroupId\"\r\n                            value={objValues.targetGroupId}\r\n                            onChange={handleInputChange}\r\n                            style={{\r\n                              border: '1px solid #014D88',\r\n                              borderRadius: '0.2rem',\r\n                            }}\r\n                            //disabled={locationState.actionType==='update'? false : true}\r\n                          >\r\n                            <option value=\"\"> Select</option>\r\n                            {kP.map(value => (\r\n                              <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                          {errors.targetGroupId !== '' ? (\r\n                            <span className={classes.error}>\r\n                              {errors.targetGroupId}\r\n                            </span>\r\n                          ) : (\r\n                            ''\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <div className=\"form-group mb-3 col-md-3\">\r\n                      <div className=\"form-check custom-checkbox ml-1 \">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"form-check-input\"\r\n                          name=\"ovc_enrolled\"\r\n                          id=\"ovc_enrolled\"\r\n                          onChange={handleCheckBox}\r\n                          //disabled={locationState.actionType==='update'? false : true}\r\n                        />\r\n                        <label\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                          Enrolled into OVC?\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                    {basicInfo.age <= 14 && (\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <div className=\"form-check custom-checkbox ml-1 \">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            name=\"ovc_enrolled\"\r\n                            id=\"ovc_enrolled\"\r\n                            onChange={handleCheckBox}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"basic_checkbox_1\"\r\n                          >\r\n                            Enrolled into OVC?\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n\r\n                    {ovcEnrolled === true && (\r\n                      <>\r\n                        <div className=\"row\">\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Household Unique Number</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"householdNumber\"\r\n                                id=\"householdNumber\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.householdNumber}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\"></div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredToOVCPartner\"\r\n                                id=\"referredToOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredToOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred To OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredToOVCPartner\"\r\n                                id=\"dateReferredToOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredToOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                name=\"referredFromOVCPartner\"\r\n                                id=\"referredFromOVCPartner\"\r\n                                required={ovcEnrolled}\r\n                                onChange={handleInputChange}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                                value={objValues.referredFromOVCPartner}\r\n                              />\r\n                            </FormGroup>\r\n                          </div>\r\n                          <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                              <Label>Date Referred From OVC Partner</Label>\r\n                              <Input\r\n                                type=\"date\"\r\n                                onKeyDown={e => e.preventDefault()}\r\n                                name=\"dateReferredFromOVCPartner\"\r\n                                id=\"dateReferredFromOVCPartner\"\r\n                                min={basicInfo.dob}\r\n                                max={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                value={objValues.dateReferredFromOVCPartner}\r\n                                style={{\r\n                                  border: '1px solid #014D88',\r\n                                  borderRadius: '0.2rem',\r\n                                }}\r\n                              />\r\n                              {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                            </FormGroup>\r\n                          </div>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* END OF HIV ENROLLEMENT FORM */}\r\n              {saving ? <Spinner /> : ''}\r\n\r\n              <br />\r\n\r\n              {locationState.actionType === 'update' ? (\r\n                <>\r\n                  <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{ backgroundColor: '#014d88', fontWeight: 'bolder' }}\r\n                  >\r\n                    {!saving ? (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Update\r\n                      </span>\r\n                    ) : (\r\n                      <span style={{ textTransform: 'capitalize' }}>\r\n                        Updating...\r\n                      </span>\r\n                    )}\r\n                  </MatButton>\r\n\r\n                  <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={handleCancel}\r\n                    style={{ backgroundColor: '#992E62' }}\r\n                  >\r\n                    <span\r\n                      style={{ textTransform: 'capitalize', color: '#fff' }}\r\n                    >\r\n                      Cancel\r\n                    </span>\r\n                  </MatButton>\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from 'react';\r\nimport { MemoryRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css';\r\nimport './../src/main/webapp/css/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home';\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div style={{ marginTop: '3em' }}>\r\n      <Router>\r\n        <div>\r\n          <ToastContainer />\r\n          {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n          <Switch>\r\n            <Route path=\"/patient-dashboard\">\r\n              {/* This is the component to access patient dashboard */}\r\n              <PatientDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/update-patient\">\r\n              <UpdatePatientEnrollment />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              {/* This is the entry point to the application */}\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}